{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5ef8d737-fd7b-4668-92b9-b92c666dc903",
   "metadata": {},
   "source": [
    "# <center> Python简介"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db90f299-4409-4776-aee0-220263a2b232",
   "metadata": {},
   "source": [
    "## Python是什么"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62685302-c4cf-48a9-bcf9-41dd44880278",
   "metadata": {},
   "source": [
    "Python是一门强大的编程语言，它简单易学，提供众多高级数据结构，让我们可以面向对象编程。Python是一门解释型语言，语法优雅贴近人类自然语言，符合人类的认知习惯。\n",
    "\n",
    "Python支持跨平台，能够运行在所有的常见操作系统上。Python在近期热门的大数据、科学研究、机器学习、人工智能等领域大显身手，并且几乎在所有领域都有应用，因此学习它十分划算。\n",
    "\n",
    "Python由荷兰人吉多·范罗苏姆（Guido van Rossum）创造，第一版发布于1991年。关于为何有Python这个项目，吉多·范罗苏姆在1996年曾写道：\n",
    "\n",
    "    6年前，也就是1989年12月，我在寻找一门“课余”编程项目来打发圣诞节前后的时间。到时我的办公室会关门，而我只有一台家用电脑，没有什么其他东西。我决定为我当时正在构思的新的脚本语言写一个解释器，它是ABC语言的后代，对UNIX/C程序员会有吸引力。当时我对项目叫什么名字并不太在乎，由于我是《蒙提·派森的飞行马戏团》的狂热爱好者，我就选择了用Python作为项目的名字。\n",
    "\n",
    "《蒙提·派森的飞行马戏团》（Monty Python's Flying Circus）是BBC播出的英国电视喜剧集，蒙提·派森（Monty Python）是创作该剧的六人喜剧团队，由此可见，Python虽原意为蟒蛇，但吉多·范罗苏姆用它来命名一门开发语言，并非出于他对蟒蛇的喜爱，大家不必恐惧。\n",
    "\n",
    "Python 2.0于2000年10月16日发布。Python 3.0于2008年12月3日发布，此版不完全兼容之前的Python源代码。目前Python的正式版已经更新到3.12版本，且官方不再维护2.0版本，因此建议初学者（包括已经在学习的）至少从3.6版本开始学习，之后的版本功能差异不会太大。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c3a0eec-fb61-4a47-9d8b-b9e3019e84a0",
   "metadata": {},
   "source": [
    "## Python的应用"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3566a767-9d12-4df0-948c-3b58b92eab67",
   "metadata": {},
   "source": [
    "Python的应用范围非常广泛，几乎在所有领域它都能起到作用，这里列举一些典型的和常见的应用方向。YouTube、Google、Yahoo!、NASA都在内部大量使用Python。\n",
    "\n",
    "1. Web开发\n",
    "- 简单来说，Web开发就是开发网络站点，包括PC站点、移动站点（m站）、App、小程序的数据接口。一些流行的Python框架，如Django、Flask、Tornado等，可以让我们在做Web开发时省时又省力。知乎、豆瓣等就是使用Python开发的知名网站。\n",
    "   \n",
    "2. 网络爬虫爬虫\n",
    "- 模拟用户登录网站，爬取我们需要的数据，只要你能看到的信息它都可以批量、定时、快速地爬取下来并整理好。爬虫还可以帮你注册、登录、提交数据。Python自带的urllib库以及第三方的requests、Scrappy都是做这件事的高手。\n",
    "\n",
    "3. 计算与数据分析\n",
    "- 研究人员需要对数据进行分析处理，NumPy、SciPy、Matplotlib等第三方库可以进行科学计算。数据处理是我们工作学习中的日常，各种Excel表格都可以用Python方便地进行处理，而且既高效又能实现批量和自动化，我们不用再每天做重复的工作。提供包括可视化在内的一揽子解决方案的Pandas越来越受欢迎，成为Python培训公司的吸金课程。常见的数据可视化库有Matplotlib、Ploty、Seaborn等，此外，基于数据可视化前端项目Echarts的pyecharts也越来越受欢迎。\n",
    "\n",
    "4. 界面（GUI）开发\n",
    "- Python自带的Tkinter库支持GUI开发，让用户通过图形界面进行交互。还可以选择wxPython或PyQt等三方GUI库开发跨平台的桌面软件。通过PyInstaller将程序发布为独立的安装程序包，即可在Windows、masOS等平台上安装和运行。\n",
    "\n",
    "5. 人工智能\n",
    "- 近年来，机器学习、神经网络、深度学习等人工智能领域越来越离不开Python，Python已经成为这些领域的主流编程语言。Facebook的神经网络框架PyTorch和Google的TensorFlow都有Python语言版本。scikit-learn是机器学习领域最知名的Python库之一。\n",
    "\n",
    "6. 游戏开发\n",
    "- Python可以编写一些小游戏，当然在大型游戏中也扮演着重要的角色，如很多大型游戏用C++编写图形显示等高性能模块，用Python编写一些逻辑模块。PyGame库可用于直接开发一些简单游戏，其他的Python游戏库还有Turtle、Pymunk、Arcade、Pyglet及Cocos2d等。知名游戏Sid Meier’s Civilization（《文明》）就是使用Python实现的。\n",
    "\n",
    "7. 图形图像\n",
    "- Python可以处理图像，做视频渲染。众多工业级大型软件开放了Python接口，供使用者自己编辑处理程序。图形图像可以应用在医学影像分析、影视制作、人脸识别、无人驾驶等领域。相关的库包有PIL、OpenCV、SimpleITK、Pydicom等。\n",
    "\n",
    "8. 其他\n",
    "- Python是IT行业运维人员、黑客的主要工作语言，云计算搭建、用PyRo工具包进行机器人控制编程已经有众多的业务实践。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "273b3864-9d12-4588-997f-a58119b12895",
   "metadata": {},
   "source": [
    "## Python精选案例展示"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa7a0133-eccf-4a77-82df-93dbfb29f9b0",
   "metadata": {},
   "source": [
    "### 案例1：使用 GitHub 的搜索 API 来获取 Python 语言的热门仓库。\n",
    "\n",
    "这个例子展示了如何使用 API 来获取数据，这通常比直接抓取 HTML 页面更可靠:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "78f63fe9-3ff7-4751-a89d-0235ad6452fb",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fetched page 1, total repos: 30\n",
      "Fetched page 2, total repos: 60\n",
      "Fetched page 3, total repos: 90\n",
      "Fetched page 4, total repos: 120\n",
      "Fetched page 5, total repos: 150\n",
      "\n",
      "Top Python Repositories on GitHub:\n",
      "1. public-apis - Stars: 311827\n",
      "   Description: A collective list of free APIs\n",
      "   URL: https://github.com/public-apis/public-apis\n",
      "\n",
      "2. system-design-primer - Stars: 268914\n",
      "   Description: Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.\n",
      "   URL: https://github.com/donnemartin/system-design-primer\n",
      "\n",
      "3. awesome-python - Stars: 217997\n",
      "   Description: An opinionated list of awesome Python frameworks, libraries, software and resources.\n",
      "   URL: https://github.com/vinta/awesome-python\n",
      "\n",
      "4. Python - Stars: 183973\n",
      "   Description: All Algorithms implemented in Python\n",
      "   URL: https://github.com/TheAlgorithms/Python\n",
      "\n",
      "5. AutoGPT - Stars: 166353\n",
      "   Description: AutoGPT is the vision of accessible AI for everyone, to use and to build on. Our mission is to provide the tools, so that you can focus on what matters.\n",
      "   URL: https://github.com/Significant-Gravitas/AutoGPT\n",
      "\n",
      "6. Python-100-Days - Stars: 154544\n",
      "   Description: Python - 100天从新手到大师\n",
      "   URL: https://github.com/jackfrued/Python-100-Days\n",
      "\n",
      "7. stable-diffusion-webui - Stars: 139219\n",
      "   Description: Stable Diffusion web UI\n",
      "   URL: https://github.com/AUTOMATIC1111/stable-diffusion-webui\n",
      "\n",
      "8. transformers - Stars: 131727\n",
      "   Description: 🤗 Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX.\n",
      "   URL: https://github.com/huggingface/transformers\n",
      "\n",
      "9. youtube-dl - Stars: 131218\n",
      "   Description: Command-line program to download videos from YouTube.com and other video sites\n",
      "   URL: https://github.com/ytdl-org/youtube-dl\n",
      "\n",
      "10. HelloGitHub - Stars: 90192\n",
      "   Description: :octocat: 分享 GitHub 上有趣、入门级的开源项目。Share interesting, entry-level open source projects on GitHub.\n",
      "   URL: https://github.com/521xueweihan/HelloGitHub\n",
      "\n",
      "11. thefuck - Stars: 84617\n",
      "   Description: Magnificent app which corrects your previous console command.\n",
      "   URL: https://github.com/nvbn/thefuck\n",
      "\n",
      "12. pytorch - Stars: 82015\n",
      "   Description: Tensors and Dynamic neural networks in Python with strong GPU acceleration\n",
      "   URL: https://github.com/pytorch/pytorch\n",
      "\n",
      "13. yt-dlp - Stars: 81960\n",
      "   Description: A feature-rich command-line audio/video downloader\n",
      "   URL: https://github.com/yt-dlp/yt-dlp\n",
      "\n",
      "14. django - Stars: 79088\n",
      "   Description: The Web framework for perfectionists with deadlines.\n",
      "   URL: https://github.com/django/django\n",
      "\n",
      "15. models - Stars: 76950\n",
      "   Description: Models and examples built with TensorFlow\n",
      "   URL: https://github.com/tensorflow/models\n",
      "\n",
      "16. fastapi - Stars: 75410\n",
      "   Description: FastAPI framework, high performance, easy to learn, fast to code, ready for production\n",
      "   URL: https://github.com/fastapi/fastapi\n",
      "\n",
      "17. core - Stars: 71065\n",
      "   Description: :house_with_garden: Open source home automation that puts local control and privacy first.\n",
      "   URL: https://github.com/home-assistant/core\n",
      "\n",
      "18. flask - Stars: 67501\n",
      "   Description: The Python micro framework for building web applications.\n",
      "   URL: https://github.com/pallets/flask\n",
      "\n",
      "19. funNLP - Stars: 67498\n",
      "   Description: 中英文敏感词、语言检测、中外手机/电话归属地/运营商查询、名字推断性别、手机号抽取、身份证抽取、邮箱抽取、中日文人名库、中文缩写库、拆字词典、词汇情感值、停用词、反动词表、暴恐词表、繁简体转换、英文模拟中文发音、汪峰歌词生成器、职业名称词库、同义词库、反义词库、否定词库、汽车品牌词库、汽车零件词库、连续英文切割、各种中文词向量、公司名字大全、古诗词库、IT词库、财经词库、成语词库、地名词库、历史名人词库、诗词词库、医学词库、饮食词库、法律词库、汽车词库、动物词库、中文聊天语料、中文谣言数据、百度中文问答数据集、句子相似度匹配算法集合、bert资源、文本生成&摘要相关工具、cocoNLP信息抽取工具、国内电话号码正则匹配、清华大学XLORE:中英文跨语言百科知识图谱、清华大学人工智能技术系列报告、自然语言生成、NLU太难了系列、自动对联数据及机器人、用户名黑名单列表、罪名法务名词及分类模型、微信公众号语料、cs224n深度学习自然语言处理课程、中文手写汉字识别、中文自然语言处理 语料/数据集、变量命名神器、分词语料库+代码、任务型对话英文数据集、ASR 语音数据集 + 基于深度学习的中文语音识别系统、笑声检测器、Microsoft多语言数字/单位/如日期时间识别包、中华新华字典数据库及api(包括常用歇后语、成语、词语和汉字)、文档图谱自动生成、SpaCy 中文模型、Common Voice语音识别数据集新版、神经网络关系抽取、基于bert的命名实体识别、关键词(Keyphrase)抽取包pke、基于医疗领域知识图谱的问答系统、基于依存句法与语义角色标注的事件三元组抽取、依存句法分析4万句高质量标注数据、cnocr：用来做中文OCR的Python3包、中文人物关系知识图谱项目、中文nlp竞赛项目及代码汇总、中文字符数据、speech-aligner: 从“人声语音”及其“语言文本”产生音素级别时间对齐标注的工具、AmpliGraph: 知识图谱表示学习(Python)库：知识图谱概念链接预测、Scattertext 文本可视化(python)、语言/知识表示工具：BERT & ERNIE、中文对比英文自然语言处理NLP的区别综述、Synonyms中文近义词工具包、HarvestText领域自适应文本挖掘工具（新词发现-情感分析-实体链接等）、word2word：(Python)方便易用的多语言词-词对集：62种语言/3,564个多语言对、语音识别语料生成工具：从具有音频/字幕的在线视频创建自动语音识别(ASR)语料库、构建医疗实体识别的模型（包含词典和语料标注）、单文档非监督的关键词抽取、Kashgari中使用gpt-2语言模型、开源的金融投资数据提取工具、文本自动摘要库TextTeaser: 仅支持英文、人民日报语料处理工具集、一些关于自然语言的基本模型、基于14W歌曲知识库的问答尝试--功能包括歌词接龙and已知歌词找歌曲以及歌曲歌手歌词三角关系的问答、基于Siamese bilstm模型的相似句子判定模型并提供训练数据集和测试数据集、用Transformer编解码模型实现的根据Hacker News文章标题自动生成评论、用BERT进行序列标记和文本分类的模板代码、LitBank：NLP数据集——支持自然语言处理和计算人文学科任务的100部带标记英文小说语料、百度开源的基准信息抽取系统、虚假新闻数据集、Facebook: LAMA语言模型分析，提供Transformer-XL/BERT/ELMo/GPT预训练语言模型的统一访问接口、CommonsenseQA：面向常识的英文QA挑战、中文知识图谱资料、数据及工具、各大公司内部里大牛分享的技术文档 PDF 或者 PPT、自然语言生成SQL语句（英文）、中文NLP数据增强（EDA）工具、英文NLP数据增强工具 、基于医药知识图谱的智能问答系统、京东商品知识图谱、基于mongodb存储的军事领域知识图谱问答项目、基于远监督的中文关系抽取、语音情感分析、中文ULMFiT-情感分析-文本分类-语料及模型、一个拍照做题程序、世界各国大规模人名库、一个利用有趣中文语料库 qingyun 训练出来的中文聊天机器人、中文聊天机器人seqGAN、省市区镇行政区划数据带拼音标注、教育行业新闻语料库包含自动文摘功能、开放了对话机器人-知识图谱-语义理解-自然语言处理工具及数据、中文知识图谱：基于百度百科中文页面-抽取三元组信息-构建中文知识图谱、masr: 中文语音识别-提供预训练模型-高识别率、Python音频数据增广库、中文全词覆盖BERT及两份阅读理解数据、ConvLab：开源多域端到端对话系统平台、中文自然语言处理数据集、基于最新版本rasa搭建的对话系统、基于TensorFlow和BERT的管道式实体及关系抽取、一个小型的证券知识图谱/知识库、复盘所有NLP比赛的TOP方案、OpenCLaP：多领域开源中文预训练语言模型仓库、UER：基于不同语料+编码器+目标任务的中文预训练模型仓库、中文自然语言处理向量合集、基于金融-司法领域(兼有闲聊性质)的聊天机器人、g2pC：基于上下文的汉语读音自动标记模块、Zincbase 知识图谱构建工具包、诗歌质量评价/细粒度情感诗歌语料库、快速转化「中文数字」和「阿拉伯数字」、百度知道问答语料库、基于知识图谱的问答系统、jieba_fast 加速版的jieba、正则表达式教程、中文阅读理解数据集、基于BERT等最新语言模型的抽取式摘要提取、Python利用深度学习进行文本摘要的综合指南、知识图谱深度学习相关资料整理、维基大规模平行文本语料、StanfordNLP 0.2.0：纯Python版自然语言处理包、NeuralNLP-NeuralClassifier：腾讯开源深度学习文本分类工具、端到端的封闭域对话系统、中文命名实体识别：NeuroNER vs. BertNER、新闻事件线索抽取、2019年百度的三元组抽取比赛：“科学空间队”源码、基于依存句法的开放域文本知识三元组抽取和知识库构建、中文的GPT2训练代码、ML-NLP - 机器学习(Machine Learning)NLP面试中常考到的知识点和代码实现、nlp4han:中文自然语言处理工具集(断句/分词/词性标注/组块/句法分析/语义分析/NER/N元语法/HMM/代词消解/情感分析/拼写检查、XLM：Facebook的跨语言预训练语言模型、用基于BERT的微调和特征提取方法来进行知识图谱百度百科人物词条属性抽取、中文自然语言处理相关的开放任务-数据集-当前最佳结果、CoupletAI - 基于CNN+Bi-LSTM+Attention 的自动对对联系统、抽象知识图谱、MiningZhiDaoQACorpus - 580万百度知道问答数据挖掘项目、brat rapid annotation tool: 序列标注工具、大规模中文知识图谱数据：1.4亿实体、数据增强在机器翻译及其他nlp任务中的应用及效果、allennlp阅读理解:支持多种数据和模型、PDF表格数据提取工具 、 Graphbrain：AI开源软件库和科研工具，目的是促进自动意义提取和文本理解以及知识的探索和推断、简历自动筛选系统、基于命名实体识别的简历自动摘要、中文语言理解测评基准，包括代表性的数据集&基准模型&语料库&排行榜、树洞 OCR 文字识别 、从包含表格的扫描图片中识别表格和文字、语声迁移、Python口语自然语言处理工具集(英文)、 similarity：相似度计算工具包，java编写、海量中文预训练ALBERT模型 、Transformers 2.0 、基于大规模音频数据集Audioset的音频增强 、Poplar：网页版自然语言标注工具、图片文字去除，可用于漫画翻译 、186种语言的数字叫法库、Amazon发布基于知识的人-人开放领域对话数据集 、中文文本纠错模块代码、繁简体转换 、 Python实现的多种文本可读性评价指标、类似于人名/地名/组织机构名的命名体识别数据集 、东南大学《知识图谱》研究生课程(资料)、. 英文拼写检查库 、 wwsearch是企业微信后台自研的全文检索引擎、CHAMELEON：深度学习新闻推荐系统元架构 、 8篇论文梳理BERT相关模型进展与反思、DocSearch：免费文档搜索引擎、 LIDA：轻量交互式对话标注工具 、aili - the fastest in-memory index in the East 东半球最快并发索引 、知识图谱车音工作项目、自然语言生成资源大全 、中日韩分词库mecab的Python接口库、中文文本摘要/关键词提取、汉字字符特征提取器 (featurizer)，提取汉字的特征（发音特征、字形特征）用做深度学习的特征、中文生成任务基准测评 、中文缩写数据集、中文任务基准测评 - 代表性的数据集-基准(预训练)模型-语料库-baseline-工具包-排行榜、PySS3：面向可解释AI的SS3文本分类器机器可视化工具 、中文NLP数据集列表、COPE - 格律诗编辑程序、doccano：基于网页的开源协同多语言文本标注工具 、PreNLP：自然语言预处理库、简单的简历解析器，用来从简历中提取关键信息、用于中文闲聊的GPT2模型：GPT2-chitchat、基于检索聊天机器人多轮响应选择相关资源列表(Leaderboards、Datasets、Papers)、(Colab)抽象文本摘要实现集锦(教程 、词语拼音数据、高效模糊搜索工具、NLP数据增广资源集、微软对话机器人框架 、 GitHub Typo Corpus：大规模GitHub多语言拼写错误/语法错误数据集、TextCluster：短文本聚类预处理模块 Short text cluster、面向语音识别的中文文本规范化、BLINK：最先进的实体链接库、BertPunc：基于BERT的最先进标点修复模型、Tokenizer：快速、可定制的文本词条化库、中文语言理解测评基准，包括代表性的数据集、基准(预训练)模型、语料库、排行榜、spaCy 医学文本挖掘与信息提取 、 NLP任务示例项目代码集、 python拼写检查库、chatbot-list - 行业内关于智能客服、聊天机器人的应用和架构、算法分享和介绍、语音质量评价指标(MOSNet, BSSEval, STOI, PESQ, SRMR)、 用138GB语料训练的法文RoBERTa预训练语言模型 、BERT-NER-Pytorch：三种不同模式的BERT中文NER实验、无道词典 - 有道词典的命令行版本，支持英汉互查和在线查询、2019年NLP亮点回顾、 Chinese medical dialogue data 中文医疗对话数据集 、最好的汉字数字(中文数字)-阿拉伯数字转换工具、 基于百科知识库的中文词语多词义/义项获取与特定句子词语语义消歧、awesome-nlp-sentiment-analysis - 情感分析、情绪原因识别、评价对象和评价词抽取、LineFlow：面向所有深度学习框架的NLP数据高效加载器、中文医学NLP公开资源整理 、MedQuAD：(英文)医学问答数据集、将自然语言数字串解析转换为整数和浮点数、Transfer Learning in Natural Language Processing (NLP) 、面向语音识别的中文/英文发音辞典、Tokenizers：注重性能与多功能性的最先进分词器、CLUENER 细粒度命名实体识别 Fine Grained Named Entity Recognition、 基于BERT的中文命名实体识别、中文谣言数据库、NLP数据集/基准任务大列表、nlp相关的一些论文及代码, 包括主题模型、词向量(Word Embedding)、命名实体识别(NER)、文本分类(Text Classificatin)、文本生成(Text Generation)、文本相似性(Text Similarity)计算等，涉及到各种与nlp相关的算法，基于keras和tensorflow 、Python文本挖掘/NLP实战示例、 Blackstone：面向非结构化法律文本的spaCy pipeline和NLP模型通过同义词替换实现文本“变脸” 、中文 预训练 ELECTREA 模型: 基于对抗学习 pretrain Chinese Model 、albert-chinese-ner - 用预训练语言模型ALBERT做中文NER 、基于GPT2的特定主题文本生成/文本增广、开源预训练语言模型合集、多语言句向量包、编码、标记和实现：一种可控高效的文本生成方法、 英文脏话大列表 、attnvis：GPT2、BERT等transformer语言模型注意力交互可视化、CoVoST：Facebook发布的多语种语音-文本翻译语料库，包括11种语言(法语、德语、荷兰语、俄语、西班牙语、意大利语、土耳其语、波斯语、瑞典语、蒙古语和中文)的语音、文字转录及英文译文、Jiagu自然语言处理工具 - 以BiLSTM等模型为基础，提供知识图谱关系抽取 中文分词 词性标注 命名实体识别 情感分析 新词发现 关键词 文本摘要 文本聚类等功能、用unet实现对文档表格的自动检测，表格重建、NLP事件提取文献资源列表 、 金融领域自然语言处理研究资源大列表、CLUEDatasetSearch - 中英文NLP数据集：搜索所有中文NLP数据集，附常用英文NLP数据集 、medical_NER - 中文医学知识图谱命名实体识别 、(哈佛)讲因果推理的免费书、知识图谱相关学习资料/数据集/工具资源大列表、Forte：灵活强大的自然语言处理pipeline工具集 、Python字符串相似性算法库、PyLaia：面向手写文档分析的深度学习工具包、TextFooler：针对文本分类/推理的对抗文本生成模块、Haystack：灵活、强大的可扩展问答(QA)框架、中文关键短语抽取工具\n",
      "   URL: https://github.com/fighting41love/funNLP\n",
      "\n",
      "20. whisper - Stars: 67209\n",
      "   Description: Robust Speech Recognition via Large-Scale Weak Supervision\n",
      "   URL: https://github.com/openai/whisper\n",
      "\n",
      "21. devops-exercises - Stars: 65752\n",
      "   Description: Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions\n",
      "   URL: https://github.com/bregman-arie/devops-exercises\n",
      "\n",
      "22. awesome-machine-learning - Stars: 65302\n",
      "   Description: A curated list of awesome Machine Learning frameworks, libraries and software.\n",
      "   URL: https://github.com/josephmisiti/awesome-machine-learning\n",
      "\n",
      "23. gpt_academic - Stars: 63711\n",
      "   Description: 为GPT/GLM等LLM大语言模型提供实用化交互接口，特别优化论文阅读/润色/写作体验，模块化设计，支持自定义快捷按钮&函数插件，支持Python和C++等项目剖析&自译解功能，PDF/LaTex论文翻译&总结功能，支持并行问询多种LLM模型，支持chatglm3等本地模型。接入通义千问, deepseekcoder, 讯飞星火, 文心一言, llama2, rwkv, claude2, moss等。\n",
      "   URL: https://github.com/binary-husky/gpt_academic\n",
      "\n",
      "24. ansible - Stars: 62286\n",
      "   Description: Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy and maintain. Automate everything from code deployment to network configuration to cloud management, in a language that approaches plain English, using SSH, with no agents to install on remote systems. https://docs.ansible.com.\n",
      "   URL: https://github.com/ansible/ansible\n",
      "\n",
      "25. cpython - Stars: 62173\n",
      "   Description: The Python programming language\n",
      "   URL: https://github.com/python/cpython\n",
      "\n",
      "26. manim - Stars: 61814\n",
      "   Description: Animation engine for explanatory math videos\n",
      "   URL: https://github.com/3b1b/manim\n",
      "\n",
      "27. keras - Stars: 61578\n",
      "   Description: Deep Learning for humans\n",
      "   URL: https://github.com/keras-team/keras\n",
      "\n",
      "28. d2l-zh - Stars: 61119\n",
      "   Description: 《动手学深度学习》：面向中文读者、能运行、可讨论。中英文版被70多个国家的500多所大学用于教学。\n",
      "   URL: https://github.com/d2l-ai/d2l-zh\n",
      "\n",
      "29. gpt4free - Stars: 59876\n",
      "   Description: The official gpt4free repository | various collection of powerful language models\n",
      "   URL: https://github.com/xtekky/gpt4free\n",
      "\n",
      "30. PayloadsAllTheThings - Stars: 59868\n",
      "   Description: A list of useful payloads and bypass for Web Application Security and Pentest/CTF\n",
      "   URL: https://github.com/swisskyrepo/PayloadsAllTheThings\n",
      "\n",
      "31. scikit-learn - Stars: 59367\n",
      "   Description: scikit-learn: machine learning in Python\n",
      "   URL: https://github.com/scikit-learn/scikit-learn\n",
      "\n",
      "32. sherlock - Stars: 57682\n",
      "   Description: Hunt down social media accounts by username across social networks\n",
      "   URL: https://github.com/sherlock-project/sherlock\n",
      "\n",
      "33. screenshot-to-code - Stars: 55989\n",
      "   Description: Drop in a screenshot and convert it to clean code (HTML/Tailwind/React/Vue)\n",
      "   URL: https://github.com/abi/screenshot-to-code\n",
      "\n",
      "34. llama - Stars: 55389\n",
      "   Description: Inference code for Llama models\n",
      "   URL: https://github.com/meta-llama/llama\n",
      "\n",
      "35. localstack - Stars: 53685\n",
      "   Description: 💻 A fully functional local AWS cloud stack. Develop and test your cloud & Serverless apps offline\n",
      "   URL: https://github.com/localstack/localstack\n",
      "\n",
      "36. annotated_deep_learning_paper_implementations - Stars: 53571\n",
      "   Description: 🧑‍🏫 60+ Implementations/tutorials of deep learning papers with side-by-side notes 📝; including transformers (original, xl, switch, feedback, vit, ...), optimizers (adam, adabelief, sophia, ...), gans(cyclegan, stylegan2, ...), 🎮 reinforcement learning (ppo, dqn), capsnet, distillation, ... 🧠\n",
      "   URL: https://github.com/labmlai/annotated_deep_learning_paper_implementations\n",
      "\n",
      "37. private-gpt - Stars: 53528\n",
      "   Description: Interact with your documents using the power of GPT, 100% privately, no data leaks\n",
      "   URL: https://github.com/zylon-ai/private-gpt\n",
      "\n",
      "38. face_recognition - Stars: 52804\n",
      "   Description: The world's simplest facial recognition api for Python and the command line\n",
      "   URL: https://github.com/ageitgey/face_recognition\n",
      "\n",
      "39. scrapy - Stars: 52318\n",
      "   Description: Scrapy, a fast high-level web crawling & scraping framework for Python.\n",
      "   URL: https://github.com/scrapy/scrapy\n",
      "\n",
      "40. Real-Time-Voice-Cloning - Stars: 52054\n",
      "   Description: Clone a voice in 5 seconds to generate arbitrary speech in real-time\n",
      "   URL: https://github.com/CorentinJ/Real-Time-Voice-Cloning\n",
      "\n",
      "41. open-interpreter - Stars: 51970\n",
      "   Description: A natural language interface for computers\n",
      "   URL: https://github.com/OpenInterpreter/open-interpreter\n",
      "\n",
      "42. requests - Stars: 51963\n",
      "   Description: A simple, yet elegant, HTTP library.\n",
      "   URL: https://github.com/psf/requests\n",
      "\n",
      "43. gpt-engineer - Stars: 51942\n",
      "   Description: Platform to experiment with the AI Software Engineer. Terminal based. NOTE: Very different from https://gptengineer.app\n",
      "   URL: https://github.com/gpt-engineer-org/gpt-engineer\n",
      "\n",
      "44. faceswap - Stars: 50868\n",
      "   Description: Deepfakes Software For All\n",
      "   URL: https://github.com/deepfakes/faceswap\n",
      "\n",
      "45. you-get - Stars: 49897\n",
      "   Description: :arrow_double_down: Dumb downloader that scrapes the web\n",
      "   URL: https://github.com/soimort/you-get\n",
      "\n",
      "46. ComfyUI - Stars: 49822\n",
      "   Description: The most powerful and modular diffusion model GUI, api and backend with a graph/nodes interface.\n",
      "   URL: https://github.com/comfyanonymous/ComfyUI\n",
      "\n",
      "47. yolov5 - Stars: 49510\n",
      "   Description: YOLOv5 🚀 in PyTorch > ONNX > CoreML > TFLite\n",
      "   URL: https://github.com/ultralytics/yolov5\n",
      "\n",
      "48. grok-1 - Stars: 49415\n",
      "   Description: Grok open release\n",
      "   URL: https://github.com/xai-org/grok-1\n",
      "\n",
      "49. openpilot - Stars: 49201\n",
      "   Description: openpilot is an operating system for robotics. Currently, it upgrades the driver assistance system in 275+ supported cars.\n",
      "   URL: https://github.com/commaai/openpilot\n",
      "\n",
      "50. rich - Stars: 48823\n",
      "   Description: Rich is a Python library for rich text and beautiful formatting in the terminal.\n",
      "   URL: https://github.com/Textualize/rich\n",
      "\n",
      "51. hackingtool - Stars: 48639\n",
      "   Description: ALL IN ONE Hacking Tool For Hackers\n",
      "   URL: https://github.com/Z4nzu/hackingtool\n",
      "\n",
      "52. professional-programming - Stars: 46199\n",
      "   Description: A collection of learning resources for curious software engineers\n",
      "   URL: https://github.com/charlax/professional-programming\n",
      "\n",
      "53. big-list-of-naughty-strings - Stars: 46123\n",
      "   Description: The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data.\n",
      "   URL: https://github.com/minimaxir/big-list-of-naughty-strings\n",
      "\n",
      "54. MetaGPT - Stars: 43503\n",
      "   Description: 🌟 The Multi-Agent Framework: First AI Software Company, Towards Natural Language Programming\n",
      "   URL: https://github.com/geekan/MetaGPT\n",
      "\n",
      "55. pandas - Stars: 43201\n",
      "   Description: Flexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much more\n",
      "   URL: https://github.com/pandas-dev/pandas\n",
      "\n",
      "56. PaddleOCR - Stars: 42442\n",
      "   Description: Awesome multilingual OCR toolkits based on PaddlePaddle (practical ultra lightweight OCR system, support 80+ languages recognition, provide data annotation and synthesis tools, support training and deployment among server, mobile, embedded and IoT devices)\n",
      "   URL: https://github.com/PaddlePaddle/PaddleOCR\n",
      "\n",
      "57. 30-Days-Of-Python - Stars: 40934\n",
      "   Description: 30 days of Python programming challenge is a step-by-step guide to learn the Python programming language in 30 days. This challenge may take more than100 days, follow your own pace.  These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw\n",
      "   URL: https://github.com/Asabeneh/30-Days-Of-Python\n",
      "\n",
      "58. ChatGLM-6B - Stars: 40356\n",
      "   Description: ChatGLM-6B: An Open Bilingual Dialogue Language Model | 开源双语对话语言模型\n",
      "   URL: https://github.com/THUDM/ChatGLM-6B\n",
      "\n",
      "59. python-patterns - Stars: 40162\n",
      "   Description: A collection of design patterns/idioms in Python\n",
      "   URL: https://github.com/faif/python-patterns\n",
      "\n",
      "60. Fooocus - Stars: 40009\n",
      "   Description: Focus on prompting and generating\n",
      "   URL: https://github.com/lllyasviel/Fooocus\n",
      "\n",
      "61. text-generation-webui - Stars: 39403\n",
      "   Description: A Gradio web UI for Large Language Models.\n",
      "   URL: https://github.com/oobabooga/text-generation-webui\n",
      "\n",
      "62. ailearning - Stars: 39057\n",
      "   Description: AiLearning：数据分析+机器学习实战+线性代数+PyTorch+NLTK+TF2\n",
      "   URL: https://github.com/apachecn/ailearning\n",
      "\n",
      "63. ColossalAI - Stars: 38583\n",
      "   Description: Making large AI models cheaper, faster and more accessible\n",
      "   URL: https://github.com/hpcaitech/ColossalAI\n",
      "\n",
      "64. black - Stars: 38523\n",
      "   Description: The uncompromising Python code formatter\n",
      "   URL: https://github.com/psf/black\n",
      "\n",
      "65. sentry - Stars: 38499\n",
      "   Description: Developer-first error tracking and performance monitoring\n",
      "   URL: https://github.com/getsentry/sentry\n",
      "\n",
      "66. stablediffusion - Stars: 38329\n",
      "   Description: High-Resolution Image Synthesis with Latent Diffusion Models\n",
      "   URL: https://github.com/Stability-AI/stablediffusion\n",
      "\n",
      "67. cheat.sh - Stars: 38091\n",
      "   Description: the only cheat sheet you need\n",
      "   URL: https://github.com/chubin/cheat.sh\n",
      "\n",
      "68. Deep-Learning-Papers-Reading-Roadmap - Stars: 37922\n",
      "   Description: Deep Learning papers reading roadmap for anyone who are eager to learn this amazing tech!\n",
      "   URL: https://github.com/floodsung/Deep-Learning-Papers-Reading-Roadmap\n",
      "\n",
      "69. bert - Stars: 37800\n",
      "   Description: TensorFlow code and pre-trained models for BERT\n",
      "   URL: https://github.com/google-research/bert\n",
      "\n",
      "70. odoo - Stars: 37280\n",
      "   Description: Odoo. Open Source Apps To Grow Your Business.\n",
      "   URL: https://github.com/odoo/odoo\n",
      "\n",
      "71. Open-Assistant - Stars: 36941\n",
      "   Description: OpenAssistant is a chat-based assistant that understands tasks, can interact with third-party systems, and retrieve information dynamically to do so.\n",
      "   URL: https://github.com/LAION-AI/Open-Assistant\n",
      "\n",
      "72. diagrams - Stars: 36793\n",
      "   Description: :art: Diagram as Code for prototyping cloud system architectures\n",
      "   URL: https://github.com/mingrammer/diagrams\n",
      "\n",
      "73. interview_internal_reference - Stars: 36522\n",
      "   Description: 2023年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。\n",
      "   URL: https://github.com/0voice/interview_internal_reference\n",
      "\n",
      "74. FastChat - Stars: 36374\n",
      "   Description: An open platform for training, serving, and evaluating large language models. Release repo for Vicuna and Chatbot Arena.\n",
      "   URL: https://github.com/lm-sys/FastChat\n",
      "\n",
      "75. airflow - Stars: 36165\n",
      "   Description: Apache Airflow - A platform to programmatically author, schedule, and monitor workflows\n",
      "   URL: https://github.com/apache/airflow\n",
      "\n",
      "76. nanoGPT - Stars: 36116\n",
      "   Description: The simplest, fastest repository for training/finetuning medium-sized GPTs.\n",
      "   URL: https://github.com/karpathy/nanoGPT\n",
      "\n",
      "77. python-cheatsheet - Stars: 36094\n",
      "   Description: Comprehensive Python Cheatsheet\n",
      "   URL: https://github.com/gto76/python-cheatsheet\n",
      "\n",
      "78. quivr - Stars: 35866\n",
      "   Description: Open-source RAG Framework for building GenAI Second Brains 🧠  Build productivity assistant (RAG) ⚡️🤖 Chat with your docs (PDF, CSV, ...)  & apps using Langchain, GPT 3.5 / 4 turbo, Private, Anthropic, VertexAI, Ollama, LLMs, Groq  that you can share with users !  Efficient retrieval augmented generation framework\n",
      "   URL: https://github.com/QuivrHQ/quivr\n",
      "\n",
      "79. mitmproxy - Stars: 35841\n",
      "   Description: An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.\n",
      "   URL: https://github.com/mitmproxy/mitmproxy\n",
      "\n",
      "80. DragGAN - Stars: 35650\n",
      "   Description: Official Code for DragGAN (SIGGRAPH 2023)\n",
      "   URL: https://github.com/XingangPan/DragGAN\n",
      "\n",
      "81. wtfpython - Stars: 35622\n",
      "   Description: What the f*ck Python? 😱\n",
      "   URL: https://github.com/satwikkansal/wtfpython\n",
      "\n",
      "82. GFPGAN - Stars: 35480\n",
      "   Description: GFPGAN aims at developing Practical Algorithms for Real-world Face Restoration.\n",
      "   URL: https://github.com/TencentARC/GFPGAN\n",
      "\n",
      "83. llama_index - Stars: 35256\n",
      "   Description: LlamaIndex is a data framework for your LLM applications\n",
      "   URL: https://github.com/run-llama/llama_index\n",
      "\n",
      "84. MockingBird - Stars: 34886\n",
      "   Description: 🚀AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time\n",
      "   URL: https://github.com/babysor/MockingBird\n",
      "\n",
      "85. DeepSpeed - Stars: 34639\n",
      "   Description: DeepSpeed is a deep learning optimization library that makes distributed training and inference easy, efficient, and effective.\n",
      "   URL: https://github.com/microsoft/DeepSpeed\n",
      "\n",
      "86. TaskMatrix - Stars: 34519\n",
      "   Description: None\n",
      "   URL: https://github.com/chenfei-wu/TaskMatrix\n",
      "\n",
      "87. gym - Stars: 34455\n",
      "   Description: A toolkit for developing and comparing reinforcement learning algorithms.\n",
      "   URL: https://github.com/openai/gym\n",
      "\n",
      "88. streamlit - Stars: 34449\n",
      "   Description: Streamlit — A faster way to build and share data apps.\n",
      "   URL: https://github.com/streamlit/streamlit\n",
      "\n",
      "89. Deep-Live-Cam - Stars: 33930\n",
      "   Description: real time face swap and one-click video deepfake with only a single image\n",
      "   URL: https://github.com/hacksider/Deep-Live-Cam\n",
      "\n",
      "90. 12306 - Stars: 33749\n",
      "   Description: 12306智能刷票，订票\n",
      "   URL: https://github.com/testerSunshine/12306\n",
      "\n",
      "91. shadowsocks - Stars: 33552\n",
      "   Description: None\n",
      "   URL: https://github.com/shadowsocks/shadowsocks\n",
      "\n",
      "92. HanLP - Stars: 33446\n",
      "   Description: 中文分词 词性标注 命名实体识别 依存句法分析 成分句法分析 语义依存分析 语义角色标注 指代消解 风格转换 语义相似度 新词发现 关键词短语提取 自动摘要 文本分类聚类 拼音简繁转换 自然语言处理\n",
      "   URL: https://github.com/hankcs/HanLP\n",
      "\n",
      "93. cli - Stars: 33325\n",
      "   Description: 🥧 HTTPie CLI  — modern, user-friendly command-line HTTP client for the API era. JSON support, colors, sessions, downloads, plugins & more.\n",
      "   URL: https://github.com/httpie/cli\n",
      "\n",
      "94. TTS - Stars: 33265\n",
      "   Description: 🐸💬 - a deep learning toolkit for Text-to-Speech, battle-tested in research and production\n",
      "   URL: https://github.com/coqui-ai/TTS\n",
      "\n",
      "95. jieba - Stars: 33063\n",
      "   Description: 结巴中文分词\n",
      "   URL: https://github.com/fxsjy/jieba\n",
      "\n",
      "96. XX-Net - Stars: 32969\n",
      "   Description: A proxy tool to bypass GFW.\n",
      "   URL: https://github.com/XX-net/XX-Net\n",
      "\n",
      "97. ray - Stars: 32947\n",
      "   Description: Ray is a unified framework for scaling AI and Python applications. Ray consists of a core distributed runtime and a set of AI Libraries for accelerating ML workloads.\n",
      "   URL: https://github.com/ray-project/ray\n",
      "\n",
      "98. WeChatMsg - Stars: 32841\n",
      "   Description: 提取微信聊天记录，将其导出成HTML、Word、Excel文档永久保存，对聊天记录进行分析生成年度聊天报告，用聊天数据训练专属于个人的AI聊天助手\n",
      "   URL: https://github.com/LC044/WeChatMsg\n",
      "\n",
      "99. ccxt - Stars: 32450\n",
      "   Description: A JavaScript / TypeScript / Python / C# / PHP cryptocurrency trading API with support for more than 100 bitcoin/altcoin exchanges\n",
      "   URL: https://github.com/ccxt/ccxt\n",
      "\n",
      "100. GPT-SoVITS - Stars: 32203\n",
      "   Description: 1 min voice data can also be used to train a good TTS model! (few shot voice cloning)\n",
      "   URL: https://github.com/RVC-Boss/GPT-SoVITS\n",
      "\n",
      "101. gradio - Stars: 31998\n",
      "   Description: Build and share delightful machine learning apps, all in Python. 🌟 Star to support our work!\n",
      "   URL: https://github.com/gradio-app/gradio\n",
      "\n",
      "102. sqlmap - Stars: 31877\n",
      "   Description: Automatic SQL injection and database takeover tool\n",
      "   URL: https://github.com/sqlmapproject/sqlmap\n",
      "\n",
      "103. pytorch-image-models - Stars: 31386\n",
      "   Description: The largest collection of PyTorch image encoders / backbones. Including train, eval, inference, export scripts, and pretrained weights -- ResNet, ResNeXT, EfficientNet, NFNet, Vision Transformer (ViT), MobileNetV4, MobileNet-V3 & V2, RegNet, DPN, CSPNet, Swin Transformer, MaxViT, CoAtNet, ConvNeXt, and more\n",
      "   URL: https://github.com/huggingface/pytorch-image-models\n",
      "\n",
      "104. certbot - Stars: 31278\n",
      "   Description: Certbot is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.  It can also act as a client for any other CA that uses the ACME protocol.\n",
      "   URL: https://github.com/certbot/certbot\n",
      "\n",
      "105. OpenHands - Stars: 31104\n",
      "   Description: 🙌 OpenHands: Code Less, Make More\n",
      "   URL: https://github.com/All-Hands-AI/OpenHands\n",
      "\n",
      "106. poetry - Stars: 31022\n",
      "   Description: Python packaging and dependency management made easy\n",
      "   URL: https://github.com/python-poetry/poetry\n",
      "\n",
      "107. Python - Stars: 30910\n",
      "   Description: My Python Examples\n",
      "   URL: https://github.com/geekcomputers/Python\n",
      "\n",
      "108. ChatTTS - Stars: 30414\n",
      "   Description: A generative speech model for daily dialogue.\n",
      "   URL: https://github.com/2noise/ChatTTS\n",
      "\n",
      "109. LLaMA-Factory - Stars: 30333\n",
      "   Description: Efficiently Fine-Tune 100+ LLMs in WebUI (ACL 2024)\n",
      "   URL: https://github.com/hiyouga/LLaMA-Factory\n",
      "\n",
      "110. fairseq - Stars: 30130\n",
      "   Description: Facebook AI Research Sequence-to-Sequence Toolkit written in Python.\n",
      "   URL: https://github.com/facebookresearch/fairseq\n",
      "\n",
      "111. detectron2 - Stars: 29921\n",
      "   Description: Detectron2 is a platform for object detection, segmentation and other visual recognition tasks.\n",
      "   URL: https://github.com/facebookresearch/detectron2\n",
      "\n",
      "112. linux-insides - Stars: 29807\n",
      "   Description: A little bit about a linux kernel\n",
      "   URL: https://github.com/0xAX/linux-insides\n",
      "\n",
      "113. pytorch-tutorial - Stars: 29799\n",
      "   Description: PyTorch Tutorial for Deep Learning Researchers\n",
      "   URL: https://github.com/yunjey/pytorch-tutorial\n",
      "\n",
      "114. jax - Stars: 29759\n",
      "   Description: Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more\n",
      "   URL: https://github.com/google/jax\n",
      "\n",
      "115. chatgpt-on-wechat - Stars: 29730\n",
      "   Description: 基于大模型搭建的聊天机器人，同时支持 微信公众号、企业微信应用、飞书、钉钉 等接入，可选择GPT3.5/GPT-4o/GPT4.0/ Claude/文心一言/讯飞星火/通义千问/ Gemini/GLM-4/Claude/Kimi/LinkAI，能处理文本、语音和图片，访问操作系统和互联网，支持基于自有知识库进行定制企业智能客服。\n",
      "   URL: https://github.com/zhayujie/chatgpt-on-wechat\n",
      "\n",
      "116. ControlNet - Stars: 29670\n",
      "   Description: Let us control diffusion models!\n",
      "   URL: https://github.com/lllyasviel/ControlNet\n",
      "\n",
      "117. spaCy - Stars: 29625\n",
      "   Description: 💫 Industrial-strength Natural Language Processing (NLP) in Python\n",
      "   URL: https://github.com/explosion/spaCy\n",
      "\n",
      "118. OpenBB - Stars: 29614\n",
      "   Description: Investment Research for Everyone, Everywhere.\n",
      "   URL: https://github.com/OpenBB-finance/OpenBB\n",
      "\n",
      "119. gpt-pilot - Stars: 29489\n",
      "   Description: The first real AI developer\n",
      "   URL: https://github.com/Pythagora-io/gpt-pilot\n",
      "\n",
      "120. stanford_alpaca - Stars: 29325\n",
      "   Description: Code and documentation to train Stanford's Alpaca models, and generate the data.\n",
      "   URL: https://github.com/tatsu-lab/stanford_alpaca\n",
      "\n",
      "121. interactive-coding-challenges - Stars: 29310\n",
      "   Description: 120+ interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.\n",
      "   URL: https://github.com/donnemartin/interactive-coding-challenges\n",
      "\n",
      "122. mmdetection - Stars: 29019\n",
      "   Description: OpenMMLab Detection Toolbox and Benchmark\n",
      "   URL: https://github.com/open-mmlab/mmdetection\n",
      "\n",
      "123. tqdm - Stars: 28302\n",
      "   Description: :zap: A Fast, Extensible Progress Bar for Python and CLI\n",
      "   URL: https://github.com/tqdm/tqdm\n",
      "\n",
      "124. OpenVoice - Stars: 28279\n",
      "   Description: Instant voice cloning by MIT and MyShell.\n",
      "   URL: https://github.com/myshell-ai/OpenVoice\n",
      "\n",
      "125. ultralytics - Stars: 28116\n",
      "   Description: NEW - YOLOv8 🚀 in PyTorch > ONNX > OpenVINO > CoreML > TFLite\n",
      "   URL: https://github.com/ultralytics/ultralytics\n",
      "\n",
      "126. django-rest-framework - Stars: 28113\n",
      "   Description: Web APIs for Django. 🎸\n",
      "   URL: https://github.com/encode/django-rest-framework\n",
      "\n",
      "127. freqtrade - Stars: 28006\n",
      "   Description: Free, open source crypto trading bot\n",
      "   URL: https://github.com/freqtrade/freqtrade\n",
      "\n",
      "128. ChatGPT - Stars: 28004\n",
      "   Description: Reverse engineered ChatGPT API\n",
      "   URL: https://github.com/acheong08/ChatGPT\n",
      "\n",
      "129. pytorch-lightning - Stars: 27929\n",
      "   Description: Pretrain, finetune and deploy AI models on multiple GPUs, TPUs with zero code changes.\n",
      "   URL: https://github.com/Lightning-AI/pytorch-lightning\n",
      "\n",
      "130. roop - Stars: 27657\n",
      "   Description: one-click face swap\n",
      "   URL: https://github.com/s0md3v/roop\n",
      "\n",
      "131. Real-ESRGAN - Stars: 27646\n",
      "   Description: Real-ESRGAN aims at developing Practical Algorithms for General Image/Video Restoration.\n",
      "   URL: https://github.com/xinntao/Real-ESRGAN\n",
      "\n",
      "132. CheatSheetSeries - Stars: 27549\n",
      "   Description: The OWASP Cheat Sheet Series was created to provide a concise collection of high value information on specific application security topics.\n",
      "   URL: https://github.com/OWASP/CheatSheetSeries\n",
      "\n",
      "133. numpy - Stars: 27500\n",
      "   Description: The fundamental package for scientific computing with Python.\n",
      "   URL: https://github.com/numpy/numpy\n",
      "\n",
      "134. data-science-ipython-notebooks - Stars: 27099\n",
      "   Description: Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.\n",
      "   URL: https://github.com/donnemartin/data-science-ipython-notebooks\n",
      "\n",
      "135. langflow - Stars: 27020\n",
      "   Description: Langflow is a low-code app builder for RAG and multi-agent AI applications. It’s Python-based and agnostic to any model, API, or database.\n",
      "   URL: https://github.com/langflow-ai/langflow\n",
      "\n",
      "136. python-fire - Stars: 26855\n",
      "   Description: Python Fire is a library for automatically generating command line interfaces (CLIs) from absolutely any Python object.\n",
      "   URL: https://github.com/google/python-fire\n",
      "\n",
      "137. hosts - Stars: 26444\n",
      "   Description: 🔒 Consolidating and extending hosts files from several well-curated sources. Optionally pick extensions for porn, social media, and other categories.\n",
      "   URL: https://github.com/StevenBlack/hosts\n",
      "\n",
      "138. glances - Stars: 26258\n",
      "   Description: Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.\n",
      "   URL: https://github.com/nicolargo/glances\n",
      "\n",
      "139. Detectron - Stars: 26224\n",
      "   Description: FAIR's research platform for object detection research, implementing popular algorithms like Mask R-CNN and RetinaNet.\n",
      "   URL: https://github.com/facebookresearch/Detectron\n",
      "\n",
      "140. mindsdb - Stars: 26198\n",
      "   Description: The platform for building AI from enterprise data\n",
      "   URL: https://github.com/mindsdb/mindsdb\n",
      "\n",
      "141. vllm - Stars: 26097\n",
      "   Description: A high-throughput and memory-efficient inference and serving engine for LLMs\n",
      "   URL: https://github.com/vllm-project/vllm\n",
      "\n",
      "142. tinygrad - Stars: 26080\n",
      "   Description: You like pytorch? You like micrograd? You love tinygrad! ❤️ \n",
      "   URL: https://github.com/tinygrad/tinygrad\n",
      "\n",
      "143. llama3 - Stars: 25977\n",
      "   Description: The official Meta Llama 3 GitHub site\n",
      "   URL: https://github.com/meta-llama/llama3\n",
      "\n",
      "144. DeepFaceLive - Stars: 25959\n",
      "   Description: Real-time face swap for PC streaming or video calls\n",
      "   URL: https://github.com/iperov/DeepFaceLive\n",
      "\n",
      "145. redash - Stars: 25895\n",
      "   Description: Make Your Company Data Driven. Connect to any data source, easily visualize, dashboard and share your data.\n",
      "   URL: https://github.com/getredash/redash\n",
      "\n",
      "146. python-telegram-bot - Stars: 25835\n",
      "   Description: We have made you a wrapper you can't refuse\n",
      "   URL: https://github.com/python-telegram-bot/python-telegram-bot\n",
      "\n",
      "147. Depix - Stars: 25809\n",
      "   Description: Recovers passwords from pixelized screenshots\n",
      "   URL: https://github.com/spipm/Depix\n",
      "\n",
      "148. spleeter - Stars: 25595\n",
      "   Description: Deezer source separation library including pretrained models.\n",
      "   URL: https://github.com/deezer/spleeter\n",
      "\n",
      "149. cascadia-code - Stars: 25592\n",
      "   Description: This is a fun, new monospaced font that includes programming ligatures and is designed to enhance the modern look and feel of the Windows Terminal.\n",
      "   URL: https://github.com/microsoft/cascadia-code\n",
      "\n",
      "150. Hello-Python - Stars: 25483\n",
      "   Description: Curso para aprender el lenguaje de programación Python desde cero y para principiantes. 100 clases, 44 horas en vídeo, código, proyectos y grupo de chat. Fundamentos, frontend, backend, testing, IA...\n",
      "   URL: https://github.com/mouredev/Hello-Python\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "import time\n",
    "\n",
    "def get_top_python_repos(pages=5):\n",
    "    repos = []\n",
    "    base_url = \"https://api.github.com/search/repositories\"\n",
    "    \n",
    "    headers = {\n",
    "        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n",
    "    }\n",
    "\n",
    "    for page in range(1, pages + 1):\n",
    "        params = {\n",
    "            'q': 'language:python',\n",
    "            'sort': 'stars',\n",
    "            'order': 'desc',\n",
    "            'page': page\n",
    "        }\n",
    "\n",
    "        try:\n",
    "            response = requests.get(base_url, params=params, headers=headers)\n",
    "            response.raise_for_status()\n",
    "            data = response.json()\n",
    "\n",
    "            for item in data['items']:\n",
    "                repo = {\n",
    "                    'name': item['name'],\n",
    "                    'stars': item['stargazers_count'],\n",
    "                    'description': item['description'],\n",
    "                    'url': item['html_url']\n",
    "                }\n",
    "                repos.append(repo)\n",
    "\n",
    "            print(f\"Fetched page {page}, total repos: {len(repos)}\")\n",
    "            \n",
    "            # GitHub API 有速率限制，所以我们在请求之间添加一些延迟\n",
    "            time.sleep(2)\n",
    "\n",
    "        except requests.RequestException as e:\n",
    "            print(f\"Error fetching page {page}: {e}\")\n",
    "\n",
    "    return repos\n",
    "\n",
    "# 获取前5页的热门 Python 仓库\n",
    "top_repos = get_top_python_repos(5)\n",
    "\n",
    "# 打印结果\n",
    "if top_repos:\n",
    "    print(\"\\nTop Python Repositories on GitHub:\")\n",
    "    for i, repo in enumerate(top_repos, 1):\n",
    "        print(f\"{i}. {repo['name']} - Stars: {repo['stars']}\")\n",
    "        print(f\"   Description: {repo['description']}\")\n",
    "        print(f\"   URL: {repo['url']}\")\n",
    "        print()\n",
    "else:\n",
    "    print(\"Failed to fetch repository data.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85ad741c-e82e-4360-84a6-7eb1d3a6bfe8",
   "metadata": {},
   "source": [
    "### 案例2：数据分析案例 - 分析CSV文件并生成图表\n",
    "\n",
    "这个案例展示如何使用pandas处理CSV文件,并用matplotlib生成图表:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "93704d8f-e0fe-4bc3-ad4d-a977e9198daa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              Sales\n",
      "count     12.000000\n",
      "mean   23083.333333\n",
      "std     6097.068347\n",
      "min    12000.000000\n",
      "25%    19500.000000\n",
      "50%    23500.000000\n",
      "75%    28000.000000\n",
      "max    32000.000000\n",
      "\n",
      "总销售额: $277,000.00\n",
      "\n",
      "销售额最高的月份: Aug, 销售额: $32,000.00\n",
      "\n",
      "平均月销售额: $23,083.33\n",
      "\n",
      "图表已保存为 'monthly_sales.png'\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# 读取CSV文件\n",
    "df = pd.read_csv('data/sales_data.csv')\n",
    "\n",
    "# 打印数据概览\n",
    "print(df.describe())\n",
    "\n",
    "# 计算总销售额\n",
    "total_sales = df['Sales'].sum()\n",
    "print(f\"\\n总销售额: ${total_sales:,.2f}\")\n",
    "\n",
    "# 找出销售额最高的月份\n",
    "best_month = df.loc[df['Sales'].idxmax()]\n",
    "print(f\"\\n销售额最高的月份: {best_month['Month']}, 销售额: ${best_month['Sales']:,.2f}\")\n",
    "\n",
    "# 计算平均月销售额\n",
    "average_sales = df['Sales'].mean()\n",
    "print(f\"\\n平均月销售额: ${average_sales:,.2f}\")\n",
    "\n",
    "# 生成月度销售额折线图\n",
    "plt.figure(figsize=(12,6))\n",
    "plt.plot(df['Month'], df['Sales'], marker='o')\n",
    "plt.title('Monthly Sales')\n",
    "plt.xlabel('Month')\n",
    "plt.ylabel('Sales ($)')\n",
    "plt.grid(True)\n",
    "plt.xticks(rotation=45)\n",
    "plt.tight_layout()\n",
    "\n",
    "# 为每个数据点添加标签\n",
    "for i, v in enumerate(df['Sales']):\n",
    "    plt.text(i, v, f'${v:,}', ha='center', va='bottom')\n",
    "\n",
    "# 保存图表\n",
    "plt.savefig('monthly_sales.png')\n",
    "print(\"\\n图表已保存为 'monthly_sales.png'\")\n",
    "\n",
    "# 显示图表（如果你在支持图形界面的环境中运行）\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b761337-8084-4739-9825-74f51e1b755f",
   "metadata": {},
   "source": [
    "### 案例3：机器学习案例 - 简单的分类模型\n",
    "\n",
    "这个案例展示如何使用scikit-learn库创建一个简单的分类模型:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6196a59d-6b1f-41e5-bb5e-4ae1e2d295db",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Accuracy: 1.00\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "所有图表已显示。\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import load_iris\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, auc\n",
    "from sklearn.preprocessing import label_binarize\n",
    "\n",
    "# 加载数据\n",
    "iris = load_iris()\n",
    "X, y = iris.data, iris.target\n",
    "\n",
    "# 分割训练集和测试集\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "# 创建和训练模型\n",
    "clf = DecisionTreeClassifier(random_state=42)\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "# 预测和评估\n",
    "y_pred = clf.predict(X_test)\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Model Accuracy: {accuracy:.2f}\")\n",
    "\n",
    "# 1. 特征分布图\n",
    "plt.figure(figsize=(12, 8))\n",
    "for i in range(4):\n",
    "    plt.subplot(2, 2, i+1)\n",
    "    for j in range(3):\n",
    "        plt.hist(X[y == j, i], label=iris.target_names[j], alpha=0.7)\n",
    "    plt.xlabel(iris.feature_names[i])\n",
    "    plt.ylabel('Frequency')\n",
    "    plt.legend()\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# 2. 决策树可视化\n",
    "plt.figure(figsize=(20,10))\n",
    "plot_tree(clf, feature_names=iris.feature_names, class_names=iris.target_names, filled=True, rounded=True)\n",
    "plt.show()\n",
    "\n",
    "# 3. 混淆矩阵\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "plt.figure(figsize=(8,6))\n",
    "plt.imshow(cm, interpolation='nearest', cmap=plt.cm.Blues)\n",
    "plt.title('Confusion Matrix')\n",
    "plt.colorbar()\n",
    "tick_marks = np.arange(len(iris.target_names))\n",
    "plt.xticks(tick_marks, iris.target_names, rotation=45)\n",
    "plt.yticks(tick_marks, iris.target_names)\n",
    "plt.ylabel('True label')\n",
    "plt.xlabel('Predicted label')\n",
    "for i in range(cm.shape[0]):\n",
    "    for j in range(cm.shape[1]):\n",
    "        plt.text(j, i, format(cm[i, j], 'd'), \n",
    "                 horizontalalignment=\"center\", \n",
    "                 color=\"white\" if cm[i, j] > cm.max() / 2. else \"black\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# 4. ROC曲线\n",
    "y_test_bin = label_binarize(y_test, classes=[0, 1, 2])\n",
    "y_score = clf.predict_proba(X_test)\n",
    "\n",
    "fpr = dict()\n",
    "tpr = dict()\n",
    "roc_auc = dict()\n",
    "for i in range(3):\n",
    "    fpr[i], tpr[i], _ = roc_curve(y_test_bin[:, i], y_score[:, i])\n",
    "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
    "\n",
    "plt.figure(figsize=(8, 6))\n",
    "colors = ['blue', 'red', 'green']\n",
    "for i, color in zip(range(3), colors):\n",
    "    plt.plot(fpr[i], tpr[i], color=color, lw=2,\n",
    "             label=f'ROC curve of class {iris.target_names[i]} (area = {roc_auc[i]:.2f})')\n",
    "plt.plot([0, 1], [0, 1], 'k--', lw=2)\n",
    "plt.xlim([0.0, 1.0])\n",
    "plt.ylim([0.0, 1.05])\n",
    "plt.xlabel('False Positive Rate')\n",
    "plt.ylabel('True Positive Rate')\n",
    "plt.title('Receiver Operating Characteristic (ROC) Curve')\n",
    "plt.legend(loc=\"lower right\")\n",
    "plt.show()\n",
    "\n",
    "print(\"所有图表已显示。\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e082a0b-0a38-4ec0-b29d-d38e71069221",
   "metadata": {},
   "source": [
    "### 案例4：GUI应用案例 - 简单的待办事项应用\n",
    "\n",
    "这个案例展示如何使用tkinter创建一个简单的GUI应用:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "70735c9d-8625-4ca5-931a-751652115360",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "from tkinter import messagebox\n",
    "\n",
    "class TodoApp:\n",
    "    def __init__(self, master):\n",
    "        self.master = master\n",
    "        master.title(\"Todo App\")\n",
    "\n",
    "        self.todo_list = []\n",
    "\n",
    "        self.entry = tk.Entry(master, width=30)\n",
    "        self.entry.pack()\n",
    "\n",
    "        self.add_button = tk.Button(master, text=\"Add Task\", command=self.add_task)\n",
    "        self.add_button.pack()\n",
    "\n",
    "        self.listbox = tk.Listbox(master, width=40)\n",
    "        self.listbox.pack()\n",
    "\n",
    "        self.delete_button = tk.Button(master, text=\"Delete Task\", command=self.delete_task)\n",
    "        self.delete_button.pack()\n",
    "\n",
    "    def add_task(self):\n",
    "        task = self.entry.get()\n",
    "        if task:\n",
    "            self.todo_list.append(task)\n",
    "            self.listbox.insert(tk.END, task)\n",
    "            self.entry.delete(0, tk.END)\n",
    "        else:\n",
    "            messagebox.showwarning(\"Warning\", \"Please enter a task!\")\n",
    "\n",
    "    def delete_task(self):\n",
    "        try:\n",
    "            index = self.listbox.curselection()[0]\n",
    "            self.listbox.delete(index)\n",
    "            del self.todo_list[index]\n",
    "        except IndexError:\n",
    "            messagebox.showwarning(\"Warning\", \"Please select a task to delete!\")\n",
    "\n",
    "root = tk.Tk()\n",
    "todo_app = TodoApp(root)\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb0d6cc0-e963-4307-85a7-35095efa8953",
   "metadata": {},
   "source": [
    "## Python开发环境"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebbe9d2e-678f-4b4e-935a-23ace50963f2",
   "metadata": {},
   "source": [
    "Python是一种流行的高级编程语言,以其简洁、易读的语法和强大的生态系统而闻名。一个好的Python开发环境可以大大提高编程效率和代码质量。以下是Python开发环境的主要组成部分和一些推荐的工具:\n",
    "\n",
    "1. Python解释器\n",
    "\n",
    "    Python解释器是运行Python代码的核心组件。\n",
    "\n",
    "    推荐版本: Python 3.x (最新稳定版)\n",
    "- 下载地址: https://www.python.org/downloads/\n",
    "\n",
    "    安装时,建议勾选\"Add Python to PATH\"选项,以便在命令行中直接使用Python。\n",
    "\n",
    "2. 集成开发环境 (IDE)\n",
    "\n",
    "    IDE提供了代码编辑、调试、版本控制等综合功能。\n",
    "\n",
    "    推荐的Python IDE:\n",
    "- PyCharm: 功能强大,适合专业开发\n",
    "- Visual Studio Code (VS Code): 轻量级,可通过插件扩展功能\n",
    "- Jupyter Notebook: 适合数据分析和科学计算\n",
    "\n",
    "3. 包管理工具\n",
    "\n",
    "    pip是Python的标准包管理工具,用于安装和管理第三方库。\n",
    "- pip install package_name  # 安装包\n",
    "- pip list  # 列出已安装的包\n",
    "- pip freeze > requirements.txt  # 导出依赖列表\n",
    "\n",
    "4. 虚拟环境\n",
    "\n",
    "    虚拟环境用于创建独立的Python环境,避免不同项目间的依赖冲突。\n",
    "    推荐使用venv(Python 3.3+内置):\n",
    "- a. python -m venv myenv  # 创建虚拟环境\n",
    "- b. source myenv/bin/activate  # 激活虚拟环境 ((Linux/Mac))\n",
    "- c. myenv\\Scripts\\activate  # 激活虚拟环境 (Windows)\n",
    "5. 版本控制\n",
    "\n",
    "    Git是最流行的版本控制系统,用于跟踪代码变更和协作开发。\n",
    "\n",
    "- 安装Git: https://git-scm.com/downloads\n",
    "- 基本用法: git init, git add, git commit, git push, git pull\n",
    "\n",
    "6. 代码质量工具\n",
    "\n",
    "- pylint: 静态代码分析工具,检查代码风格和潜在错误\n",
    "- black: 自动代码格式化工具\n",
    "- isort: 自动对import语句进行排序\n",
    "\n",
    "7. 测试框架\n",
    "\n",
    "- unittest: Python标准库中的单元测试框架\n",
    "- pytest: 更现代和功能丰富的测试框架\n",
    "\n",
    "8. 常用第三方库\n",
    "\n",
    "- NumPy: 用于科学计算\n",
    "- Pandas: 用于数据分析\n",
    "- Matplotlib: 用于数据可视化\n",
    "- Requests: 用于HTTP请求\n",
    "- Django/Flask: Web开发框架)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e9ae173-12ff-4dcd-b7df-df2098886c5c",
   "metadata": {},
   "source": [
    "# <center> Python基础语法回顾"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6315a2e6-877c-487e-8056-47084ea475ac",
   "metadata": {},
   "source": [
    "## 基本输入和输出"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c9fb9e3-c22c-4b4b-9af3-ad4eb640e6c8",
   "metadata": {},
   "source": [
    "常用的输入与输出设备有很多，如摄像机、扫描仪、话筒、键盘等都是输入设备，经过计算机解码后在显示器或打印机等终端输出显示。而基本的输入与输出是指我们平时从键盘上输入字符，然后在屏幕上显示。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afc8a07c-a7c4-413e-86dc-86fcb3a43ebc",
   "metadata": {},
   "source": [
    "### 使用print()函数进行简单输出"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1316594b-5cf8-4ece-9ae1-7e4376ad8371",
   "metadata": {},
   "source": [
    "在Python中，使用内置的print()函数可以将结果输出到IDLE或标准控制台上。\n",
    "其中，输出内容可以是数字和字符串（字符串需要使用引号括起来），此类内容将直接输出；也可以是包含运算符的表达式，此类内容将计算结果输出。例如："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3fdc6914-355c-4cbf-b297-b9c7c4f33d34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n",
      "100\n",
      "500\n",
      "go big or go home\n"
     ]
    }
   ],
   "source": [
    "a = 100                              # 变量a，值为100\n",
    "b = 5                                # 变量b，值为5\n",
    "print(9)                             # 输出数字9\n",
    "print(a)                             # 输出变量a的值100\n",
    "print(a*b)                           # 输出a*b的运算结果500\n",
    "print(\"go big or go home\")           # 输出go big or go home"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a61c9377-70c1-46de-a3ab-e92b525056cf",
   "metadata": {},
   "source": [
    "### 使用input()函数输入"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3a36cbd-0d83-43e2-835a-7f4595a50ee6",
   "metadata": {},
   "source": [
    "在Python中，使用内置函数input()可以接收用户的键盘输入。input()函数的基本语法格式如下：\n",
    "\n",
    "variable = input(\"提示文字\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "bbcf19dc-db7e-49a5-bd7b-689a5ad1b00a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入您的幸运数字：1234asdxcv\n"
     ]
    }
   ],
   "source": [
    "num = input(\"请输入您的幸运数字：\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71f35e75-e87d-49d7-af9d-0b460e9157e7",
   "metadata": {},
   "source": [
    "## 常用条件语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0614997d-9741-41c4-bd2e-be4437983889",
   "metadata": {},
   "source": [
    "程序中的选择语句也称为条件语句，即按照条件选择执行不同的代码段。Python中选择语句主要有3种形式，分别为if语句、if...else语句和if...elif...else语句。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74666379-3c50-45b6-ac9e-82bc721764ee",
   "metadata": {},
   "source": [
    "### if语句"
   ]
  },
  {
   "attachments": {
    "8df8b840-d64f-4a6a-ad4c-2bc703147511.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "c5779280-532a-492d-8251-57faa1ca0d9b",
   "metadata": {},
   "source": [
    "Python中使用if保留字来组成选择语句，其语法格式如下：\n",
    "<code>\n",
    "if 表达式:\n",
    "    语句块\n",
    "\n",
    "其中，表达式可以是一个单纯的布尔值或变量，也可以是比较表达式或逻辑表达式（例如，a  >  b  and  a  !=  c）。如果表达式为真，则执行“语句块”；如果表达式为假，则跳过“语句块”，继续执行后面的语句。这种形式的if语句相当于汉语里的关联词语“如果......则......”，其流程图如图所示。\n",
    "\n",
    "![image.png](attachment:8df8b840-d64f-4a6a-ad4c-2bc703147511.png)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bebcf8a1-cea2-4cbe-9edc-ea141b6270db",
   "metadata": {},
   "source": [
    "如果你购买了一张彩票，现在公布出来的中奖号码是“432678”，那么使用if语句可以判断是否中奖，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "cd865bf6-2fd2-4707-9698-3ae141ad7806",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入您的6位奖票号码：432678\n",
      "432678 你中了本期大奖，请速来领奖！！\n"
     ]
    }
   ],
   "source": [
    "number = int(input(\"请输入您的6位奖票号码：\"))  # 输入奖票号码\n",
    "if number == 432678 :        # 判断是否符合条件，即输入奖票号码是否等于432678\n",
    "    print(number,\"你中了本期大奖，请速来领奖！！\") # 等于中奖号码，输出中奖信息\n",
    "if number != 432678 :        # 判断是否符合条件，即输入奖票号码不等于432678\n",
    "    print(number,\"你未中本期大奖！！\")         # 不等于中奖号码，输出未中奖信息"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47edf939-c303-4a0b-80f4-6658534dfbf9",
   "metadata": {},
   "source": [
    "在实际商品销售中，经常需要对商品的价格、销量进行分类，如果商品日销量大于或等于100，那么可以用A来表示，使用if语句实现方法如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "072c4d83-6222-4213-b854-025f9d1c57d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = 90                            # 商品日销量为105\n",
    "if data >=100 :         # 判断是否符合条件，即日商品销量是否大于或等于100\n",
    "    print(data,\"此商品为A类商品！！\")# 当商品日销量大于或等于100时，输出A类商品信息"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cdaba43-846a-407b-bca2-c02c617d8ab7",
   "metadata": {},
   "source": [
    "如果商品日销量小于100，那么可以用B来表示，使用if语句实现方法如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dd60e1cf-4190-4a3d-9f74-5ce2851c1532",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "65 此商品为B类商品！！\n"
     ]
    }
   ],
   "source": [
    "data =65                              # 商品日销量为65\n",
    "if data < 100 :                       # 判断是否符合条件，即商品日销量是否小于100\n",
    "    print(data,\"此商品为B类商品！！\") # 当商品日销量小于100时，输出B类商品信息"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b2fb770-d6c5-4893-9c87-2d1badedae87",
   "metadata": {},
   "source": [
    "### if...else语句"
   ]
  },
  {
   "attachments": {
    "4911defe-f59e-4e62-a0f1-6423512f1a2e.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAALgAAACrCAYAAADVcVbyAAAXHElEQVR4Ae2daY/WRhaF8+dGqNVCCKFGLdRRI1q0oEUjFrEKCATCvoQlhC0bJCEhIRCykGWSyUQziubT/CSPnuq5naJiu/26yn6r3eeDVXbZZZfvPXXq1q3ttb+tmyh0SAZDxcBrQ/0x/ZcKLRgQwFWDDboGF8AFcAFc1b2q+9WKATF4xww+uX5DMbd9Z7FzYXexsGtPsXNhT7F9fqHYuHFq0MyZS4EQwDsC+MTk+uLAwaPF1WvvFG/feLf0OHb8zWLT1LSA3pEO1MjsSLBTU9PF+QvXSkEdgv3K1VvFtrkdAnlHuhCDJxbsho1TxaXLNxqB2wf77OycQJ5YF2LwxAJdt26yOPXmuZHBDdBh8vXrNwrkiXUiBk8o0Ndnt7UCtzH5vv2HBfCE+hCDJxbmiTfORAH8wsW3i3WJ85SLN2Nc+RCDJwIUwLx46XoUwGHyTZs2i8UT6UQMnlCQANxMjZhwdqsamynZXgyeCOSpAL5123YxeCKdiMETChKAt3EPhmw/tXmLAJ5QL2LwhMI8dfp8lJly+cpNNTIT6kMMnliYc3M7ogB++MgJsXdinYjBEwp0YmKycRd9aJpcu35bHpSEurCGqgCeWKjTW16vHWAVAtuuGW1oSlGYbniyAJ4Y4ICTHs26UYQGagsXd++X7d2BHtCFAN6RYKenZ1Ycl3Lu/NVCg6zSsXVZzSeAdwRwhI3rEJNlcXFfcfzEacfqDMbau/egY3ls9jKlKC4d6AXwDgEeAvXkqbMyRXqUN/IXwHsUuACejplD8qi6FsB7BPgbJ98Sg/cobzF4z8IWg4vBB93oEsAFcAG851qlynYdSrxs8B4BJQYXgw+awdXIFMAHDXAxuAAugPdoMg3Fzq77D9ngPQJKDC4GF4P3WODqmG8o98TgHQOKZSBYTZbj7Lkry+cMqR0KiHL+DwG8B4DbuG8/1Oz5fswVAbxjgMNuLKPsg/vM2UsF6xjmzHxDyZsA3gPAWezeB7iWS+6HvSmkAngPAEfQhw4fdyB/69xljSjsSeYCeI+ChsWZp8l2JkOp/lfDf4jBewL55OSGgoWBWCB/NQBjKHkUwDsEOA1JvCVHjr7h5mTiKsRUYUzK/I5dBfv4DAVIuf6HAJ4Y4EwkZqIxnhN6LtlVbf2Gja/Y3bA5q2CxCdWRYyfdzHqBvZuGpwCeCOAsmrlrcW/x5pkLxd59h9wqVcyqX4nZ2GaQWffMtmeHhy0zs68UhpXS6369jAXwBiCsAhHMzN6X2NaAemZmaxQ42Z2NQsL79uw9UGil2XrwVunFjxfARwQ4psT8/IKzqbGtWbhnYiKtLQ3zb9ky6woNzM7KVxQmX3E6bwZ+AbwBwAEwY0essYirD9OiD5D532YPIGx37cbWDNzoRwCvALitSrV7zwFnV2My9AXqqoKDV2bHzsUCoOONYbuT1LVH1bdXa7wAHgCcrbUBtZkGm6dnKpm6zXiSJg1PA1Pds/jTWZEWT83+A0ei7X/75tDCNQ9wQAQz07gzsGD/NgHvBx89fsU2DtkUjwgNRh80R4+dct4SP67qHHfit9//4jwyMHYZ4ImjUDpPzP8buwzRLXu26jtDjl+zAAfUf/FFr9BYxKcN0OwAfNjldv3kixfOzecD5vHnzwp/kc3Tb110vnH/mapzCsyz5y9dAWF7E75V9SzxFErzwdOZRH43bNhUm6bufUO4t6YADgDwegBIVnvFnh21gwVmtOOjR587G5hrwISbLwSFMamlYclkejS55nlci6Sxzp+Z17cWdtCwffnjb+6afH/y+Klr7IbfKLvm/fSi8q/WOB13G6Isn13HDR7gKHrZ5Xb6/BKrtRwPwrvoocT3zQG7YhoAblx5/h6XFBy8HfRUAmhjelgeFgd4mCukq1Pyx59+WXu/Lq3dIy/kgZ5T9gFiuG4TE8zSr+ZwkAAHiIzeYx1uayzSaUJ8W2VhTwMQQGkH7OrH3bh1t7h95333DdiTxuqzr3945Zuwfhm4rIsfE8PMDArHnbsfROU7/F8ap4yDQS4UVr4VI5fw/bldZw1whI8yRjlgU2bMwFRLykszcwYQ+MBk6OuVq7dc7YBS6WanQPkKxux4+OjJchyNQWxygBt23PB+doWgIN6996ELaSzyHb9m8N8fc873eD89sIxRpzCOImd7NvfJG1kDHIbBTsb+bHogcNxmeC9IixJjgFCWFm/LhYtvO+Zj81eqfyYUh0zoA5x7t24/cB4Pzh998kUlcK/fvLOcZwoObFuWj5g4ChiNbOxzzCd6Z5vK2H8OMonJR9dpswd4W4DCtjTS/hzVt9s15GIECmAB9Hcvf3UNON4FMGDZsvf6AKdG8Zl446bNzgVYls4HOF4QzBxzQa5ks5e9z+IoWIAaQGNmcU4e7X6bMHSDtnlHl2nyB3iJZ2JUgaBEbGKzl2F533XX5H0UFhqUeCLeefc99z7OYW9ccvfuf+QmMxiLc4/CgH8dj01okvBN86BwTjoapYDum+/+7mohhgQQR+2Afc8zvLNJfu0ZCjrfOXjomKvVyG9K16EAHtGwg33bMrgpOAwBGvajdXcvDU8dzU6//94j57KDla2g4FWh0XnrnfuObXk/7+b79Djef/CwePD+x64gUEBoPBKHRwUQ8vynj79aKkQBqwJsGq+83xqx4X+F19jytAkwp7CvkaMVvvDZmGuGB8ek7zrtmmDwKiHiUQAEKAl2plu+CQh4lgZs+N6V0lIY+CaNTWoETJaV0vjfoOahFvLj/HM8RxRe/sc8JP79Ls7F4BEMDgD6GDkHyPCVM6AKhQFggNgFIFK/E/OLxjRmEL51TLFRCk2YH9KOdkyO+Hx7V22Y1ybXY2HwGAU0+amYZ2BZehIxPzAbAE9sQywmP2VpySNAxt0IsLdum0820nEU3fCsmWhl+SyLG+X9ZelHjRsbwLERfXeT72Me9Se6ep4eQBp9mAV4HqhRxgV2gIRZ9KdXaE8ntRseIXz1hAwN4Htl8qW2e/rVd66Ald2vilszAH/y9JuCcRnPX/zoGmb4e6uEkkM8wPZHHMLyfSgLIrBpbDbXs0t5AFwawHyDAl7n58Z7xDFKfvqQmZ+fMTH4pLNzcVnBEs49tn2nA4x5NRAEB7YxGeacxpmf+b6FZd8mH3hN3ATjvQdd49TupQjx9NAOoD2AB2RJJv3Yrj7A8fHzP8gZbw+s7gO+DOCQFn58XJsmC1yUuDmpDfrW2ZgAvqQsA7gJAtD8+tsfxYcPPysYlIRQfv7lX05QN2/dcwrnWQTGWn+42+q8CvberkKUhdkAs+KOi5k7SQ2BBwSbGvsfL4t17nSV/7L3AnCGAV+8dN31tvIMZhpj3/lfal7zIIUAp1BSCDA36bXledowuFU5Z+CYFZqyb3cRlxXA+cHvf/iHYy9sTgSFsInHQwCjIajffv+P67wABBQI4roQzijvBIyYLdjqNE4BRVnnjv9O0vAPNBYpqG6uZ+AD95/v49xncMb18E3+g44sIxzroAoBTk1MjUxPr9nuEBPDEmD29z74ZMXRk6n/MTuAv/jmp1c8AiHAAcW///ivAxJg4sgB4L5iyA9sbI1TPB7GxhRaTA430hGX5O79Y2u4+nm2cx/gFkdtaT2odEZhNvGPIcABNexObfTjz78705Oajc4v3oUc6qYA2vdShlkC3Pd903uHQD978twJCsHCCIyAo2HatGcvpdBGeRfsRzXNgClXC7EMxOK+0skRo7y3q2dh6Rff/vxKDzI1C8x8/sI1FzLkl4JAHAfn5IdBbvTOMsoSOxxdcdBohb2tl7ervJe9d6wAp2qGBWwmDECmxDMQyGafUB1il2KfU2XCgDAE4IYxaOmX/VhucSiaziPyn1ve/PyQT/869XnX7w/zO1aAh5nRdbfgaiLfrgHY9fvDfxTAO2asUOC5X3cNwK7fH8p3LAAPM1F13ddYlKrvK37lGkWDrSIYEhs79XBZgXZl0I4iIwFcAO+00TYKGLt4VuPBYwEedM93oSS9sz2rC+CxAO9g0rAA3R7QoexkosQCXAyetYkjgMcCXAwugEdgKGs3ofOiiMGzBrhs8IjSJzdhOls5tJ1TXctEEcCzZuBYoAvgArgAHoGB2AIoG3yMwo9VXg7pZYOPCCDW7GMMCgczY1gVyq5zUKjysLQKrumEmTp2zuq4ucknOwZnrDcD5plF4h8Mps9NeGs1P0yz83Vj58zYyU0m2QEcATGNy4RGyETW1bLSVG4K7iI/DHlllr2vo1xNlSwBzjQvQG0CxF3YhaL0zvZuyJDFWcQpR3lmCXAEZSzu2HuN7xSWI3BgcVgbElpaIbd9Yeny/7IFOBOPAbfYO0/gAEoalwA8V/Ymj7UAZ7IBS4eN62BSMkIc1/f5rk1+7pJl2r6btWPGKRu+DXuPNQ9T07UTuWsBzjIBmArMdie0c//aj/PjOa87ytJZektX9Yzdt+dXei68b+nsPWX3uceKVbYkQlsQdpkOYLEcRfg/9l8WVv2fH8+5fx2mtfsW2jctjYVhvL3HQkvvP+/fs/QWF4aW3p5jFQbWRa+Scy3ASVyVcC3E09hFkLn+KwDPOX99yI01ZgTwETubTDECeL72v+lIAG8JbgQIwHM3UcTgEQzOqlNWUtZiKAYfOIO3Abi/0GRZoWD53LLl1i5fuem25CtLE8axHqEtZsk91i301zMMn297PVSAs+VJ3QI8VPvhEnMMoXD7dTZYKo/10/1htLQVcCe21UNduigTpQ3AcasBOATIopMAmq0uWMCRg1ZwuMIoAmDZZNySNBj8g2dZitj/SRZ89K9Z8dS/9s/JR9sxEkMFOCvAshgmsmH3CNZpR4amI8yecGgE60WyHruvGztnzUjfncqmBdeu317WCfplGWVfL3ZOwQFn7BwNWC2+adg7wMmYLWmMkFgqmJJP6AQYgBUhIzgyyvra4cGKrGHpZ3VZvoOPHAWxGiqLc2Iv+4WSDU8Z7WZLMDcVmj03VIAjc/OQAVK63VnYHh0hQ9tVw+QAeLnPc6F+uEYfgNieJz2ddHwH8KNDFr9HR8T7HUMUNEDOs5yPSkZRADchWMabhgCDZxEMAoBxEQDbX7B7gf8eMsiODX6cfw672NrU1AZ0/rDAOqAHzAgG4ZGGbwBoPz1VLTsH+3FNz4cKcP4fYBNiTlBD3r33oZMfTBvuwsDoznD7GF+GtsszcfQ8s30JtTg7OwBm9GIkxVLKFCRLz2YGtvMyS2JTGOxekzAK4D4bNvkYgKCUP3v+cnl7OZZGtgXQqeYQgJVSQko1cSwWT8cKB8K2Uu4D3HZ9gDEALuAmX58/+dqFVoj8vMYCfGheFMxASAez0eRHLWgkg6mAzM0sRD+YNOjE9MPS1Us6WJK/D3B0BICXGHxJR4wT5xq9AHB/3LjfHmObFNs9wtdh3XkUwNsy+MNHT5yLDRscYSEkzAmqK+IQJoXBfg5mR8j2I5R8a0T6ALf7BnCe4XCNn4n1ThGwDT9tzwrgf/WEAGwWsYd8TD+E6AjZweCQDmA125rd8EymyByTxa59gBNnJorpB7IC4FxTUBjbH645yTdHJVS+FQXwNh/kowDc2IHSDhvYAVNjc5lwCNsAnPdRUFAENjjAZlsQrjns/QJ4NcBNRjQqTT+E6Ai52X3CNgBHD9SAmCeYqaYbQt8MokZh9pb/vabnYwM4pRWTIfR4AP4ygGO3wfAcpCE9P8kPUG3aD1NwYGyEhGCY0saAnzKlkCYW4Dl3pCDfNvkzBsf25WDMkcmXEPkbQVk8DXXTDzrBxrZ7mBZmRxOHXthMludwNGCWUFswbsbSWIi54lsKTFm0e03CsQAc+45Siwny4P2PX8kwADfw2g9gt/tuKapGu0fJxvbjmq3taGnjagS4KMEVhsmlHc6sIWNpCfnWDz/9c/l9/r2VzofayERuABbi4Nzf0xKZYL6EsvFNSNL4DA+YjbS+fPqt0xM65R2Eto8SRMTmXPZu3kPtTUgc5is1vt1vEvYOcDILCK1EA3aEYwfsa8Ko+gFKOz9LYwXhGfjpzDFhEMdGR7ZnI++icwHAm5sL+5FWOfaf2f1V3yyLHyrAIRBY14iENo/pB8DgpSqThx9nJg0Axh43vfjkhVuYDjxra1EocAhQY6A/cIBu/MPXp/+9qvMogPtVR9UHVoq3EooAOACaCbYuLQJAGGXtgG1zO1xJL3sPecYPX/fupvcA+NC8KGX/Tg1p+iFsKj/MQ9o/5vGydwNy5IaeLM5C7sHoNGgtLiaMAngZuGIys9rSDpXBV5se6vIbBfAUDF6XudzvrRUGz10PdfmLArgYfG2YKHUAyv2eAB45HryNG64vULR1E/aVvz6+I4AL4Ekac32Atc03ogAuG1xzMtuArs80UQCnkwU7nNAOu64K7bkw5HlL498ri+M+8fhL6f2y56uetef9MDy3d5TFl72XOA78vX0qbJRv4UpFPnX5t/8In1np2peXnVsaC4mn882/tmfLQnvOD+2c56vO7V3+fYvj/3EGVMmtdlZ9VaK+4umODwfl9PVtfeevY1jKZOLP3Cm7P+64/AGuPXoq2Wnc4OH7AnhEI08M3oxFxwl0ATwW4GLwrBk812WTrdDLRIkogCbEtRwK4BEAkomSv4kigAvgWZsYsbWPAC6AC+ARGIgtgPnb4CNOYYoViNKPZhbJixJRep0NLi9K1jWAAC6AZw3Q2BpLNrgAPmiAi8EjAM5cQQbVMEdwCAdLWwzhP/x/CGfkx9YIqdNn3chkAiwTi4dywHZMuh3K//Af6Cg1KFO+L2uAp/zRHN4FwHMHRA5ySpkHAbxHBhLA+2d7AVwAz9rEiGVzAVwAF8BjS5HSL1XNMlFkogyaTQRwAVwA79FkWgs1q2zwHgElBheDi8F7LHBicAk7aYETg4vBkwIqN4YSwAVwAVy1ZlIMqJHZMaDYhoVt85i8wTJnhFyzO0JuNcwQ8yOAdwxwdhRmc6zwsE2ahgiqnP5JAO8Y4Cjb9oo0kLPbmEYV9mOPC+A9AJxVYNlJzABuW5nnxHRDzYsA3gPAAQ+2NwAXe/fD3FZgBfCeAM6+obC42FsAH5R3gSlqNCi3zy+4XX3Z6Zd9JdnU1lhGYXegF4N3xODMV2T3YDp3FnbtcRufsmkU+7jjImQCMmZL3e4EAn488AXwDgCOa5D1QrZumy84Z3WA4ydOOwZnGw52e2a7cbat5hrQC8zxYC6ToQCeGOAwMqzN1itsQXjt+u1l74l5USw8euyU27OdpTEAfJmCFBcHfAE8IcDxbR85drLAFGHtEANyXYhXBTci4eTkBoE8oT4gBwE8oUDplt+3/3Axt31nI3Ab8LHFaYjSISTGjmPsUH4CeEKAw9qwMdsfGnibhpg0bIkXKkjXcYAXwBMBHPOEBuPm6ZmRwU0hwH0I+9MoFajjQO3LTwBPCHAYHM9JU9b2n8M8wX2Ij9xXkM7jwC6AJwT4ocPHR7a/DeQMoZ2fX1BPZyJ9GDEI4IkEioni3H0zs60YnD3XF3fvdyaOKUdhHHsjPwE8EcARJjY4jcw637cxdhjigaEzaN26SZkoCXUigCcUJg3FubkdrrEYArju+szZS8XGTZud71ysHc/avgwF8IQAZ2AVvZiw+LnzVxuZKrA9HUOHj5xwoa8cnceDXQBPCHAASYcN3pRNU9MFux/UMfeVq7cKTJMdOxddt74AHQ/oUIYCeGKAI2CGxsLIMDmNx7Dj59LlGwUeF8wS7tOTqSls6cGNLgTwDgCOYBkhiLmC64/Om4nJ9c4EYRw4B/7yk6fOuvsh6+g6HdgF8I4ADkhhZYAMQ+NhYQw4rkTYG+BrcFU6IFeRggDeIcCrhK747oFtMhbABfBB+90FcAFcADe6V9hf1SpZp5G1GFwMLgYXm6RhE8mxfzn+D5DJcrc+wqDpAAAAAElFTkSuQmCC"
    }
   },
   "cell_type": "markdown",
   "id": "8db3d3d4-3b90-47b3-bd16-2705ecea947c",
   "metadata": {},
   "source": [
    "生活中经常遇到二选一的情况，例如，如果明天下雨，就去看电影，否则就去踢足球；如果密码输入正确，就进入网站，否则需要重新输入密码；如果购物金额超过200元，就可以返100元购物券，否则就只能参加加钱换购活动。Python提供了if...else语句解决类似问题，其语法格式如下：\n",
    "<code>\n",
    "if 表达式:\n",
    "    语句块1\n",
    "else:\n",
    "    语句块2\n",
    "\n",
    "在使用if...else语句时，表达式可以是一个单纯的布尔值或变量，也可以是比较表达式或逻辑表达式。如果满足条件，则执行“语句块1”，否则执行“语句块2”。这种形式的选择语句相当于汉语里的关联词语“如果......否则......”，其流程图如图所示。\n",
    "\n",
    "![image.png](attachment:4911defe-f59e-4e62-a0f1-6423512f1a2e.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6cddb7b3-dddd-4f89-a28c-815586a2feb1",
   "metadata": {},
   "source": [
    "在登录网站时，通常需要输入用户名称和登录密码，然后验证是否为网站的注册用户。现在使用if...else语句来判断用户输入的用户名称是否正确。假设用户名称为mingri，如果用用户名称和登录密码输入正确，则输出“恭喜你，登录成功！”；如果用户名称输入错误，则输出“登录失败！”。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "a489aec8-9243-4b74-b605-b8e2c4c2c208",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "用户名称:123\n",
      "登录密码:asdf\n",
      "登录失败！\n"
     ]
    }
   ],
   "source": [
    "myuser=\"mingri\"                        # 网站注册用户名称\n",
    "mypwd=\"888888\"                         # 网站注册登录密码\n",
    "user = input(\"用户名称:\")\n",
    "pwd = input(\"登录密码:\")\n",
    "# 判断输入的用户名称和登录密码是否正确，即输入的用户名称是否等于“mingri”，登录密码是\n",
    "# 否为“888888”\n",
    "if user == myuser and pwd ==mypwd:   \n",
    "    print (\"恭喜你，登录成功！\")\n",
    "else:\n",
    "    print (\"登录失败！\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e640e8df-a862-4be9-851b-b782cc47e882",
   "metadata": {},
   "source": [
    "### if...elif...else语句"
   ]
  },
  {
   "attachments": {
    "c929b8dd-f694-4f93-8b6d-b3d66922f981.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXkAAADmCAYAAAAwRPUfAAAgAElEQVR4Ae2daY8Ux5aG58+NrFar1UKoUQs1agSiBQgQi9gs9n3HQIPZMbuNje3xcj2+c+deS/Nh5l/l6IniFNHVVZWRVblERr4fUplVGRnriSdOnNj+7d+/mMl0KQ8kA5IByUCaMvBvKtg0C1blqnKVDEgGkAFBXj0Z9eQkA5KBhGVAkE+4cKXJSZOTDEgGBHlBXlqcZEAykLAMCPIJF660OGlxkgHJgCAvyEuLkwxIBhKWAUE+4cKVFictTjIgGRDkBXlpcZIByUDCMiDIT1C4X3wxm83MzLmLZ2lL0pYkA5KBWGVAkC8A+Q0bFrJ9+w9nl6/cyr66+7W7Ll2+me3ddyjjXayFrHgJQJKB7sqAIB8A+S++mMlWVnZnN2+t9uFukLf7jZv3sh0ruwX6gPwUcLoLHJV9/WUvyAdAadv2nSPhbpC3+9ZtKwJ9QJ6qstdf2ZXn3cxzQT4HSPMbFrJbt+8HQx6Nfm5+g0Cfk68CTjeBo3Kvv9wF+RwYYW83LT30vmv3fkE+J19V2euv7Mrzbua5ID8GRtjiT52+UBjyx788LciPyVfBppuwUbk3U+6C/BgYMU3ywqXrhSF//uK1jAZCQq08kAxIBpqWAUF+DIxnZmYzgB1qpjF3Z89fEeTH5GvTQq/wBd4uyYAgPwZGaOMnT50vDPljx09Jix+Tr12qYEqrGpSmZUCQz4HRys49hSG/fccuQT4nX5sWfIUv+HZFBgT5HBjNzM5lrGo1U0ze/eLlG267g64IkNIpWEoG4pYBQT4H8gjwpsWl7PqNu7mgx83Cps3S4gPyVGCIGwwqn3TKR5APBNLi4tLYQdhzF64K8IF5KYCkAxCVZfxlKcgXABM7TrJtAQOrmHAwzfC8ddsOzaYpkI8CQ/xgUBmlU0aC/IRw2rlrrwO+KkM6lUFlqbJMUQYE+Skgz8ZlKQqF0iTYSQbSkQFBfgrIa8fJdCqCoKayTFUGBHlBXr2RCWUgVSgoXWk1eIL8hBUcm7zMNWlVBsFN5ZmiDAjyU0Be5hpBIUUoKE1pybUgPwXkpcmnVRkEN5VnijIgyAvysslPKAMpAkFpSq+hE+QnrOCaJ59eZRDgVKYpyoAgXxDyrHrlMBGO+GO3SZ51QIjgkCIclKY05FqQLwj5pS1b121UtnlpWSaPgvkogKQBEJVj/OUoyE8Ap9NnLvZBz6EiEvT4BV1lpDLqqgwI8hNAfmlpa3b7zgN3sTtlV4VH6RY4JQPxy4AgPwHkscGfOXspQ6OXPT5+IReIVEZdlgFBfgLIIzC79+x3g69dFh6lXfCUDMQvA4J8IOTR2Gdn5zPOfD1x8lzGFEounldWdmuWTWA+CgrxQ0FllFYZCfI5cJqb2+D2jd+3/3B24MCRbJgNfnHzlmz/gcPu4gARGgNVlLQqispT5dlWGRDkh0Ceue8Mrh48dMxdQHxmZjYX3LjZvHk5O3T4uLt4DvmurcKjeAt8koH4ZUCQ9yDPfHc0crT2aTVytHk2MEP7xz8aCg3Sxl8hBC2VUWoy0GnIA935DQvOzv7libPOxo4WX3Yh91bI7uvb7wlTwBdMypYz+SeZGiYDnYT8/PxGB3S09l2792UbN24qHezDMpv/Ni4sulk5Bw4edY0LcRnlVv+r0koGJAPTykBnID87N58tL2/v29kXFhbXwHXDhoVs775D/f98TRszztz8hv47ZtXkDa7iBrv+YDh+gS1s2pwdPvJlBvC3LG/L9dP/Vs+q/JIByUCIDCQNeUC9vHW7AykbigFr3xzDZmPAFdhiP795a9U9M4MG+BroeX/l6u0+5FkI5fszLKPPX7zmTEG3bt939njcWHyw0fvf4Bdx27v3oAuXxsjC9t3V8UyeMH5QR1gKQ5CSDFQvA8lBntksQBmoHzt+yu0UOQ6YaOhcQPbqta/cM3PhB004Bj/8vnT5pguDBoRGAkG1Z35z3V19lO3ZeyDbsbLbuScOXGj4fD9KuHHDvHvijlvCI+xR7ov8v337zuyff/2vC//bDz+v62WQD9+8+ja7ePlGKeEViZvcVl/ZlcfdzONkIA+U0ZCZ9siJTaG2bsCGW0wrBnn+A9A0GNjQgSP2exqCTYtL2bMXb92dZwZRBysPphwWSQH4wXfEbRzkfffEi7Ax56DlY1Ly30/y/MPH35wfbvbQ3Lxr1Mgz1gPgHz0YH/JMA6Wxsfczs3Mub8pqeCZJg77pJqxU7pOVe5SQByhosCEXWi+QAspFIch8dswqXL/89l/Zy9ffueeHj144TZz94hEsTDmAjucNGzdlT5+/cfD3hY5GAjPLuQtXs+NfnnbuB80yuC8Ced9/GjFAz5RMGo+QvBl0Q+P1t//8V3b02Em3uRq9hvtfP3MNFWnmN5C/cOm6Syvff3X3axfekaMnXGP45NlrtxYAjd+Pn54nq4DKN+Vb1TIQJeQxtWAyMdPHuDuzY9CauefZyUdlJhuNAWQgisYOBAGiufchjxaOhg1scWdu7E6DwTMa/o2b99a9nxTypI39cpjqSVrH5cmodzQUpskTD6D+6PE32fETZ7J7q4/XQZ4wSc/Hn/7mGjAal9dvv3eN6rC0WR7oLnBJBuKRgWghj5mkiKDYClVmyKBR581+wW80VXoBHz7+6sICemjigyYYGh0aAbORW7wAvt8Y8P/lK7d64c/NO3DiF2HYN0UgTxqw9RM2jQrmIvNnkjs9pF9+/Xu/MQTiQB/TzZOnr1wjQoPHYDFmGRqLU6cvuMYP7Z5GAg2efKBhmCQO+iaeyq+y6EZZJAN5E1jgBAzRyDE98Ay87b3dsSljesHuDtToOQBToA3w0GxpLIAZkAds2KppGNDkmZLJ98xE4Rvs+XfuPXSaNg2UDdT+9B//ma3ef+LC5zsGZN+9/9HB2+Li34krcaaXQBp6WyqUs0ALSJMW4k6YFhYwB/SYuzB/kRc0COQlecA76yU5N7z3ejp+/PW8XtaUJ8qTJmUgOcj7mYkmjObMwCUAZ6DUf2/PZ89fce/tN/DDJMLdBhx5BySxt2MeQuPlO3oQvAOU9r1/B9LYscf1LAiHuBFHtH7MQ+Pc+/7rWQCRDEgGxslA0pC3hBussSn3bNr7Hbz539zUfbc4mZ2dWTRo2FXHCf+nv2bXNH51553Ca05ulffty/tOQH5QMDG5AFebqeJr64Nuy/6NmYPGhrAxnYxbEVt22GX5h9kJk05Z/smf9oFDZdaeMusk5E1AsZsDfMw52O8xuZjt2dyUccdP/MbODtx7Nvv2CMlgHgjy7S27wbLU7/TLstOQ9wUcEGNfxy7O/HmepzGd8C1+4JfNjKmiAfHTUNezIJ8+GOqSJYVTvSwJ8kPs8mj42MjNfs8sGv7LE0jc2AwWBmfxY5qGIi+8pt4L8tVXzKbKVuGmV7aC/BDI+4LOlEFs6Mx6wY4/OIcetzQCvMMNboe58f1s6zMzfphOyTRLzFs8s+1BW9OjeKcHNJXp+jIV5HMg7wsNwLf59wCOqY4s98fEkyrY/fQDeXbjZKsDu8gD342e11cy5YnypEkZEOQLQN4Kyu10ubDoBm1DzDj2XQp3tn4wwLPlAXmRQrqUBoE4VRkQ5CeAfKrCEJou0+YZcwj9Ru4EUclAMzIgyAvyhUHN7pzs0SMtvplKK1gq34vIgCAvyBeCPNNAGY9g4LUL4xBFKpPcCr4xyoAgL8gHQZ5FYzbnn4VdDEKzadvJU+dzT9+KUfAVJwG5KzIgyAvyIyFvc/5ZzOV2phyy86Rb9LWlt+iLbZ5ZAJbKoq+uQEDpTLvBE+QF+T7kATaAZk8dO74Qk0zogi7bg55ppWwVwb48od8KNGmDRuXbXPkK8oK829aY+e6sAbA97KeFMxuxsWgK2NtGbNP6KVA0BwrlfXvzXpDvKOSZGcPhJKzS5eK5itkygJ1dPgE9B7CwIriOLZUFpfZCSWVXbtkJ8h2D/OLiktswjVW6zJIx4NahZRMG4RM2PQYOdNHhKOVWaAFS+TkoA4J84pB3mvT8BjcTBjs7JhRs5z7UscNzdKH9x148JijMpPHPc+VcW7Ryez/s7jZn27HLnQ1LWOaGcJiVQzhc9B6w35uJqOoBW0ufxUd3AbELMiDIJwp5TCTMiMEUM8wmDvDQpDkoHHv8o8ffuGd+A2lfw2bqpFUGzrLlO/s97M7h32jse/YeyDgAnLCYdcMmbmjxNBT+d7bxmY0JsOlZFUBmthANC9ewg+IZZGaGkB83PashaLsMCPIJQR5YLm3Z6sDOYiXmto8TUAMvjQHn0LKS1WbV+N8BRwCM1v3m3Q/ubFsOQGF7A+z4wBuw24Vf979+5n4zjx54skKWXgH+/v7HP0fGqze7Z587S5deh2n+fnwmfWYbhvff/eQaGg5rHxyDIL84ZH1S//WdGoQYZUCQbznknZa8ZatbgYoW6gZQPRPJKKEDeBxKbgeTAz/3+8SZ7PqNu25WDI0GWvXL19/1wQe8B80qzKRBM+ZiAzMaCg4598PGDaYbxgCePn+z5p3vzn+2efr0Rlh4hR/++6LPQL0X/955AfxmDQDnBpiJavX+k34Y9IbIk7PnLruwyWsaN+JTRU+jaHrkXo1KiAwI8i2GPBo0MO0dTjLZbpDACi373IWr7mAUTDvMgPGFx8AHoB8+euHMPz5wzcZvtnsah7urj9b4Yf7Rw/C/tf/z7ph/+PbY8VOu5wD07dq1e1/GZb/tbv/Ze6D9w8ffslu37/e2ZZjfmGF+omG6eWvVxdfSSnwwLQF07jRg5DV5Q6NAXPLirPeCcAwyIMi3GPKYF4AyZhTs5IPmhzwBA/CrD5462z0LlwDesAO6DXyYXggTWD578XadOcggT7iPn7x02i5av2n+ANo05ry4+e+JG/PtuRgzsF5D0TuNEZo86caEtLy83Q04A3IGngmT/LCw8Z8G8MXL985s9Prt906TJ7+H5ZN9p7vgHpMMCPIthrwJEtACfmiXaKXOZJOzzzuaMaYIwI3dG+3aQIp/5jeaK4OnaMe+jZ/w+M/cAfIbN++5QVxs/cQF/3HHhTbMf/iHOcgPw/zw7zQGdgIVDdkk2r/vH8/EC1BbY0h8GFfg/seff7kVuq9ef/jUYM71zFYHjmSnz1zMFjdvcWlA42fsQdssf5aRwXzW77jyRpD3gJaCcGJSQUPF1oyG6oPZT59NbUS7RlNHMwW8mIA+/vi7u6NB02jgFlMFh4UAaLuwvZudG/AxsGoA5Y5WjF9AngYEbZnr2vU7/cZhTZxmZh3Y8RcTS5mDroRjs2vsoBfSC7zR2Lmj3bvZN5t7C8NoWPjt5yHPuPfjree4oKbyWFsegnxikPcFnAO30bYBLNowkPPf87xpccldg/8P+w0UAT8wp1Hg22Hu/P9wNyxcc4P9Hv/Q9JmqCVTtXdn3vN5D2eHJv7WwUX40kx+CfMKQt0oF3NCKAS52c8BvdnJzU+fdNGjMJDRAzrwUMCOozjjmhYXmn+dG75uBmvJ9bb4L8h2AvC/0AJZpkWjOzH1nawMz3fjuyn4mXDR/FkhhRmJOPlp82eHU4R9pwYxVR1gKYy2wlB/F80OQ7xjk/UqCNo8WDXQxlaCdmr3adzfpMzB0K29Xdru58/QgADv/T+pnDN8J8u0uvxhkqM44CPItB05ZwsKA7ZrthheXJoYxA5Zo6gz+ovH6A5dlxbdJfwR5Qb5J+SsatiAvyK/RqgEY5hvs98xyQftGG8/TvvnGtlSgZ8AUzTJ7BUUFu0r3grwgX6V8le23IC/Ir4G8L2DAjNk0zMzBnMO8dTR+c8N75p4zeIqNvzeF8vOuk+YulTtpp9FjeidTRrkzppFK+pSONBsvQV6QD4KUA/6mzW7hEJo6sGN5P3fedQUQtl6ANQNcgnx3yr6tMi7IdwhQZQkpq1FZNFWWf23yh8FpA3xvvx9Brk3l18W4CvKCfGFYs8gKm30XKwy9FsYqelr8SifzoIvl3uY0C/KCfGFQdRnyVHbGIc5fvNbfwqHNAFDc0++JCfKCvCBfQAZYOcwma+wrz2yiti7oEtzTh7uVsSBfoIJbpnX93jVNnkVjzCxiMzdm1LAXD3AH8ra7Jtp91+VC6Y+z4RDkBfnCcOoC5A3iLOZi+ug4iOOWRgB3DEintvhL8I4T3qHlIsgL8oK8JwPs68PGaezrA9iL7OvDoCwNIKt92UuffXpkzmk3IENBGrO7KCFv3eGYM67LcUtNk7eN01jU5TZO8xZ8TVPOTLfk3F0aDA4ZYeXwNP7pWzUYk8hAY5BH6/GvSSKvb5oR+rZDHrlj9Sr2dbZextTCfjv8X4VMYdOnIcF+z4AtK4NT3fKhivyTn9PJZWOQ59i1e6uP3dFyaDsqyOkKss78ayvk3cZp23c62GJr9w894VSoYXk4aG4Z5c7/lp7oqAYD84+d3MUGblUekuLHSc/tqV9ll1VjkEeL4rxMDqDmeDgqIMeqcQciPKMB2cHPHCdHBeO/sjNB/hWrAG2CPPKC5uwOKDlwZM3GaQDcLhY32TOmFdO0+Y8Dzg3anPeap5RgnmE1LG59iNN7IO/Mb4BPWPQmGLBFvi0cyWQxmVR+jc6vxiBPoRjkeabLzHmgHAZNpfrm1bcO9FQ+BB/Nn8rz8NELQb4is0JoRWkD5Bk0ZY8dgAzkgfVg+hhkBcJcyBl3+863n6P1G3xZBMV+PfhlCgd+A2i7CPPS5ZvOv/ff/eRMQ8SBvX7w6/adB+vigvbPKuLeUY37nF+D8Z3mN/WLhu7I0RNOsRr0yw0WnzizZgO6QTf6PRqkMedNNJBHu7m7+qhfeZ4+f+NWFFJZWIDy4eOvTki//fDzugoScwanGLcYIQ+E6fWxYyaaMQuWDMKjygCwokEDbZQH7oAQ2zn+We8Rsw6Q5s6h5ygbNAgAE3dAHq3cLgZcL16+4X73tmmedd8DeOLy29/+e6QMu3RsWHB78eM/vdxhDdSoNI36nwbv8pVbDuJPnr5aFz71D+WKhmqUH/pfkC8sHL4mj5ABdASJyvXsxVt3UtHjJy9dZXn5+jsHeyqwhK1ZYYsJ8sQFsAMxtFXAHSIffIdpkIvGAQXDfgNWm2UD3H0o3v/62brtDOgRsJ8NmjoyjDZ+/cbddfGgEWDglUVVIXGkHrgZOnsPugaFeNEIhHw76Ib8oeGh8bM0ExcuyzN6ywZ53NDgsaWymU5JH1NDzc1gGPo9WdlUnW+NafIIyrXrd5zWRSIRIH6jJfGbLi+aB0JFA8ACE0w5CHrVmSL/xwtrDJAHdkCIrX/9AdSiZQdIgR9mGNKFNo+fvj/Ww+Q9phbCHbbg6fXb7/vfPX/xrv/s+8V3qw+e9u3y/rtxz6SXxow6QhwZy+LCps9lv+0//zfP1K8P3/+SvXr9wfVw6MGQThoj4E7YPuTJjwuXrrtGgTqHlk9dpHfBfVxc9W58/ak7fxqDfN0JVXjlCV4MkKc8GchE00YxsDNqi5Qz5pwnz147LR6I3rp9f6gSAeR5z0Aq5hf33dNX61bBvnn3Qx9+ABMNmPjgHrjbqlnACnhD4oqCY3vlMFmBQ1zwj8apyGWaPBo6aSG/6HWMgjxh8s279z+6PfNp3OhF06CwnUNI3OWmvDo3TV5GCXkqLwI8TcL0bXUCFgvk/TLGFIKGi5bJACbjOMDMd+M/Y2IBYphZgDsmC+AFnHtHF/bgjH0euKG9A1zzA1hil+c30OX57fuPzp6PlsxvpggTDv7xH40E9nVMPsi4+TV4Jy18T2+WcGkcxqVl8Pthv0kDg8v2DjMN2jomUzR84P3g4XM3FoAbejdo7dzR5GmUSA/fWGNlfuk+Ws5iyJsoIU+31LSgGDJJcVgrxDFC3soIGAJ4QA/w0X7HDVxiH//jz7+cDR4/0JSBHfAH/AAOiAN7Bl3R1l+8fO+ADvTQ7NGKgeig2YhG5O//+B/X06CBYH48g69mA7c4253GAKgTltvhckxDYN+E3m36pu/eBoXJH/f+0wwh3LjeAoPJ3pRl+8/3Q89r60aM+SHIj9H2YiywGOIUM+QH8wczCbAFnEAWsPluANe4RsB3O/gcol3jNyalwW/5zfcAH6UGuDNwPGlchvmv/+IHcB1lJMgL8kMBNE742gR5Swcwt5kqaO+ANwTS9n2Zd+KC+YbBUGzf5GdTcSmSLhoknWnbvoZDkBfkOwF5H2aYTrBBoz2zUyRmFt/e7rst65keBIBkkJgL00xZftflD3Gm11FXeAqnnAZFkBfkC1faNmryw4CB9owtGuBjv8debrNPhrkv+h/+M0hJz8HAjhZf1J9Y3Avy5UC37vIU5AX5wtBJBfKDlQ1zBJo9QMaMwgDuoJu83/QIzCzEgCzae5vB7qdXkBfkC1cIX4D8Z82uiVuYUoW8ySCgZnYXmj1TDfNAjcZOnpidndWyTINsg53d0hxyB/KkMcSt3MRTh6XJS5MvXGlTh7wPKEBtC67Q8Hm2NRys2mZGDP/TAxg1NdL3r43PbPuAOYt5/qyCZbpo6GKuNqY3tTgL8oK8IB8oA8AduAE85tGzHzxgT01jH4Qc6WPrZBZTcbF4bNxirsHv9btZrV6QD6zgEtTPgtolTX5YuQM921Fy2PsU/2MFrkGenkuKaUw1TYK8IF+4wgry3YM84xRnz1122yBMMiCdKkDbkC5BXpAX5AvKQBc1eWDGADRrC9oANsXxc89bkC9YwSU8vZkk7A3T1bzoGuSxv7OHD9tDMOffrdLN2QCuq7IRY7oFeUG+MKxlrumGuYa9foA6M4eYPsl8fxo4BpuZ5sz0UoCfyjqAGAFdRpwEeUF+KOSpzGUIWIp+pKrJM3uILR6Aem99wErudg9spYwJh22RWd2rWTfx1RtBXjAbCnMqLIdKcDEvOkVYT5qm1CDPfH926WT/eOzubO1QNG9Y/IXM4A/QZzZOUT/kvpoGQpAX5IdWRjQ5DuHgjF1ssVRiVcJeJUwB8oAdUwvn0aK5lzljhu2S8RvYY9Zhu2f1DKsBeEidFOQF+aHwxs6KZgbkmT7HM+eDclwch6xzsRKSU47codez8/2zUvk/RPja6qatkCfeLOZiIRfbEwB2yrbKcqBXwKrg3gEu+2XOaYA3gnwDmV5lpSrLb4BgkDc/AT4LYbDbcuYnA3Acrs7pSxz0zMHQLH0/eep8peCw+DR1bxPkXWO9pWdGoUfGiVPEv4m8Q6NnERkmHXb+ZAC/iXh0LUxBviGBj13QhkH+4aMXbodF4u7ORV1YdHfMOpwVSgVmYy8qc+zpmyZ+sUPeNlijQcZk4vbbicjcxgCvA/6+Q24cgFk8th/QNOXSxLdNNZhF0irIC/JDgYzwAm/MMmiDbJ/79Pkb1+1GwLDl3l195Ew4piHeuffQDdTitogQts1tjJAnTpxPiw2cPXUwkUwygFp3WQB35uDTIKHh03us2oQUkkYaHuSZRpLD3QdhTiNFb5aB6hD/mnQjyAvyQ4UUoaayAXj/md8msFRQv0KaO3uf6p10xrB3DfFgyiKDnNi8sbPzm//LzHvfP/+5zDDwC9kiLczNd2MGDW7+RgPJGBTpZRICdy5/AgLwJ76WD8S/VydsgJ76U+2Yh4U97i7Il1whxmV2m95VWZnblA/D4kreNAl5Zq9g00ZjZ346C5WqKi8aD8x0NOZotd+8+tZBjQNRHj3+pg+4Yfk0zX8M3rOqGg2f3kndg/lA/udf/nQNjvWKGH+iASIfSJsPeUxiDGhfvnLL9agoE9zjZuu2lcryKSSPBXlBfqgAAo1RF5BhEcyo91UBJ0Sg63BD+pqCPNoiA9wApQ5zDCY7DhwnzTQs5y9ec/LCjCoagKrzG1kD8sDSBvYZ3D9z9pK7eLbfdrd33O29vRu8+279Z3oSr99+78aYaGzIa8admF3GjDLS7UOevMGcSQPAeb6sL6EHQH5du36n8nwaVw6CvCBfWAC1rUFzkKcyA1xmOAEixkMwGfhmhHEVvg3vSB+aMWlzK2m3bK196wQz11h+MW4A5G1siumnPuQpA94xIYGxBXbs5E4PhDSYP03cBXlBvrAACvLNQn4QFAxWokECFVaathH4mIOYmcV0XHoImEiA/WBa6/rNgOqTp6/6Y05AH1PMqdMXsucv3mUMzLK/Ppq628BteXu/14AmT4+LiQm2zqSueA8LR5BvUJCGFUgb/us65CmjGHfhBDZowGiOQB+TWuzy5DTdvQfd+ALaMCtxY49z2+InyAvyhSuVIN+chhkKGLR5oIldGJt2TMcUIj9u4PjgUdcgEbfQdMldcdkT5AX5whWsC5BnZShdcS5mVDRpOpgGbMQb+zHmD4Bv0yyn8XOSbzHHAHZrdJhn7k+/ncTPWL8hz2M66FyQF+QF+SEyANiZWcJAGuYPZnnECpUi8WLAlmmJXEztw35c5PsibpkjjsmI/GPKJYOXbW0si6SbxouxhSLfVOlWkB9SwavM8BT87oImD4wYfAPylBkDbd9++NlNn2ORDINyaPurD546WGIPZ2COPXzasOKXgUHbO56tpElfWbLJyltmxrAqGn/Jm7L8boM/gnwAVJ0NcWGxU4LRBuG1OHYB8qTVhzy/mTeNbAIt5j7zHnMOphBmhAB55q/fW33cKtkF+KQFbZsZOjRSRTVuOy3Kbamwc0+nNx8j76TJ54BekC8+uGIAruPeHcivuP1JLE/d4phPg4Q9yK84sAN5ptZhb8bWzICnfdO2Ow0YZhy0exZ8UdajgE/jwCwj3GLa6m1dHLfs1lEe0uRzAE8hCPJxV5SuQN5s8rbCl5WOmCGQUcCO5v7k2WtnlsC2zTJ2VmVie64DJlWHwfRGBmptwzOmN5rWjynGzcv/tPK56ri0yX9BXpBvPQC6Avk2gaXKuKLJo6XTwGGOcguuvI3qqgy7jX4L8oK8IB8gA22s3KnHmU236GWnns5p0yebfEAFl7lG5pppK1rV33cRdoJ8WL0U5AX51oOxSgsAABKdSURBVGtCXTfXUImb2oWy6sZrnP+CvCBfGrykyYcJ07gKWeU7QT5NyNN4jbuYOcRg9Dg39q5K+Yvdb9nkpcmX1hg2JeyCfHqQNziPv8+6HS7Hu+k1FE3JZgzhCvKCvCAfIAMxVNZRcQByqZprmDJ58tR5dyCHnYA0Kh/0//AetyAfUMFlrhkuPLFUKmny6UKePW0wybDYi9OfABZz42nYkD9+9+7S2EfVR/JKK15zQC/IC/KjKlAM/6esyZO/BnmeAf0vv/7dLfriTFf27eH/d+9/dPPl2VmSRWCcA1v3OawxyMKwOEiTzwE8mSbIC/LDKk8s/3UJ8uQ5h3ez6Rjw4uxS/mO1L4uiWAV8+86D7NmLt8masIrKnSAvyLtKUlRwYnIvc0265hrkzNfk+c2Om7aTJOeasr0BWj27cHKwNXv1sJWDDv/4bNKSuSYH9NLkpcnH1KgNxqULmjwHUZNOjhNkp03bswewsz8PF5uTAfzTZy66zdnYP34wr7r4W5p8DuARCkFekI8ZDqlDPua8b0PcBHlBvvXajsw16ZlraLjyLrR27PB57njfBhhXFUdBPkAApMnHXUkE+fQgHwI8bWsQVi9p5GSTHwF6bHwcvsAIPjY/nhnVDxFAuQkTwGnyie1mWSiDvZYyonxiEuZp0hbyLY0bW+2SbmaXcOf80pBv2+yGOkhaz1242i/3Nh+MUlVZAHdOCCOvrH6w735V4YX6G9UZr3PzG9yZml/d/TrjAvRd7/qFFmQd7igLIG/lw/mnXZtRwSlIln7u7OdSR943GQblDuAt3ZR7lQeAN5nWacPes/dAP5/Ir23bdzYuH1FBngxmFN+EaWlpa+MZNG2hp/Y9539a+XDcXdcaYRb8MC+cPAD4XUk/s2qs3GPQTmOtV/T2WBxGXqHNxzDjKDrIoxmiKTAtqysVKFaBHRWvL0+cdULcBS12MA+QSfZ0AfQMQg6+T/U36aZO3ry16k6JSjWdZaQLEx6Q53D0Mvyb1o9CkKegaZnYy6LKC7sWiyuqDKO3H0d683oZ2a863+hhYZuuOhxkrWhDX0f66c0AvOrT/3nPmLyKXke6gRa9t+rTXbzc8/LH3vcYVi2/MGUxbjUzW204lENI/SgEeWzmhw4fd4cYc5BxVRc74TEIW5X/5u+RoyeiaGlNAMu4o2Va+iq779zjDniuzP9PssVmWQz2FskXF6caZMfJaIV1gHSw0yXTFkPSj2JUdXlQJ5n5VnU4yDCHp4eku6gbVvNWHX/8ryOfkMEQk3YhyCNwJKBoxsbqHptqrHGbNF5U9km/je275eXiS+UBEVptbGmZJD5MWQwd2GZAfJIwYvwGeFU1sIviEGOaJ4kTChAWj7xvBfkR0znzMi7W9ylBniX1oZCz8hDkq59Ka3ld1V2QDyvD6iC/c09uy1FV4ZftrzT5MGEqO99D/RPkpcmHykqoO2nyOVqtM9cEQn6UBoatDdu+XyjY4NiX2v/Pf2aAgbEA+w9beqit0r4Zdu8y5BkUGmXWGLSD85vFP8Py0P5jRoGVCSY99iG3d5Peq4b8KBkdXIBHujhEY1w6WBS2aXHJuWGKITbZce5D3slcU74SUgTytvPmYFlZOfv/szvnuHEE+GYLyChXmOd/P8lz45o8IGcbUqbZAeg3735wc+Ad0D0AkDEcSgAYyAS7+MYqIZnN1C3LCHbF49kfWSa8ot28LkOe/Fu9/8Q1uAcOHHFTvhBU1ilQRjSslt/kE++sbOzur3Zl2qu5Z8XfYPlQhpQPs3KYc21ux92rhjyL7bD7s4DlzNlL2fMX71z6mUHCfGeLG3G+ePnGuvRjGjI3+GVTSvke/3hnMkp+An5s5yGDZXxbBPLE0eLS9nvRelwkvUUgTzlSN1BYyF/21ad+HDt+KmOGlYWL/Dx59nqdfNjOnbjrzcbqjRUhc0xDtu8nvTcOeSIOpNEWSezvf/zT3YGBCT5u0Mpp5Yiwf1FpWHiCWwDOd7wncwEO/7HYwCojlcgaldBM6zrke5tNzboGdvXBUye8NKb+/F7gfHf10ZqyoRw2LixmfENeU8bMG6dMADONMM+Azpb9I+TAHbe//PZfQQJeNeTpzRBPYHpv9bE73YjKR+U2GUIJQYv3ZdPkkHzppX/Grc4mP7kAOXnAakerzAAef5kW+vMvf/b9t3CG3QX5ZjV5kw8ab2SZffUZ8/K5AXeG1Q9k5O37j5/kY7Y/5ZY6gELLFEvkg5XEw8o+5D/CqGbg1dNeRkUEMANjqyxUbFaB4Z7DBqxbg0ZDhtESkmBgTyuOOzITgFMJt25bcRWQxoJMRavCDRojfls8qFymTdl/4+5+YY1z16Z3oQOvQBoA2ZFtwJ1y4XvKjjLkN40wmgflw9XT8pmLP+uEG3eUI+XKlD8adtPkEWBATf5RtoSJ+48//t4vs3F5WyXkMcEga1ZJaISQJbQ2AE0FJ/1obcjfmvR/ahxY8EJ6ADv5R94QZ+SKxo3G0jRs5NiUnm8//ByU/hggT/qACeVE3fOfzTw3rgwneReDJk950VM1JYVy5Td148Kl6/2VrDCJnq3Jx779h/sHrNhRiZs3LzsFFFlDlrjTQ0A+DPLUIcLAL5PJvLxrHPJUkKvXvnIVm8hjpzTwA38yESEhc7D34h6t0QBukCehZq5xbmbnnVbPM9q+3/UX5HuNY55w8J4KS8OLoFAulA/CSIOLpkFFI48BH6CyvH//3U8ObAZ5C4ueFn7iDsHlTk8Lf/jf3DFPmcbAfo+7Izdmshvnzn8XOruG+NN1J72kn8rKHcgDayoraeeiAWBKH2nimDvAh/wCeQsbWeR73NDTJJ1UWPLYepv4RZ3wzVz2/bB7DJCnF/Pr7/9wUKM8//XX/7k0U0//+POvfvqHxX/S/2KAPGVFPEzp4RlFBQAjN/yPDCBHpiBR9siENYQGefLBlAjcUL+ob8gHsoKSgHzhHj/5D3d5+Vcd5APnyZN4BJqIUmmspaNS+eaANZD/BAi+QRuyymGQJ4O5fvj4m2thySxaWiod3wjy4ZAnvzBvobHS2JKPVkY25oEbrkHI8x/le+few74gAnmgRPm8ePnelbkrHxb0fLJv8w74mb959yohT9iAnPiQfl9GqcBUcosfFRQZpOI9ff7G/T8M8qaFcag1vRnyEyAAf/OLO+eihjReRSCP7PthlPVMz9gG0emJkUb8BjB+PS4rPPyJAfLEA9mwBZPIgNUPGnRfPnzIY7Y0yFMPLF+couCsEr3eHaZO/LMeH4oQ9RH3lCXyZt+OulcH+QBzDZECAlR8BIRMIBH8R8X1B6yo+ECFikak7R02MCoSiQX42MPcatude1yrSKb5GqJljsw14YuhECoEjd4QkKN8uNBWfcGi52XlYzDBHVoqDSwN98vX3zk/AJpp8PQMzB/KhcrLb8K0htneD7vXAXkaMLrQPXnqpZ9K7MfHzFrIp5kgabjMXAPsGLTFL9KGfZ88RbbNH/KIPOY39cF/Z24G7zFAfjBOdfyOCfLIApo2kxSsfthYjOUFvRpkgzoCo0wLx4SJG+oB/KL86Q3YIej0Hs2PlkJ+LsP2SMKBPTYnEktX3UBOAqnsfoUHBvzmGzIL7YGGgv+Y2kZl5DsqABqT2ZRxR0FQ0WgcLPPG3btskydfyGO0WfKOgSDKh8sGjCzv/PJh+hjlAoABPu8YVOxVgDlnQsM/3KCxItT4Q7kh9JTZoP8WzuC9ashT6egaI1fWbaZC8+zHxU8/8knagDQaP+6AEv/hDlMV73gmf61ho/EjD/jGZNgPY9hzEcgj98P8aON/sUCeeDx4+Nxp7cyecfVjaXmdEuTLB7yDP8gJ5U/+owTYJBKUBHp3/G/ywDP1ivoC7JE/eJlXdtVp8oHmGj+CJMYygogNm2dq7nmP3dc3GfAtGcVghbnjTmVC6zRzgP8u5LnrkLc8wnRg3XD+G9RkzZ3def/h469rGlPKFM3Eyhm39MLosoZorea3f68a8hYW6fdly88Lc2N30odsMniMrNr/PNO1x/xl/3GnUcNs5f8X+izINzu7xi8nGyDlP7R1/93gMxBnBpkvH9QF6sfgGgzAbj28QX/yfuN/SN3StgY5C8DyMjq296ZdxhavSeJTF+QniVsd3xSBvJnR6ohX1WHEoslXnc5p/a8O8oE2+WkTUMf30uTL15TKLDdBXtsalClP+GWmkrL9bcI/QT5AQxfkBfkmKmdomEU0ednkw2RZkM8BI4MK/qBpqLDG6k6QD6sYTZWfNPlwTV6QD5NlQT4A8gwSYOxP4bKVmU1BrIpwqewplA1poEKGzCf38xF7LoP0KeQB0y5D08/sqBTSTBrcYsm5sBlyftmHPCNTqeQTCjdpyUt3oYFXpvcwD7jqi6XkVNaqwwmZppSXgbG9Z5pX1fnGIhEqYtXh4D9TE4vkMVPX6ogXvcA6whlcCzIqL+j1VB0fpj8zsF91OPjPlNxRaZ3mf6b3Vh1/pg3DsKrDwX+sK3n5UQjyeZ6V9Z551xRGWf7Jn7CubGg+MWU1JbNdaLrNHdMoQ7dmsG9SuDNGQN1MIS1VpgH5CN26osp4mN+CfI6JyjJK988NhSAvyKs+fK4Pg3nBlgeCfA5YpcmPFqBBgWrityAvyDchd20JU5DPATwFKcgL8jFXaJlr4pbPpmVHkBfkW2/TlCYvTb5pkMYcviAvyAvyATIQdyUW5GMun6bjpoHXgAouc03c3WFp8oJ80yCNOXxp8gGQZ448C0GYb6orvjywefJdLhv2mO9a+jnggnnyXUt34fTu2OW28I6lIYpyCiXdHfZk1hVvHrASk7UMXb3YbraLaVedDKuToYvY6mgIooR8HQlXGHGbhGIun67Orom5TBS30fVZkA8wH0mARgtQF/NGkJc8tEnuBXlBvvWzfequcIK8IF+3zE0TniAvyAvyBWVAkBfkp4Fu3d8K8gUreN0FpPDiA4ogH1+ZqJ6MLhNBXpCXJl9QBgT50UARbOPLG0G+YAWXEMcnxHWXiSAvGahb5qYJT5AX5KXJF5QBQV6Qnwa6dX8ryBes4HUXkMKLDyiCfHxlonoyukwEeUFemnxBGRDkRwNFsI0vbwT5ghVcQhyfENddJoK8ZKBumZsmPEFekJcmX1AGBHlBfhro1v2tIF+wgtddQAovPqAI8vGVierJ6DIR5AV5afIFZUCQHw0UwTa+vBHkC1ZwCXF8Qlx3mQjykoG6ZW6a8AR5QV6afKAMAHe7OEDDnqepgPpWDUbVMiDIB1bwqgtC/sdf2efmNmTXb9zNvrr7df86eOiYGknVoahlQJCXgEYtoLE1fhxNaZC/dft+Njs7r/xTHYpaBgR5CWjUAhob5GdmZrMrV2870GOyiS1+ik/8PcK6y0iQF+QFqoIysGv3/uzmrVV3BnHdFVbhCeJFZUCQL1jBi2aw3KdVKec3LGTbtu/MTpw8ly0uLmVo9irjtMo4tfIU5AV5QSpABhYWFrOjx05m2OS379iVLW/dnq3s3JMdPvKl+++LLwT71OCYSnoE+YAKnkphKx2TaZwAfe/eg9ny8nYH+stXbjmb/OkzF93/W5a3ZUeOnpD5RnUpSoVJkJdgRimYsTRIS0tbMwZY9+w9kN2+86A/s8Zm2HAH+oubtzitXhr9ZA1pLOWdYjwEeUFekB8hAzOzcw7cW7ftGAp3H/QXL99wJhzMOSmCQmlqb+MlyI+o4BLq9gp1WWWHdr60ZWsGwH2gj3rGRn/o8PFM2rxkpywZLMMfQV6Ql+Y5QgawwwP5UVAf/J8ZN0yv3LBxk/J0RJ6WAS35UawRFeQljALSCBlAM9+xsjsY8mx5wMybjQuLytMReSpAFwN0GfklyEsYBaQRMoAmH2KPN43+7LnL2a7d+7KN0uQlUyNkqgxoF/VDkI+oMIoWntxXqxVt3baSbVpcym7cvBekzdMoMAuHAVuVTbVlo/wNz19BXpAXkEbIALtOHjhwxNnZTVsfdcdUw3RLBl4FoHAAKa+qzytBfkQFl/BVL3xtyGMGUm0bg1GAZx8bbPEAfn5+oyCvOhWVDAjyEsioBDI28NspUKx6ZRAWoPuwP3v+ijPpsL3BwqbNykvVp+hkQJCXUEYnlDGCnpk2+w8cdlsbYKtHuzfwc3CIZtSo5xeb3Fp8BHlBXpAPlIGZmbmMfWow4ezctdfd2ZUSbd8qlO7Ki9hkQJBXBRWgJAOSgYRlQJBPuHBj0ygUH2m5koH6ZUCQF+SlxUkGJAMJy4Agn3DhSmuqX2tSnivPY5MBQV6QlxYnGZAMJCwDgnzChRubRqH4SMuVDNQvA4K8IC8tTjIgGUhYBgT5hAtXWlP9WpPyXHkemwwI8oK8tDjJgGQgYRn4fxI0O1DscA0pAAAAAElFTkSuQmCC"
    }
   },
   "cell_type": "markdown",
   "id": "5c8627c9-803b-41c0-9b12-fd331a19be02",
   "metadata": {},
   "source": [
    "if...elif...else语句是一个多分支选择语句，通常表现为“如果满足某种条件，进行某种处理；否则，如果满足另一种条件，则执行另一种处理”。if...elif...else语句的语法格式如下：\n",
    "<code>\n",
    "if 表达式1:\n",
    "    语句块1\n",
    "elif 表达式2:\n",
    "    语句块2\n",
    "elif 表达式3:\n",
    "    语句块3\n",
    "...\n",
    "else:\n",
    "    语句块n\n",
    "\n",
    "在使用if...elif...else语句时，表达式可以是一个单纯的布尔值或变量，也可以是比较表达式或逻辑表达式。如果表达式为真，则执行语句；如果表达式为假，则跳过该语句，进行下一个elif的判断；只有在所有表达式都为假的情况下，才会执行else中的语句。if...elif...else语句的流程图如图所示。\n",
    "\n",
    "![image.png](attachment:c929b8dd-f694-4f93-8b6d-b3d66922f981.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a9070cb-f0ec-4258-ad32-bcbd0afb887b",
   "metadata": {},
   "source": [
    "当大家还在谈论“00后 ”，“10后”时，“20后”马上就要出生了。根据输入的出生年份，可以判断属于哪个年龄阶层。例如，输入1985，输出“您属于80后，任重道远！”；输入1978，输出“您属于70后，老骥伏枥！”；输入1997，输出“您属于90后，劈波斩浪！”；输入2000，输出“您属于00后，柳暗花明！”；输入2012，输出“您属于10后，前程似锦！”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "1db57535-6484-41fc-88ff-f491bec70b68",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入您的出生年份：\n",
      " 1960\n"
     ]
    }
   ],
   "source": [
    "year = int(input('请输入您的出生年份：\\n '))\n",
    "if year >= 2010:\n",
    "    print('您属于10后，前程似锦！')\n",
    "elif 2010>year>=2000:\n",
    "    print('您属于00后，柳暗花明！')\n",
    "elif 2000>year >=1990:\n",
    "    print('您属于90后，劈波斩浪！')\n",
    "elif 1990>year >=1980:\n",
    "    print('您属于80后，任重道远！')\n",
    "elif 1980>year >=1970:\n",
    "    print('您属于70后，老骥伏枥！')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43807d86-b29f-4b4b-9722-605829313b2e",
   "metadata": {},
   "source": [
    "### if 语句的嵌套"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2dff88f7-9c53-4fe4-af62-079cb8436a7a",
   "metadata": {},
   "source": [
    "前面介绍了3种形式的if选择语句，这3种形式的选择语句之间都可以进行相互嵌套。在最简单的if语句中嵌套if...else语句，语法格式如下："
   ]
  },
  {
   "attachments": {
    "3dadb9ac-6f43-4bef-9ece-e49df7db3285.png": {
     "image/png": ""
    },
    "5ac34356-cd69-4034-ba19-da1923f85abb.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "1ef5022c-78fe-453d-8360-7a1ebb97edbf",
   "metadata": {},
   "source": [
    "象限是平面直角坐标系中横轴和纵轴所划分的四个区域，每一个区域叫作一个象限。象限以原点为中心，x轴、y轴为分界线。右上的称为第一象限（x>0,y>0），左上的称为第二象限（x<0,y>0），左下的称为第三象限（x<0,y<0），右下的称为第四象限（x>0,y<0）。坐标轴上的点不属于任何象限，象限关系如图所示。\n",
    "\n",
    "![image.png](attachment:3dadb9ac-6f43-4bef-9ece-e49df7db3285.png)\n",
    "\n",
    "如果想要编写一个程序，根据用户输入的坐标值，判断用户输入的坐标属于第几象限，可以使用if嵌套语句来对输入的x值、y值进行判断，从而实现对输入坐标点象限的判定。设计坐标点象限判断算法如图所示，根据算法，编写代码如下：\n",
    "\n",
    "![image.png](attachment:5ac34356-cd69-4034-ba19-da1923f85abb.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "acb2a958-153e-455f-98c3-96ce5b417cf7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入x坐标：1\n",
      "请输入y坐标：1\n",
      "坐标属于第一象限！\n"
     ]
    }
   ],
   "source": [
    "x = int(input(\"请输入x坐标：\"))      #      输入x坐标的值\n",
    "y = int(input(\"请输入y坐标：\"))      #      输入y坐标的值\n",
    "if x > 0:                        \n",
    "    if y>0:                     # 如果x>0，y>0，则坐标属于第一象限\n",
    "        print(\"坐标属于第一象限！\")       \n",
    "    else:                            # 如果x>0，y<0，则坐标属于第四象限\n",
    "        print(\"坐标属于第四象限！\")         \n",
    "else:\n",
    "    if y>0:                          # 如果x<0，y>0，则坐标属于第二象限\n",
    "        print(\"坐标属于第二象限！\")      \n",
    "    else:                            # 如果x<0，y<0，则坐标属于第三象限\n",
    "        print(\"坐标属于第三象限！\")        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1aa11f3-87f3-4830-b7f0-48a8c65d947a",
   "metadata": {},
   "source": [
    "## 循环结构语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b1f111f-e909-4da7-837b-ecb10ddb604f",
   "metadata": {},
   "source": [
    "日常生活中有很多问题都无法一次解决，如盖楼，所有高楼都是一层一层地垒起来的。还有一些事物必须要周而复始地运转才能保证其存在的意义，如公交车、地铁等交通工具必须每天往返于始发站和终点站之间。类似这样反复做同一件事的情况称为循环。循环主要有以下两种类型。\n",
    "- 重复一定次数的循环，称为计次循环，如for循环。\n",
    "- 一直重复，直到条件不满足时才结束的循环，称为条件循环。只要条件为真，这种循环会一直持续下去，如while循环。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d82a7222-864e-40dc-975c-ded1bf972880",
   "metadata": {},
   "source": [
    "### for 循环"
   ]
  },
  {
   "attachments": {
    "a0754e09-0857-4a90-aa12-78288bac8c22.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "c87552dc-29d0-426f-b2f1-99e55b0b4b8b",
   "metadata": {},
   "source": [
    "for循环是一个计次循环，通常适用于枚举或遍历序列，以及迭代对象中的元素。一般应用在循环次数已知的情况下。\n",
    "语法格式如下：\n",
    "<code>\n",
    "for 迭代变量 in 对象:\n",
    "    循环体\n",
    "\n",
    "其中，迭代变量用于保存读取出的值；对象为要遍历或迭代的对象，该对象可以是任何有序的序列对象，如字符串、列表和元组等；循环体为一组被重复执行的语句。\n",
    "\n",
    "for循环语句的执行流程如图所示。\n",
    "\n",
    "![image.png](attachment:a0754e09-0857-4a90-aa12-78288bac8c22.png)\n",
    "\n",
    "我们用现实生活中的示例来理解for循环的执行流程。在体育课上，体育老师要求学生们排队进行踢毽子测试，每个学生只有一次机会，如果毽子落地则换另一个学生，直到全部学生都测试完毕，循环结束。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1589799b-a951-4c40-9c50-82f86c622c1f",
   "metadata": {},
   "source": [
    "#### 进行数值循环"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "893836d6-fc40-45f6-b1a7-df7d3ee45727",
   "metadata": {},
   "source": [
    "在使用for循环时，最基本的应用就是进行数值循环。循环可以帮助我们解决很多重复的输入或计算问题，可以利用数值循环输出3遍“笑傲江湖”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0061e10c-324a-43b7-82da-918979d31109",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "笑傲江湖\n",
      "笑傲江湖\n",
      "笑傲江湖\n"
     ]
    }
   ],
   "source": [
    "for i in [1, 2, 3]:\n",
    "    print(\"笑傲江湖\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b883b7ab-11b1-43f4-ac11-44c8e1e8a1aa",
   "metadata": {},
   "source": [
    "利用列表可以输出一些简单重复的内容，但如果循环次数过多，如要实现从1到100的累加该如何实现呢？这时就需要使用range()函数，利用range()函数实现的代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a6a7dd78-cc5a-4bcf-b0bc-5bda21684b7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "计算1+2+3+......+100的结果为：\n",
      "5050\n"
     ]
    }
   ],
   "source": [
    "print(\"计算1+2+3+......+100的结果为：\")\n",
    "result = 0              # 保存累加结果的变量\n",
    "for i in range(101):\n",
    "    result += i         # 实现累加功能\n",
    "print(result)           # "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c01af56c-b588-4573-aee3-2630432db908",
   "metadata": {},
   "source": [
    "#### 遍历字符串"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a21c0d7-2184-4375-8cc7-6858c2b14541",
   "metadata": {},
   "source": [
    "使用for循环语句除了可以循环数值，还可以逐个遍历字符串。例如，下面的示例可以将横向显示的字符串转换为纵向显示，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1f10c6f3-0206-4c0e-967f-5b0b340e7cd2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "天道酬勤\n",
      "天\n",
      "道\n",
      "酬\n",
      "勤\n"
     ]
    }
   ],
   "source": [
    "string = '天道酬勤'\n",
    "print(string)           # 横向显示\n",
    "for ch in string:\n",
    "    print(ch)                        # 纵向显示"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f96d8b8-3ab6-4a7d-8bf8-c80e5ae5a774",
   "metadata": {},
   "source": [
    "### while 循环"
   ]
  },
  {
   "attachments": {
    "7362e64c-a07d-4149-8c6c-65bf8a6fa575.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "92c052f0-9c79-44db-908a-4cdd96229aff",
   "metadata": {},
   "source": [
    "while循环是通过一个条件来控制是否要继续反复执行循环体中的语句。\n",
    "\n",
    "语法格式如下：\n",
    "<code>\n",
    "while 条件表达式:\n",
    "    循环体\n",
    "\n",
    "当条件表达式的返回值为True时，则执行循环体中的语句；执行完毕后，重新判断条件表达式的返回值，直到表达式返回的结果为False，退出循环。while循环语句的执行流程如图所示。\n",
    "\n",
    "![image.png](attachment:7362e64c-a07d-4149-8c6c-65bf8a6fa575.png)\n",
    "\n",
    "我们以现实生活中的示例来理解while循环的执行流程。在体育课上，体育老师要求学生沿着环形操场跑圈。当听到老师吹的哨子声时就停下来。学生每跑一圈，可能会请求一次老师吹哨子。如果老师吹哨子，则学生停下来，即循环结束；否则学生继续跑步，即执行循环。\n",
    "\n",
    "下面利用while循环输出3遍“笑傲江湖”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2ab3cabd-6d0d-4d49-b377-d837d07cc670",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "笑傲江湖\n",
      "笑傲江湖\n",
      "笑傲江湖\n"
     ]
    }
   ],
   "source": [
    "i=1\n",
    "while i <= 3:\n",
    "    print(\"笑傲江湖\")       # 输出“笑傲江湖”\n",
    "    i = i+1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34c2b644-8f95-4c3d-bdb1-cac669a83d25",
   "metadata": {},
   "source": [
    "在取款机上取款时需要输入6位银行卡密码。下面我们模拟一个简单的取款机（只有1位密码），每次要求用户输入1位数字密码，如果密码输入正确，则输出“密码正确，正进入系统！”；如果密码输入错误，则输出“密码错误，已经输错i次”；如果连续输入6次错误密码，则输出“密码错误6次，请与发卡行联系！！”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "98151c46-e7a9-4cea-92c2-85afc87cb104",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入一位数字密码！1\n",
      "密码错误，已经输错 1 次\n",
      "请输入一位数字密码！1\n",
      "密码错误，已经输错 2 次\n",
      "请输入一位数字密码！1\n",
      "密码错误，已经输错 3 次\n",
      "请输入一位数字密码！1\n",
      "密码错误，已经输错 4 次\n",
      "请输入一位数字密码！1\n",
      "密码错误，已经输错 5 次\n",
      "请输入一位数字密码！0\n",
      "密码正确，正进入系统！\n"
     ]
    }
   ],
   "source": [
    "password = 0\n",
    "i = 1\n",
    "while i < 7:\n",
    "    num = input(\"请输入一位数字密码！\")\n",
    "    num = int(num)                           # 记录用户输入\n",
    "    if  num == password  :     # 判断密码是否正确\n",
    "        print(\"密码正确，正进入系统！\"  )\n",
    "        i =7\n",
    "    else:\n",
    "        print(\"密码错误，已经输错\" , i ,\"次\")\n",
    "    i+=1                                          #       次数加1\n",
    "if i== 7:\n",
    "    print(\"密码错误6次，请与发卡行联系！！\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f7fca66-fab5-4910-b981-1e04d4b03271",
   "metadata": {},
   "source": [
    "使用while循环语句实现从1开始依次尝试符合条件的数，直到找到符合条件的数，才退出循环。具体的实现方法是，首先定义一个用于计数的变量number和一个作为循环条件的变量none（默认值为真），然后编写while循环语句。在循环体中，将变量number的值加1，并且判断number的值是否符合条件，当符合条件时，将变量none设置为假，从而退出循环，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1df57501-982f-4bb8-aa77-242e2e31072e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二，问几何？\n",
      "\n",
      "答曰：这个数是 23\n"
     ]
    }
   ],
   "source": [
    "print(\"今有物不知其数，三三数之剩二，五五数之剩三，\\\n",
    "      七七数之剩二，问几何？\\n\")\n",
    "none = True                                       # 作为循环条件的变量\n",
    "number = 0                                        # 计数的变量\n",
    "while none:\n",
    "    number += 1                                   # 计数加1\n",
    "    if number%3 ==2 and number%5 ==3 and number%7 ==2:   # 判断是否符合条件\n",
    "        print(\"答曰：这个数是\",number)              # 输出符合条件的数\n",
    "        none = False"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "290ecc98-1781-4556-84a8-ddf74e1714f5",
   "metadata": {},
   "source": [
    "### 循环嵌套"
   ]
  },
  {
   "attachments": {
    "d4939fea-f070-427d-a18d-faa5797906fc.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "be463c5a-2947-4988-aacd-2d7325b05052",
   "metadata": {},
   "source": [
    "在Python中，允许在一个循环体中嵌入另一个循环，这称为循环嵌套。例如，在电影院找座位号，需要知道第几排第几列才能准确找到自己的座位号。假如寻找如图所示的第二排第三列的座位号，首先需要寻找第二排，然后在第二排寻找第三列，这个寻找座位的过程类似于循环嵌套。\n",
    "\n",
    "![image.png](attachment:d4939fea-f070-427d-a18d-faa5797906fc.png)\n",
    "\n",
    "在Python中，for循环和while循环都可以进行循环嵌套。\n",
    "\n",
    "在while循环中套用while循环的语法格式如下：\n",
    "<code>\n",
    "while 条件表达式1:    \n",
    "    while 条件表达式2:\n",
    "        循环体2\n",
    "    循环体1\n",
    "    \n",
    "在for循环中套用for循环的语法格式如下：\n",
    "<code>\n",
    "for 迭代变量1 in 对象1:    \n",
    "    for 迭代变量2 in 对象2:\n",
    "        循环体2\n",
    "    循环体1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "adc8bfaf-ec7f-44a0-ba8d-1cad178eb755",
   "metadata": {},
   "source": [
    "### 跳转语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62aa8799-4d2a-40dd-b57f-b1d7f7333606",
   "metadata": {},
   "source": [
    "当循环条件一直满足时，程序将会一直执行下去，就像一辆迷路的车，在某个地方不停地转圆圈。如果希望在中间离开循环，也就是在for循环结束计数之前，或者在while循环找到结束条件之前，有以下两种方法可以实现\n",
    "- 使用break语句完全终止循环。\n",
    "- 使用continue语句直接跳到下一次循环。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7182377-e079-481d-8ad3-c50f899e7b27",
   "metadata": {},
   "source": [
    "#### break语句"
   ]
  },
  {
   "attachments": {
    "a37ad086-6eda-4462-a0df-c21697855baf.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "11af9370-1ea5-4f10-ae48-96cf2559f61f",
   "metadata": {},
   "source": [
    "break语句可以终止当前的循环，包括while和for在内的所有控制语句。以独自一人沿着操场跑步为例，原计划跑10圈。可是在跑到第2圈时，由于某种原因终止跑步，这就相当于使用了break语句提前终止了循环。break语句的语法比较简单，只需要在相应的while语句或for语句中加入即可。\n",
    "\n",
    "在while语句中使用break语句的语法格式如下：\n",
    "<code>\n",
    "while 条件表达式1:\n",
    "    执行代码    \n",
    "    if 条件表达式2:\n",
    "        break\n",
    "\n",
    "其中，条件表达式2用于判断何时调用break语句跳出循环。在while语句中使用break语句的流程如图所示。\n",
    "\n",
    "![image.png](attachment:a37ad086-6eda-4462-a0df-c21697855baf.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1d041ba-e8ac-442f-8b2d-43a1713af4a4",
   "metadata": {},
   "source": [
    "#### continue语句"
   ]
  },
  {
   "attachments": {
    "31eff930-5ecb-4e48-a458-b37878562cc8.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "6a31d57a-9072-4e6d-ae1a-3023cf5be8ab",
   "metadata": {},
   "source": [
    "continue语句的作用没有break语句强大，它只能终止本次循环而提前进入下一次循环中。仍然以独自一人沿着操场跑步为例，原计划跑步10圈。当跑到第2圈一半时，由于某种原因果断停下来，跑回起点等待，然后从第3圈开始继续跑步。\n",
    "\n",
    "在while语句中使用continue语句的语法格式如下：\n",
    "<code>\n",
    "while 条件表达式1:\n",
    "    执行代码    \n",
    "    if 条件表达式2:        \n",
    "        continue\n",
    "\n",
    "其中，条件表达式2用于判断何时调用continue语句跳出循环。在while语句中使用continue语句的流程如图所示。\n",
    "\n",
    "![image.png](attachment:31eff930-5ecb-4e48-a458-b37878562cc8.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97338625-5cbb-439b-92d6-739bf5163036",
   "metadata": {},
   "source": [
    "示例：逢七拍腿游戏。\n",
    "\n",
    "几个朋友一起玩“逢七拍腿”游戏，即从1开始依次数数，当数到7（包括尾数是7的情况）或7的倍数时，则不说出该数，而是拍一下腿。现在编写程序，从1数到99，一共要拍多少次腿？（前提是每个人都没有出错的情况下。）\n",
    "\n",
    "通过在for循环中使用continue语句实现“逢七拍腿”游戏，即从1数到99，一共要拍多少次腿？代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "86c9f098-d16c-45aa-bff8-d64ad21bdedf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "从1数到99共拍腿 22 次。\n"
     ]
    }
   ],
   "source": [
    "total = 99                           # 记录拍腿次数的变量\n",
    "for number in range(1,100):          # 创建一个从1到100（不包括)的循环\n",
    "    if number % 7 ==0:               # 判断是否是7的倍数\n",
    "        continue                     # 继续下一次循环\n",
    "    else:\n",
    "        string = str(number)          # 将数值转换为字符串\n",
    "    if string.endswith('7'):      # 判断是否以数字7结尾\n",
    "        continue                        # 继续下一次循环\n",
    "    total -= 1                        # 可拍腿次数减1\n",
    "print(\"从1数到99共拍腿\",total,\"次。\")      # 显示拍腿次数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6baf220-5b61-4bdc-b4d5-390627bb9abf",
   "metadata": {},
   "source": [
    "## 列表和元组"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "122c3aea-d8ff-4574-bdb4-430ac1f5bcca",
   "metadata": {},
   "source": [
    "在Python中序列是最基本的数据结构，它是一块用于存储多个值的连续内存空间。Python中内置了5个常用的序列结构，分别是列表、元组、集合、字典和字符串。本章将详细介绍序列、列表和元组的使用方法。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "337f376f-7e85-4141-ae75-fd9164a43598",
   "metadata": {},
   "source": [
    "### 序列"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bf3f26c-fa16-4c2c-92f3-bb860be2b0c7",
   "metadata": {},
   "source": [
    "序列是一块用于存储多个值的连续内存空间，并且按一定顺序排列，每一个值（又被称为元素）都分配一个数字，称为索引或位置。通过该索引可以取出相应的值。例如，我们可以把一家酒店看作一个序列，那么可以把酒店里的每个房间都看作是这个序列的元素。而房间号就相当于索引，可以通过房间号找到对应的房间。在Python中，序列结构主要有列表、元组、集合、字典和字符串。对于这些序列结构有以下几个通用的操作。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50e5e3c2-c83f-469f-9106-ca129ac0242f",
   "metadata": {},
   "source": [
    "#### 索引"
   ]
  },
  {
   "attachments": {
    "30adfd03-fe70-486d-b9d0-d73d3b809da4.png": {
     "image/png": "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"
    },
    "39fac42a-720e-4e6e-96fa-9dbff9447fe7.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "1e9dcd57-3939-4154-9242-302046631db8",
   "metadata": {},
   "source": [
    "序列中的每一个元素都有一个编号，也称为索引。这个索引是从0开始递增的，即下标为0表示第1个元素，下标为1表示第2个元素，以此类推，如图所示。\n",
    "\n",
    "![image.png](attachment:39fac42a-720e-4e6e-96fa-9dbff9447fe7.png)\n",
    "\n",
    "Python的索引可以是负数。这个索引从右向左计数，也就是从最后一个元素开始计数。即最后一个元素的索引值是-1，倒数第2个元素的索引值为-2，以此类推，如图所示。\n",
    "\n",
    "![image.png](attachment:30adfd03-fe70-486d-b9d0-d73d3b809da4.png)\n",
    "\n",
    "通过索引可以访问序列中的任何元素。例如，定义一个包括4个元素的列表，要访问它的第3个元素和最后一个元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "287b518d-f992-4cc3-8b9e-fc1b86932687",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "休斯顿火箭\n",
      "金州勇士\n"
     ]
    }
   ],
   "source": [
    "verse = [\"圣安东尼奥马刺\",\"洛杉矶湖人\",\"休斯顿火箭\",\"金州勇士\"]\n",
    "print(verse[2])        # 输出第3个元素\n",
    "print(verse[-1])       # 输出最后一个元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59980921-dab7-445e-95c4-210d96b594c2",
   "metadata": {},
   "source": [
    "#### 切片"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b7b4926-79b0-43c8-8db2-22879d9a23f4",
   "metadata": {},
   "source": [
    "切片操作是访问序列中元素的一种方法，它可以访问一定范围内的元素。通过切片操作可以生成一个新的序列，实现切片操作的语法格式如下：\n",
    "\n",
    "sname[start : end : step]\n",
    "\n",
    "例如，通过切片获取NBA历史上十大巨星列表中的第2个到第5个元素，以及获取第1个、第3个和第5个元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "322f0393-2c17-4b99-87db-3913cd01de3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['比尔·拉塞尔', '卡里姆·阿卜杜勒·贾巴尔', '威尔特·张伯伦', '埃尔文·约翰逊', '科比·布莱恩特']\n",
      "['迈克尔·乔丹', '卡里姆·阿卜杜勒·贾巴尔', '埃尔文·约翰逊']\n"
     ]
    }
   ],
   "source": [
    "nba = [\"迈克尔·乔丹\",\"比尔·拉塞尔\",\"卡里姆·阿卜杜勒·贾巴尔\",\"威尔特·张伯伦\",\n",
    "       \"埃尔文·约翰逊\",\"科比·布莱恩特\",\"蒂姆·邓肯\",\"勒布朗·詹姆斯\",\"拉里·伯德\"\n",
    "       \"沙奎尔·奥尼尔\"]\n",
    "print(nba[1:6])        # 获取第2个到第5个元素\n",
    "print(nba[0:5:2])      # 获取第1个、第3个和第5个元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3932433d-8f90-43dc-918d-29d7a62e18d0",
   "metadata": {},
   "source": [
    "#### 序列相加"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c1fc951-3c66-43c0-b0df-a21375bea304",
   "metadata": {},
   "source": [
    "在Python中，支持两种相同类型的序列进行相加操作。即将两个序列进行连接，使用加号（+）运算符实现。例如，将两个列表相加，代码如下"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bbb89216-1934-455c-be29-d7b831a6c600",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['史蒂芬·库里', '克莱·汤普森', '马努·吉诺比利', '凯文·杜兰特', '迈克尔·乔丹', '比尔·拉塞尔', '卡里姆·阿卜杜勒·贾巴尔', '威尔特·张伯伦']\n"
     ]
    }
   ],
   "source": [
    "nba1 = [\"史蒂芬·库里\",\"克莱·汤普森\",\"马努·吉诺比利\",\"凯文·杜兰特\"]\n",
    "nba2 = [\"迈克尔·乔丹\",\"比尔·拉塞尔\",\"卡里姆·阿卜杜勒·贾巴尔\",\"威尔特·张伯伦\"]\n",
    "print(nba1+nba2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b974ea9-8394-41ea-a93f-6b25192e5e2a",
   "metadata": {},
   "source": [
    "但不能是列表和元组相加，或者列表和字符串相加。例如，下面的代码就是错误的。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "53cd2963-d41e-4304-95aa-b52347a2c986",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "can only concatenate list (not \"tuple\") to list",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[3], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m num \u001b[38;5;241m=\u001b[39m [\u001b[38;5;241m7\u001b[39m,\u001b[38;5;241m14\u001b[39m,\u001b[38;5;241m21\u001b[39m,\u001b[38;5;241m28\u001b[39m,\u001b[38;5;241m35\u001b[39m,\u001b[38;5;241m42\u001b[39m,\u001b[38;5;241m49\u001b[39m,\u001b[38;5;241m56\u001b[39m,\u001b[38;5;241m63\u001b[39m]\n\u001b[0;32m      2\u001b[0m a \u001b[38;5;241m=\u001b[39m (\u001b[38;5;241m1\u001b[39m,\u001b[38;5;241m2\u001b[39m,\u001b[38;5;241m3\u001b[39m)\n\u001b[1;32m----> 3\u001b[0m \u001b[38;5;28mprint\u001b[39m(num\u001b[38;5;241m+\u001b[39ma,\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m输出是7的倍数的数\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "\u001b[1;31mTypeError\u001b[0m: can only concatenate list (not \"tuple\") to list"
     ]
    }
   ],
   "source": [
    "num = [7,14,21,28,35,42,49,56,63]\n",
    "a = (1,2,3)\n",
    "print(num+a,\"输出是7的倍数的数\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48c6a45c-3121-416b-9421-5488fea04382",
   "metadata": {},
   "source": [
    "#### 乘法"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "503dfa13-2634-46c4-a7e8-f0bd816dfb9b",
   "metadata": {},
   "source": [
    "在Python中，使用数字n乘以一个序列会生成新的序列。新序列的内容为原来序列被重复n次的结果。例如，下面的代码，实现将一个序列乘以3，生成一个新的序列并输出，从而达到“重要事情说三遍”的效果。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "68f1559c-38bd-4169-b91b-23321b48e360",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['华为Mate 10', 'Vivo X21', '华为Mate 10', 'Vivo X21', '华为Mate 10', 'Vivo X21']\n"
     ]
    }
   ],
   "source": [
    "phone = [\"华为Mate 10\",\"Vivo X21\"]\n",
    "print(phone * 3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1329efc6-f51e-487b-bcbf-dfcf45d589f4",
   "metadata": {},
   "source": [
    "在进行序列的乘法运算时，还可以实现初始化指定长度列表的功能。例如，下面的代码，将创建一个长度为5的列表，列表中的每个元素都是None，表示什么都没有。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5d458861-25c0-43a0-b8ed-4e6c9bb79b59",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[None, None, None, None, None]\n"
     ]
    }
   ],
   "source": [
    "emptylist = [None]*5\n",
    "print(emptylist)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "605049ff-ba76-40a7-aecf-dd6b1500a00c",
   "metadata": {},
   "source": [
    "#### 检查某个元素是否是序列的成员"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbb3a0d7-c058-46a5-906f-2766e18cfeed",
   "metadata": {},
   "source": [
    "在Python中，可以使用in关键字检查某个元素是否是序列的成员，即检查某个元素是否包含在该序列中，语法格式如下：\n",
    "\n",
    "value in sequence\n",
    "\n",
    "其中，value表示要检查的元素，sequence表示指定的序列。\n",
    "\n",
    "例如，要检查名称为nba的序列中是否包含元素“凯文·杜兰特”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f72942ad-0b1a-4e00-8287-5dabe8ca6bd4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "nba = [\"史蒂芬·库里\",\"克莱·汤普森\",\"马努·吉诺比利\",\"凯文·杜兰特\"]\n",
    "print(\"凯文·杜兰特\" in nba)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18f9b3b4-8ec5-409b-9c3e-b4bd00490195",
   "metadata": {},
   "source": [
    "另外，在Python中，也可以使用not in关键字检查某个元素是否不包含在指定的序列中。例如，运行下面的代码，将输出False。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f35d39a5-61d6-47b0-871f-7d1dc3163e79",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "nba = [\"史蒂芬·库里\",\"克莱·汤普森\",\"马努·吉诺比利\",\"凯文·杜兰特\"]\n",
    "print(\"凯文·杜兰特\"  not in nba)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82619fb2-cf30-4750-9a0d-36f188b35660",
   "metadata": {},
   "source": [
    "#### 计算序列的长度、最大值和最小值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e376a55-3c89-40c7-9621-a1357406407b",
   "metadata": {},
   "source": [
    "在Python中，提供了内置函数用于计算序列的长度、最大值和最小值。使用len()函数计算序列的长度，即返回序列包含多少个元素；使用max()函数返回序列中的最大元素；使用min()函数返回序列中的最小元素。\n",
    "\n",
    "例如，定义一个包括9个元素的列表，并通过len()函数计算列表的长度，代码如下：\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "e229b73f-61a4-4371-a4e2-d5cc9c886893",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "序列num的长度为 9\n"
     ]
    }
   ],
   "source": [
    "num = [7,14,21,28,35,42,49,56,63]\n",
    "print(\"序列num的长度为\",len(num))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28979aa1-8293-4fbe-9e4b-b88c48dc0423",
   "metadata": {},
   "source": [
    "例如，定义一个包括9个元素的列表，并通过max()函数计算列表的最大元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "46ba665d-41d2-4428-8f40-9539eaed86dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "序列 [7, 14, 21, 28, 35, 42, 49, 56, 63] 中最大值为 63\n",
      "序列 [7, 14, 21, 28, 35, 42, 49, 56, 63] 中最大值为 7\n"
     ]
    }
   ],
   "source": [
    "num = [7,14,21,28,35,42,49,56,63]\n",
    "print(\"序列\",num,\"中最大值为\",max(num))\n",
    "print(\"序列\",num,\"中最大值为\",min(num))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c5edef9-22e5-4ab1-a070-76361812194d",
   "metadata": {},
   "source": [
    "### 列表"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "953fbd40-f870-42ff-ba89-7fcc1eb40048",
   "metadata": {},
   "source": [
    "Python中的列表由一系列按特定顺序排列的元素组成，它是Python中内置的可变序列。在形式上，列表的所有元素都放在一对中括号“[]”中，两个相邻元素之间使用逗号“,”分隔。在内容上，可以将整数、实数、字符串、列表、元组等任何类型的内容放到列表中，并且在同一个列表中，元素的类型可以不同，因为它们之间没有任何关系。由此可见，Python中的列表是非常灵活的，这一点与其他语言是不同的。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cc44d9a-c635-4414-b38d-bb921c40644e",
   "metadata": {},
   "source": [
    "#### 列表的创建和删除"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c19d90db-c22a-4ca8-b856-f96a1a691add",
   "metadata": {},
   "source": [
    "使用赋值运算符直接创建列表\n",
    "\n",
    "同其他类型的Python变量一样，在创建列表时，也可以使用赋值运算符“=”直接将一个列表赋值给变量，语法格式如下：\n",
    "\n",
    "listname = [element 1,element 2,element 3,...,element n]\n",
    "\n",
    "其中，listname表示列表的名称，可以是任何符合Python命名规则的标识符；element 1、element  2、element  3、element  n表示列表中的元素，元素个数没有限制，并且只要是Python支持的数据类型就可以。\n",
    "\n",
    "例如，下面定义的列表都是合法的。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "932a7547-e207-4381-a545-15044c5e0784",
   "metadata": {},
   "outputs": [],
   "source": [
    "num = [7,14,21,28,35,42,49,56,63]\n",
    "verse = [\"圣安东尼奥马刺\",\"洛杉矶湖人\",\"金州勇士\",\"休斯顿火箭\"]\n",
    "untitle = ['Python',28,\"人生苦短，我用Python\",[\"爬虫\",\"自动化运维\",\"云计算\",\"Web开发\"]]\n",
    "python = ['优雅',\"明确\",''' 简单''' ]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6524e18-18de-4828-a6d5-58bf17d3f1ef",
   "metadata": {},
   "source": [
    "创建空列表\n",
    "\n",
    "在Python中，也可以创建空列表，例如，要创建一个名称为emptylist的空列表，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "28a17647-d9f2-4f6e-9417-5b0e39011285",
   "metadata": {},
   "outputs": [],
   "source": [
    "emptylist = []"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7b0dc5a-71c4-4f7e-8f01-b689d4adeb04",
   "metadata": {},
   "source": [
    "创建数值列表\n",
    "\n",
    "在Python中，数值列表很常用。例如，在考试系统中记录学生的成绩，或者在游戏中记录每个角色的位置，各个玩家的得分情况等都可以应用数值列表。在Python中，可以使用list()函数直接将range()函数循环出来的结果转换为列表。\n",
    "\n",
    "list()函数的语法格式如下：\n",
    "\n",
    "list(seq)\n",
    "\n",
    "其中，seq表示可以转换为列表的数据，其类型可以是range对象、字符串、元组或其他可迭代的数据。\n",
    "\n",
    "例如，创建一个10～20之间（不包括20）所有偶数的列表，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "8e40b26e-b9be-44c2-9af3-61b6713bc3f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[10, 12, 14, 16, 18]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(range(10, 20, 2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c64c875-3afe-48dc-a9ff-f3d8fce153e7",
   "metadata": {},
   "source": [
    "删除列表\n",
    "\n",
    "对于已经创建的列表，不再使用时，可以使用del语句将其删除，语法格式如下：\n",
    "\n",
    "del listname\n",
    "\n",
    "其中，listname为要删除列表的名称。\n",
    "\n",
    "例如，定义一个名称为team的列表，然后使用del语句将其删除，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6d351c5c-5eb2-4a69-9a1f-0c4bb1d52541",
   "metadata": {},
   "outputs": [],
   "source": [
    "team = [\"皇马\",\"罗马\",\"利物浦\",\"拜仁\"]\n",
    "del team"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "14ff1a48-8a86-4e0c-8eb7-5683863844fc",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'team' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[34], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m team\n",
      "\u001b[1;31mNameError\u001b[0m: name 'team' is not defined"
     ]
    }
   ],
   "source": [
    "team"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ef11dfb-8ba6-46d6-a74e-90273e8caa14",
   "metadata": {},
   "source": [
    "访问列表元素\n",
    "\n",
    "在Python中，如果想将列表的内容输出也比较简单，可以直接使用print()函数。例如，想要打印untitle列表，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "e9227083-e3d1-400a-a7c8-14d588220c80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Python', 28, '人生苦短，我用Python', ['爬虫', '自动化运维', '云计算', 'Web开发']]\n"
     ]
    }
   ],
   "source": [
    "untitle = ['Python',28,\"人生苦短，我用Python\",[\"爬虫\",\"自动化运维\",\"云计算\",\"Web开发\"]]\n",
    "print(untitle)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbf1ee18-9625-4b2d-a278-25a1a443e18c",
   "metadata": {},
   "source": [
    "从上面的运行结果可以看出，在输出列表时，包括左右两侧的中括号。如果不想要输出全部的元素，则可以通过列表的索引获取指定的元素。例如，想要获取列表untitle中索引为2的元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "e4810f2e-f47e-4477-b261-4eb3b60f9f24",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "人生苦短，我用Python\n"
     ]
    }
   ],
   "source": [
    "print(untitle[2])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a2744ed-da3a-430b-b483-53fd1a6ad4bf",
   "metadata": {},
   "source": [
    "#### 遍历列表"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74b4a4d4-e97a-439d-b14a-e922c4707dd8",
   "metadata": {},
   "source": [
    "遍历列表中的所有元素是常用的一种操作，在遍历的过程中可以完成查询、处理等功能。在生活中，如果想要去商场买一件衣服，就需要在商场中逛一遍，挑选是否有想要的衣服，逛商场的过程就相当于列表的遍历操作。在Python中有多种遍历列表的方法，下面介绍两种常用的方法。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce73dfad-e2d8-4931-ab59-c3f1abdff446",
   "metadata": {},
   "source": [
    "直接使用for循环实现\n",
    "\n",
    "直接使用for循环遍历列表，只能输出元素的值，语法格式如下：\n",
    "<code>\n",
    "for item in listname:   \n",
    "    输出item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3d374b4-dfdd-4392-9c1c-e75432fde506",
   "metadata": {},
   "source": [
    "例如，定义一个保存2018年俄罗斯世界杯四强的列表，然后通过for循环遍历该列表，并输出各个国家队的名称，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "6f92f3a1-54a6-45b7-b824-aebf539a32c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018年俄罗斯世界杯四强：\n",
      "法国\n",
      "比利时\n",
      "英格兰\n",
      "克罗地亚\n"
     ]
    }
   ],
   "source": [
    "print(\"2018年俄罗斯世界杯四强：\")\n",
    "team = [\"法国\",\"比利时\",\"英格兰\",\"克罗地亚\"]\n",
    "for item in team:\n",
    "    print(item)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "487cffca-9f48-48e2-944d-a0256357ef8b",
   "metadata": {},
   "source": [
    "使用for循环和enumerate()函数实现\n",
    "\n",
    "使用for循环和enumerate()函数可以实现同时输出索引值和元素内容的功能，语法格式如下：\n",
    "<code>\n",
    "for index,item in enumerate(listname):    \n",
    "    输出index和item\n",
    "\n",
    "例如，定义一个保存2018年俄罗斯世界杯四强的列表，然后通过for循环和enumerate()函数遍历该列表，并输出索引和球队名称，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d15007ba-5bfc-482b-8feb-818f2bb53380",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018年俄罗斯世界杯四强：\n",
      "1 法国\n",
      "2 比利时\n",
      "3 英格兰\n",
      "4 克罗地亚\n"
     ]
    }
   ],
   "source": [
    "print(\"2018年俄罗斯世界杯四强：\")\n",
    "team = [\"法国\",\"比利时\",\"英格兰\",\"克罗地亚\"]\n",
    "for index,item in enumerate(team):\n",
    "    print(index + 1,item)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11919f76-b80c-4527-ae3e-d577d606f631",
   "metadata": {},
   "source": [
    "#### 添加、修改和删除列表元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf45d7ac-eccc-4ec6-96be-e601c844d40c",
   "metadata": {},
   "source": [
    "添加、修改和删除列表元素也称为更新列表。我们在实际开发程序时，经常需要对列表进行更新。下面分别介绍如何实现列表元素的添加、修改和删除操作。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9ea5d37-bd6c-4a15-9ecf-78c8753c3068",
   "metadata": {},
   "source": [
    "添加元素\n",
    "\n",
    "我们可以通过“+”运算符将两个序列连接，通过该方法也可以为列表添加元素。但是这种方法的执行速度要比直接使用列表对象的append()方法慢，所以建议在添加元素时，使用列表对象的append()方法实现。列表对象的append()方法用于在列表的末尾追加元素，语法格式如下：\n",
    "\n",
    "listname.append(obj)\n",
    "\n",
    "其中，listname为要添加元素的列表名称；obj为要添加到列表末尾的对象。\n",
    "\n",
    "例如，定义一个包括4个元素的列表，然后使用append()方法向该列表的末尾再添加一个元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "f26f1daf-27e7-46cf-b0d7-ec8f48d81e99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "phone = [\"摩托罗拉\",\"诺基亚\",\"三星\",\"OPPO\"]\n",
    "len(phone)         # 获取列表的长度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "91e71ced-d5b1-4add-9f07-a293458606b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "phone.append(\"iPhone\")\n",
    "len(phone)         # 获取列表的长度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "bcbd3df7-79f7-4208-8ab6-a46e410ac444",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['摩托罗拉', '诺基亚', '三星', 'OPPO', 'iPhone']\n"
     ]
    }
   ],
   "source": [
    "print(phone)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c60821b9-fbfe-4fac-8b7a-1fcfe798a247",
   "metadata": {},
   "source": [
    "上面介绍的是向列表中添加一个元素，如果想要将一个列表中的全部元素添加到另一个列表中，则可以使用列表对象的extend()方法实现。extend()方法的语法格式如下：\n",
    "\n",
    "listname.extend(seq)\n",
    "\n",
    "其中，listname为原列表，seq为要添加的列表。语句执行后，seq的内容将追加到listname的后面。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0807c403-dabb-4adb-8729-d47702654418",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "phone = [\"摩托罗拉\",\"诺基亚\",\"三星\",\"OPPO\"]\n",
    "len(phone)         # 获取列表的长度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "70e4be3c-1cfc-424b-9d5b-3a82b179604a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "phone.extend(\"iPhone\")\n",
    "len(phone)         # 获取列表的长度"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "9a196cf1-addd-47ac-ba4e-414ba4433d29",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['摩托罗拉', '诺基亚', '三星', 'OPPO', 'i', 'P', 'h', 'o', 'n', 'e']\n"
     ]
    }
   ],
   "source": [
    "print(phone)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8d2ae07-f3fc-465c-bfd0-7e7f5f25ec1c",
   "metadata": {},
   "source": [
    "修改元素\n",
    "\n",
    "修改列表中的元素只需要通过索引获取该元素，然后为其重新赋值即可。例如，定义一个保存3个元素的列表，然后修改索引值为2的元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f20437fd-f569-4738-981c-311be2dd1578",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['德国队小组赛回家', '西班牙传控打法还有未来吗', 'C罗一人对抗西班牙队']\n",
      "['德国队小组赛回家', '西班牙传控打法还有未来吗', '梅西、C罗相约回家']\n"
     ]
    }
   ],
   "source": [
    "verse = [\"德国队小组赛回家\",\"西班牙传控打法还有未来吗\",\"C罗一人对抗西班牙队\"]\n",
    "print(verse)\n",
    "verse[2] = \"梅西、C罗相约回家\"        # 修改列表的第3个元素\n",
    "print(verse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d5fa299-58d1-4712-ac8a-34aa31e0fa01",
   "metadata": {},
   "source": [
    "删除元素\n",
    "\n",
    "删除元素主要有两种情况：一种是根据索引删除；另一种是根据元素值删除。\n",
    "\n",
    "根据索引删除。\n",
    "\n",
    "删除列表中的指定元素和删除列表类似，也可以使用del语句实现。所不同的是在指定列表名称时，换为列表元素。例如，定义一个保存3个元素的列表，删除最后一个元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "7d9bdc7c-2adf-47ab-becc-1c8dd4ec7eb5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['德国队小组赛回家', '西班牙传控打法还有未来吗']\n"
     ]
    }
   ],
   "source": [
    "verse = [\"德国队小组赛回家\",\"西班牙传控打法还有未来吗\",\"C罗一人对抗西班牙队\"]\n",
    "del verse[-1]     # 删除列表的第3个元素\n",
    "print(verse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1534f81c-75bd-492b-95df-f260290f9c62",
   "metadata": {},
   "source": [
    "根据元素值删除。\n",
    "\n",
    "如果想要删除一个不确定其位置的元素（即根据元素值删除），则可以使用列表对象的remove()方法实现。例如，想要删除列表中内容为“内马尔喊话C罗：等等我！”的元素，可以使用下面的代码："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "638659d4-246a-4d39-b8e3-e6c4aec8c71b",
   "metadata": {},
   "outputs": [],
   "source": [
    "verse = [\"德国队小组赛回家\",\"西班牙传控打法还有未来吗\",\"C罗一人对抗西班牙队\"]\n",
    "verse.remove(\"西班牙传控打法还有未来吗\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "05ef03f6-0e0b-497a-a5e6-ed6669935039",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['德国队小组赛回家', 'C罗一人对抗西班牙队']"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "verse"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "589df928-bc31-4200-b7f6-7d66dec43b2a",
   "metadata": {},
   "source": [
    "所以在使用remove()方法删除元素前，最好先判断该元素是否存在，修改后的代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "591fb759-e793-4890-a667-2d4d27e25f62",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['火箭', '勇士', '开拓者', '爵士', '鹈鹕', '马刺', '雷霆', '森林狼']\n"
     ]
    }
   ],
   "source": [
    "team = [\"火箭\",\"勇士\",\"开拓者\",\"爵士\",\"鹈鹕\",\"马刺\",\"雷霆\",\"森林狼\"]\n",
    "value = \"公牛\"                       # 指定要删除的元素\n",
    "if team.count(value)>0:        # 判断要删除的元素是否存在\n",
    "    team.remove(value)         # 删除指定的元素\n",
    "print(team)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7542aeb7-0658-41d6-8152-218715219206",
   "metadata": {},
   "source": [
    "#### 列表推导式"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39e49c01-6299-4043-9499-12662efebbb8",
   "metadata": {},
   "source": [
    "列表推导式是Python中一种简洁、高效的创建列表的方法。它允许您在一行代码中创建新的列表，通常基于现有的列表或其他可迭代对象。\n",
    "作用：\n",
    "\n",
    "- 简化代码：可以用一行代码替代传统的for循环。\n",
    "- 提高可读性：对于简单的列表创建操作，列表推导式通常更易读。\n",
    "- 性能优化：在某些情况下，列表推导式比等效的for循环更快。\n",
    "- 创建新列表：快速基于现有数据创建新的列表。\n",
    "\n",
    "用法如下：\n",
    "\n",
    "new_list = [expression for item in iterable if condition]\n",
    "\n",
    "案例：\n",
    "\n",
    "基本使用：创建平方数列表"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "09a8750d-8408-4a75-a706-82ca7d3882af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n"
     ]
    }
   ],
   "source": [
    "squares = [x**2 for x in range(10)]\n",
    "print(squares)  # 输出: [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33dabe6d-05ed-40ae-9938-905ad5e2f84a",
   "metadata": {},
   "source": [
    "使用条件：创建偶数平方列表"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "a061f959-aa81-4d33-85e0-b8a68e4a97c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0, 4, 16, 36, 64]\n"
     ]
    }
   ],
   "source": [
    "even_squares = [x**2 for x in range(10) if x % 2 == 0]\n",
    "print(even_squares)  # 输出: [0, 4, 16, 36, 64]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75fe330c-6622-4cbc-9dbb-a019589c6e82",
   "metadata": {},
   "source": [
    "### 元组"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "faf9cc45-a14d-442f-a519-0cbddfa5a1f4",
   "metadata": {},
   "source": [
    "元组（tuple）是Python中另一个重要的序列结构，与列表类似，也是由一系列按特定顺序排列的元素组成的，但是它是不可变序列。因此，元组也可以称为不可变的列表。在形式上，元组的所有元素都放在一对“()”中，两个相邻元素之间使用逗号“,”分隔。在内容上，可以将整数、实数、字符串、列表、元组等任何类型的内容放到元组中，并且在同一个元组中，元素的类型可以不同，因为它们之间没有任何关系。在通常情况下，元组用于保存程序中不可修改的内容。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33897bce-c390-4890-91cd-915619d835ee",
   "metadata": {},
   "source": [
    "#### 元组的创建和删除"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2846483c-2dfd-48df-9db9-f8d60ad7001f",
   "metadata": {},
   "source": [
    "使用赋值运算符直接创建元组\n",
    "\n",
    "同其他类型的Python变量一样，在创建元组时，也可以使用赋值运算符“=”直接将一个元组赋值给变量，语法格式如下：\n",
    "\n",
    "tuplename = (element 1,element 2,element 3,...,element n)\n",
    "\n",
    "其中，tuplename表示元组的名称，可以是任何符合Python命名规则的标识符；elemnet 1、elemnet 2、elemnet 3、elemnet n表示元组中的元素，个数没有限制，并且只要是Python支持的数据类型即可。\n",
    "\n",
    "例如，下面定义的元组都是合法的，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "bccdcfd8-0331-4968-807d-ff963d52741e",
   "metadata": {},
   "outputs": [],
   "source": [
    "num = (7,14,21,28,35,42,49,56,63)\n",
    "team= (\"马刺\",\"火箭\",\"勇士\",\"湖人\")\n",
    "untitle = ('Python',28,(\"人生苦短\",\"我用Python\"),[\"爬虫\",\"自动化运维\",\"云计算\",\"Web开发\"])\n",
    "language = ('Python',\"C#\",''' Java''' )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40bec2f9-0242-4ea5-a638-e605716a9c4d",
   "metadata": {},
   "source": [
    "在Python中，虽然元组是使用一对小括号将所有的元素括起来，但是实际上，小括号并不是必需的，只要将一组值用逗号分隔，Python就可以认为它是元组。例如，下面定义元组，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "fc1f2e96-970e-4fa3-ad7f-bf663cd9929d",
   "metadata": {},
   "outputs": [],
   "source": [
    "team= \"马刺\",\"火箭\",\"勇士\",\"湖人\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f6382344-bc43-4193-8d09-11c0dc21ef87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('马刺', '火箭', '勇士', '湖人')"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "70fb2fa1-b1fd-48ff-a742-caab65682126",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(team)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e119267-0ac6-46af-ad19-f32d6856b2ad",
   "metadata": {},
   "source": [
    "如果想要创建的元组只包括一个元素，则需要在定义元组时，在元素的后面加一个“,”。例如，下面定义包括一个元素的元组，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "1126dc25-c88a-4365-8a56-9189e9cd0bf9",
   "metadata": {},
   "outputs": [],
   "source": [
    "verse1 = (\"世界杯冠军\",)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f6a842bf-7324-42f9-96f6-ac4d744155a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('世界杯冠军',)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "verse1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "f3f9e3ce-727d-4404-9dee-d9213c76f1aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(verse1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abe0780c-6090-418b-b724-c9c593f2667b",
   "metadata": {},
   "source": [
    "而下面的代码，则表示定义一个字符串。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "868ea5f1-4d6c-4be9-9960-8aff28e2c20a",
   "metadata": {},
   "outputs": [],
   "source": [
    "verse2 = (\"世界杯冠军\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "96aba38b-a85a-4d20-a1bf-454721b87e6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'世界杯冠军'"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "verse2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e5628659-f75b-4ab1-8412-cd58656682cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(verse2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d12ac884-d4e8-41b9-a923-82ec24121f4d",
   "metadata": {},
   "source": [
    "创建空元组\n",
    "\n",
    "在Python中，也可以创建空元组，例如，要创建一个名称为emptytuple的空元组，可以使用下面的代码："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "c247d1ab-40de-49ad-961d-1d5ff34f1615",
   "metadata": {},
   "outputs": [],
   "source": [
    "emptytuple = ()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71ed39ca-adc8-4457-8603-5b8e09eea244",
   "metadata": {},
   "source": [
    "空元组可以应用在为函数传递一个空值或返回空值时。例如，定义一个函数必须传递一个元组类型的值，而我们还不想为它传递一组数据，那么就可以创建一个空元组传递给它。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26379fc2-5559-4721-b203-299530948cb1",
   "metadata": {},
   "source": [
    "创建数值元组\n",
    "\n",
    "在Python中，可以使用tuple()函数直接将range()函数循环出来的结果转换为数值元组。\n",
    "\n",
    "例如，创建一个10～20之间（不包括20）所有偶数的元组，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "df83d3df-f020-4b9e-9181-323d32a4248b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10, 12, 14, 16, 18)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuple(range(10, 20, 2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4a6e813-0693-43da-8bb2-c4f08104f6c2",
   "metadata": {},
   "source": [
    "删除元组\n",
    "\n",
    "对于已经创建的元组，当不再使用时，可以使用del语句将其删除.\n",
    "\n",
    "例如，定义一个名称为team的元组，保存世界杯夺冠热门球队，但这些夺冠热门球队在小组赛和第一轮淘汰赛后都被淘汰了，因此使用del语句将其删除，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "32fc28a4-803e-46f4-8570-333b9dc3bb96",
   "metadata": {},
   "outputs": [],
   "source": [
    "team = (\"西班牙\",\"德国\",\"阿根廷\",\"葡萄牙\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "f7339467-db68-411d-850a-c9177b0716fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('西班牙', '德国', '阿根廷', '葡萄牙')"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "ade83889-f70d-4764-b521-4299a8f8fdc5",
   "metadata": {},
   "outputs": [],
   "source": [
    "del team"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "f9734078-2335-4a07-b993-cc2d46d1adcf",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'team' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[67], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m team\n",
      "\u001b[1;31mNameError\u001b[0m: name 'team' is not defined"
     ]
    }
   ],
   "source": [
    "team"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2637a256-ba7e-47f4-95bd-fd84a6fb0b32",
   "metadata": {},
   "source": [
    "#### 访问元组元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae94efc6-6aef-4408-9b04-58565e4d9c41",
   "metadata": {},
   "source": [
    "在Python中，如果想将元组的内容输出也比较简单，直接使用print()函数即可。例如，定义一个名称为untitle的元组，并打印该元组，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "372a2228-625f-4df8-b3a3-db25b500dcff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Python', 28, ('人生苦短', '我用Python'), ['爬虫', '自动化运维', '云计算', 'Web开发'])\n"
     ]
    }
   ],
   "source": [
    "untitle = ('Python',28,(\"人生苦短\",\"我用Python\"),[\"爬虫\",\"自动化运维\",\"云计算\",\"Web开发\"])\n",
    "print(untitle)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "052ac2b3-35b6-4edb-b47f-41dc9450f4ce",
   "metadata": {},
   "source": [
    "从上面的运行结果可以看出，在输出元组时，是包括左右两侧的小括号的。如果不想要输出全部的元素，则可以通过元组的索引获取指定的元素。例如，要获取元组untitle中索引为0的元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "3068236b-d764-4c36-8332-9202c0d9afcc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python\n"
     ]
    }
   ],
   "source": [
    "print(untitle[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5c3c961-b7b8-4d2e-bbd8-98669ba40662",
   "metadata": {},
   "source": [
    "从上面的运行结果可以看出，在输出单个元组元素时，不包括小括号，如果是字符串，则不包括左右的引号。\n",
    "\n",
    "另外，对于元组也可以采用切片方式获取指定的元素。例如，要访问元组untitle中的前3个元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "17b66e9c-8151-4825-a362-8917a1752c46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('Python', 28, ('人生苦短', '我用Python'))"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "untitle[:3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ad421d37",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(['爬虫', '自动化运维', '云计算', 'Web开发'],)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "untitle[3:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5dfba26e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(28, ('人生苦短', '我用Python'))"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "untitle[1:3]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0f5482d-950d-4276-a0cb-12e6634d32e8",
   "metadata": {},
   "source": [
    "同列表一样，元组也可以使用for循环进行遍历。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fffe1e9d-5bdb-41bf-b0bf-6ab383d8c9de",
   "metadata": {},
   "source": [
    "#### 修改元组元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fb454fb-96b1-46d5-a5ca-4aaa264479dc",
   "metadata": {},
   "source": [
    "元组是不可变序列，所以不能对它的单个元素值进行修改。但是元组也不是完全不能修改的。我们可以对元组进行重新赋值。例如，下面的代码是正确的。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "0cf67316-1d48-4453-9cc0-6b701093387e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 定义元组\n",
    "player = ('梅西','C罗','伊涅斯塔','内马尔','格列兹曼','莫德里奇')  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "149f8a49-e4ab-4a81-8d48-032f653b9cb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('梅西', 'C罗', '伊涅斯塔', '内马尔', '格列兹曼', '莫德里奇')"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "player"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "fad50c3d-008f-4661-9426-eabeec4ba0e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "新元组 ('梅西', 'C罗', '苏亚雷斯', '内马尔', '格列兹曼', '莫德里奇')\n"
     ]
    }
   ],
   "source": [
    "# 对元组进行重新赋值\n",
    "player = ('梅西','C罗','苏亚雷斯','内马尔','格列兹曼','莫德里奇')  \n",
    "print(\"新元组\",player)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df4770cb-c905-45e7-80ea-51486465192a",
   "metadata": {},
   "source": [
    "另外，还可以对元组进行连接组合。例如，可以使用下面的代码实现在已经存在的元组结尾处添加一个新元组。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "4cb6c570-58ea-4e99-82dd-2c332cb25d93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "原元组： ('梅西', 'C罗', '伊涅斯塔', '内马尔')\n"
     ]
    }
   ],
   "source": [
    "player1 = ('梅西','C罗','伊涅斯塔','内马尔')\n",
    "print(\"原元组：\",player1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "1200bcdc-2b78-4208-a27c-1c0587a8d0b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "组合后： ('梅西', 'C罗', '伊涅斯塔', '内马尔', '格列兹曼', '莫德里奇')\n"
     ]
    }
   ],
   "source": [
    "player2 = player1 + ('格列兹曼','莫德里奇')\n",
    "print(\"组合后：\",player2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d1328a0-b97d-47ff-939c-3f1f172124fc",
   "metadata": {},
   "source": [
    "与列表推导式类似，Python也支持元组推导式，尽管它们在语法和使用上有一些细微的差别。\n",
    "\n",
    "元组推导式：\n",
    "\n",
    "语法：\n",
    "元组推导式的语法与列表推导式几乎相同，但使用圆括号 () 而不是方括号 []。\n",
    "特点：\n",
    "\n",
    "- 实际上，元组推导式并不直接创建元组，而是创建一个生成器对象。\n",
    "- 如果你确实需要元组，你需要将生成器对象传递给 tuple() 函数。\n",
    "\n",
    "\n",
    "作用：\n",
    "\n",
    "- 创建生成器对象，可以用于迭代。\n",
    "- 可以轻松转换为元组或其他序列类型。\n",
    "- 比列表推导式更节省内存，因为它不会立即生成所有元素。\n",
    "\n",
    "\n",
    "\n",
    "案例：创建平方数生成器"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "0bc928da-afa1-4786-ab16-d8e82abcae90",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<generator object <genexpr> at 0x0000012F3ED498A0>\n",
      "(0, 1, 4, 9, 16, 25, 36, 49, 64, 81)\n"
     ]
    }
   ],
   "source": [
    "squares_gen = (x**2 for x in range(10))\n",
    "print(squares_gen)  # 输出: <generator object <genexpr> at 0x...>\n",
    "print(tuple(squares_gen))  # 输出: (0, 1, 4, 9, 16, 25, 36, 49, 64, 81)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0350be9-0e8b-48f1-a1dc-e1fa7066323e",
   "metadata": {},
   "source": [
    "案例：处理字符串：提取每个单词的首字母"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "563ac4b7-9da0-4b80-8d45-01391744a104",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('H', 'W', 'P', 'P')\n"
     ]
    }
   ],
   "source": [
    "words = (\"Hello\", \"World\", \"Python\", \"Programming\")\n",
    "first_letters = tuple(word[0] for word in words)\n",
    "print(first_letters)  # 输出: ('H', 'W', 'P', 'P')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c4c80b1-068d-41de-bb57-2aac0c259122",
   "metadata": {},
   "source": [
    "# <center>Python进阶语法"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1250bed0-b420-4559-89bc-125abf522697",
   "metadata": {},
   "source": [
    "## 字典与集合"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3abd17b-d775-4b7f-8b51-0b151ccd8939",
   "metadata": {},
   "source": [
    "在Python中，还包括字典和集合两个不重复且无序的数据结构，也称为非序列数据结构。其中，字典可以看作是一个“键-值”对的集合。在一个字典中，键必须是唯一的。集合中的每个元素都是唯一的。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4125fd3-77fd-4c43-8098-f38755b3d3c8",
   "metadata": {},
   "source": [
    "### 字典"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae88fb9a-31ef-4d5c-8eb4-8ef48b202d03",
   "metadata": {},
   "source": [
    "#### 字典的创建和删除"
   ]
  },
  {
   "attachments": {
    "603ff92e-771c-4151-a309-8edd334df0ae.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "4f839499-b8f5-4733-a96f-c7ab0d0486d8",
   "metadata": {},
   "source": [
    "在定义字典时，每个元素都包含“键”和“值”两个部分。以水果名称和价钱的字典为例，键为水果名称，值为水果价格，如图所示。\n",
    "\n",
    "![image.png](attachment:603ff92e-771c-4151-a309-8edd334df0ae.png)\n",
    "\n",
    "在创建字典时，在“键”和“值”之间使用冒号“:”分隔，相邻两个元素之间使用逗号“,”分隔，所有元素放在一个大括号“{}”中，语法格式如下：\n",
    "\n",
    "dictionary = {'key1':'value1', 'key2':'value2',  ..., 'key n':'value n',}\n",
    "\n",
    "例如，创建一个保存通讯录信息的字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a6af084c-0584-4925-ba12-e89dbad1992b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'qq': '8497891', 'mr': '84978982', '无语': '0431-84978981'}\n"
     ]
    }
   ],
   "source": [
    "dictionary = {'qq':'84978981','mr':'84978982','无语':'0431-84978981'}\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b3ae3dd-dab9-4b9c-90af-cfd941dfa5b7",
   "metadata": {},
   "source": [
    "与列表和元组一样，在Python中也可以创建空字典，可以使用下面两种方法创建空字典。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "c8d710f4-b940-43e1-99c9-f206e47577bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "dictionary = {}\n",
    "#或者\n",
    "dictionary = dict()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a27866a-57ea-4152-9e5b-12b148f461c3",
   "metadata": {},
   "source": [
    "Python的dict()函数除了可以创建一个空字典，还可以通过已有数据快速创建字典。主要表现为以下两种形式。\n",
    "\n",
    "1．通过映射函数创建字典语法格式如下：\n",
    "\n",
    "dictionary = dict(zip(list1,list2))\n",
    "\n",
    "例如，定义两个各包括3个元素的列表，使用dict()函数和zip()函数将前两个列表转换为对应的字典，并输出该字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "ea9fa502-3420-45ca-a3f1-09580632fd67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': '石佛', '吉诺比利': '妖刀', '帕克': '跑车'}\n"
     ]
    }
   ],
   "source": [
    "name = ['邓肯','吉诺比利','帕克']          # 作为键的列表\n",
    "sign = ['石佛','妖刀','跑车']              # 作为值的列表\n",
    "dictionary = dict(zip(name,sign))          # 转换为字典\n",
    "print(dictionary)                          # 输出转换后的字典"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a562a2c-3221-4ace-ae68-13ae71cf35d8",
   "metadata": {},
   "source": [
    "通过给定的“键-值”对创建字典\n",
    "\n",
    "语法格式如下：\n",
    "\n",
    "dictionary = dict(key1=value1,key2=value2,...,key n=value n)\n",
    "\n",
    "在Python中，还可以使用dict对象的fromkeys()方法创建值为空的字典，语法格式如下：\n",
    "\n",
    "dictionary = dict.fromkeys(list1)\n",
    "\n",
    "例如，创建一个只包括名字的字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "7bdc4798-6885-47ae-a73a-4820df0097ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': None, '吉诺比利': None, '帕克': None}\n"
     ]
    }
   ],
   "source": [
    "name_list = ['邓肯','吉诺比利','帕克']            # 作为键的列表\n",
    "dictionary = dict.fromkeys(name_list)\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2242c76d-ad94-4389-8987-5b8aad8c413f",
   "metadata": {},
   "source": [
    "另外，还可以通过已经存在的元组和列表创建字典。例如，创建一个保存名字的元组和保存别名的列表，通过它们创建一个字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d05a9349-816e-4180-bdd4-ec9f115ab8b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{('邓肯', '吉诺比利', '帕克'): ['石佛', '妖刀', '跑车']}\n"
     ]
    }
   ],
   "source": [
    "name_tuple = ('邓肯','吉诺比利', '帕克')          # 作为键的元组\n",
    "sign = ['石佛','妖刀','跑车']                     # 作为值的列表\n",
    "dict1 = {name_tuple:sign}                    # 创建字典\n",
    "print(dict1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "253c7b6a-4718-44d7-8d02-47bbba1e63dd",
   "metadata": {},
   "source": [
    "将作为键的元组修改为列表，再创建一个字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4e367499-835d-4398-8285-b067c3141a05",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "unhashable type: 'list'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[13], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m name_list \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m邓肯\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m吉诺比利\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m帕克\u001b[39m\u001b[38;5;124m'\u001b[39m]           \u001b[38;5;66;03m# 作为键的元组\u001b[39;00m\n\u001b[0;32m      2\u001b[0m sign \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m石佛\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m妖刀\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m跑车\u001b[39m\u001b[38;5;124m'\u001b[39m]                     \u001b[38;5;66;03m# 作为值的列表\u001b[39;00m\n\u001b[1;32m----> 3\u001b[0m dict1 \u001b[38;5;241m=\u001b[39m {name_list:sign}                     \u001b[38;5;66;03m# 创建字典\u001b[39;00m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(dict1)\n",
      "\u001b[1;31mTypeError\u001b[0m: unhashable type: 'list'"
     ]
    }
   ],
   "source": [
    "name_list = ['邓肯','吉诺比利', '帕克']           # 作为键的元组\n",
    "sign = ['石佛','妖刀','跑车']                     # 作为值的列表\n",
    "dict1 = {name_list:sign}                     # 创建字典\n",
    "print(dict1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64d28e7f-1cca-47d5-9799-3b1e9d3b8e9d",
   "metadata": {},
   "source": [
    "与列表和元组一样，不再需要的字典也可以使用del命令将其删除。例如，通过下面的代码可以将已经定义的字典删除。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d85103ee-b3c3-4fdd-a08e-070f0cce973c",
   "metadata": {},
   "outputs": [],
   "source": [
    "del dict1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db4350e7-0e67-4f4a-a7d4-7b8205bf2724",
   "metadata": {},
   "source": [
    "另外，如果只是想删除字典的全部元素，可以使用字典对象的clear()方法实现。执行clear()方法后，原字典将变为空字典。下面的代码将清除字典的全部元素："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "dc9f719e-3261-470f-93aa-30c213f4550a",
   "metadata": {},
   "outputs": [],
   "source": [
    "dict1.clear()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "67e3a634",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'dict1' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[18], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m dict1\n",
      "\u001b[1;31mNameError\u001b[0m: name 'dict1' is not defined"
     ]
    }
   ],
   "source": [
    "dict1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "493c944e-809d-4645-a480-a01ea5782239",
   "metadata": {},
   "source": [
    "#### 通过“键-值”对访问字典"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1ca504d-d0aa-4baf-aca7-41b2998c9496",
   "metadata": {},
   "source": [
    "在Python中，如果想将字典的内容输出也比较简单，可以直接使用print()函数。例如，想要打印定义的dictionary字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "c06a59c4-afb6-42dd-a2db-a88dc4877948",
   "metadata": {},
   "outputs": [],
   "source": [
    "name = ['邓肯','吉诺比利','帕克']          # 作为键的列表\n",
    "sign = ['石佛','妖刀','跑车']              # 作为值的列表\n",
    "dictionary = dict(zip(name,sign))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "366ac154-c63e-4312-9264-5d4abec65447",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': '石佛', '吉诺比利': '妖刀', '帕克': '跑车'}\n"
     ]
    }
   ],
   "source": [
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b020b0a5-283a-4afe-b13d-b36dac8acd69",
   "metadata": {},
   "source": [
    "但是，在使用字典时，很少直接输出它的内容。一般需要根据指定的键得到相应的结果。在Python中，访问字典的元素可以通过下标的方式实现，与列表和元组不同，这里的下标不是索引号，而是键。例如，想要获取“吉诺比利”的别名，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "604680f0-4fbb-4e32-9b34-416fbe8dfb35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "妖刀\n"
     ]
    }
   ],
   "source": [
    "print(dictionary['吉诺比利'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccc632d9-7353-466a-b606-77cea5c49d9a",
   "metadata": {},
   "source": [
    "而在实际开发程序中，很可能我们不知道当前存在什么键，所以需要避免该异常的产生。具体的解决方法是使用if语句对不存在的情况进行处理，即给一个默认值。例如，可以将上面的代码修改为以下内容："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "f0c060b7-31f3-45c9-a228-5548ded1e962",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "罗宾逊的别名是： 我的字典里没有此人\n"
     ]
    }
   ],
   "source": [
    "print(\"罗宾逊的别名是：\",dictionary['罗宾逊'] if '罗宾逊' in dictionary else '我的字典里没有此人')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "f18616ca-3d1d-455c-a72e-9d48e24e67e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "帕克的别名是： 跑车\n"
     ]
    }
   ],
   "source": [
    "print(\"帕克的别名是：\",dictionary['帕克'] if '帕克' in dictionary else '我的字典里没有此人')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be5787cb-4dfb-4359-a517-b4fdcce4ef18",
   "metadata": {},
   "source": [
    "#### 遍历字典"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10445e03-8ec8-4221-95c1-5437abfd783a",
   "metadata": {},
   "source": [
    "字典是以“键-值”对的形式存储数据的，所以在使用字典时需要获取这些“键-值”对。Python提供了遍历字典的方法，通过遍历可以获取字典中的全部“键-值”对。\n",
    "\n",
    "使用字典对象的items()方法可以获取字典的“键-值”对列表，语法格式如下：\n",
    "\n",
    "dictionary.items()\n",
    "\n",
    "其中，dictionary为字典对象；返回值为可遍历的“键-值”对的元组列表。想要获取具体的“键-值”对，可以通过for循环遍历该元组列表。\n",
    "\n",
    "例如，定义一个字典，然后通过items()方法获取“键-值”对的元组列表，并输出全部“键-值”对，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "fc16c928-e0be-40ab-bc61-dc4f5f6ffe52",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('qq', '84978981')\n",
      "('忆知科技', '84978982')\n",
      "('物语', '0431-84978981')\n"
     ]
    }
   ],
   "source": [
    "dictionary = {'qq':'84978981','忆知科技':'84978982','物语':'0431-84978981'}\n",
    "for item in dictionary.items():\n",
    "    print(item)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cfd49fb7-2284-4d7e-869c-0add3a1a6b15",
   "metadata": {},
   "source": [
    "上面的示例得到的是元组中的各个元素，如果想要获取具体的每个键和值，可以使用下面的代码进行遍历："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "6e9a4b86-f965-49b8-bb09-191a429b19ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "qq 的联系电话是 4006751066\n",
      "忆知科技 的联系电话是 0431-84978982\n",
      "物语 的联系电话是 0431-84978981\n"
     ]
    }
   ],
   "source": [
    "dictionary = {'qq':'4006751066','忆知科技':'0431-84978982','物语':'0431-84978981'}\n",
    "for key,value in dictionary.items():\n",
    "    print(key,\"的联系电话是\",value)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "458531d3-920d-4399-8828-5df708178781",
   "metadata": {},
   "source": [
    "#### 添加、修改和删除字典元素"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf03a483-e43c-40b7-8881-06b3214cec14",
   "metadata": {},
   "source": [
    "由于字典是可变序列，所以可以随时在其中添加“键-值”对，这和列表类似。向字典中添加元素的语法格式如下：\n",
    "\n",
    "dictionary[key] = value\n",
    "\n",
    "例如，以保存3位NBA球员别名的场景为例，在创建的字典中添加一个元素，并显示添加后的字典，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "36a17546-d5e9-482b-b024-bbfd2e0979f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': '石佛', '吉诺比利': '妖刀', '帕克': '跑车', '罗宾逊': '海军上将'}\n"
     ]
    }
   ],
   "source": [
    "dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀'), ('帕克','跑车')))  \n",
    "dictionary[\"罗宾逊\"] = \"海军上将\"    # 添加一个元素\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b677b28-dc8d-4b1e-990c-b1beb9b5ec6c",
   "metadata": {},
   "source": [
    "从上面的结果中可以看出，又添加了一个键为“罗宾逊”的元素。\n",
    "\n",
    "由于在字典中“键”必须是唯一的，所以如果新添加元素的“键”与已经存在的“键”重复，那么将使用新的“值”替换原来该“键”的值，这也相当于修改字典的元素。例如，再添加一个“键”为“帕克”的元素，这次设置他为“法国跑车”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "cb260b95-7733-40dd-882d-64305a832615",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': '石佛', '吉诺比利': '妖刀', '帕克': '法国跑车'}\n"
     ]
    }
   ],
   "source": [
    "dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀'), ('帕克','跑车')))  \n",
    "dictionary[\"帕克\"] = \"法国跑车\"# 添加一个元素\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5abef08d-db03-4947-b2f8-39721f48b10c",
   "metadata": {},
   "source": [
    "从上面的结果中可以看出，并没有添加一个新的“键”——“帕克”，而是直接对“帕克”进行了修改。\n",
    "\n",
    "当不需要字典中的某一个元素时，可以使用del命令将其删除。例如，要删除字典dictionary的键为“帕克”的元素，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "42322258-d4f6-42a8-96e0-ddd752341ac3",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'帕克'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[20], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m# dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀'), ('帕克','跑车')))\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m \u001b[38;5;28;01mdel\u001b[39;00m dictionary[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m帕克\u001b[39m\u001b[38;5;124m\"\u001b[39m]               \u001b[38;5;66;03m# 删除一个元素\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(dictionary)\n",
      "\u001b[1;31mKeyError\u001b[0m: '帕克'"
     ]
    }
   ],
   "source": [
    "dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀'), ('帕克','跑车')))\n",
    "del dictionary[\"帕克\"]               # 删除一个元素\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bbaf0616-2adb-4d7c-8774-4c0cc5109847",
   "metadata": {},
   "source": [
    "因此，需要将上面的代码修改为以下内容，从而防止删除不存在的元素时抛出异常："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "53aaf59f-3734-4689-8acf-da16fda90d8a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'邓肯': '石佛', '吉诺比利': '妖刀'}\n"
     ]
    }
   ],
   "source": [
    "dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀')))\n",
    "if \"帕克\" in dictionary:       # 如果存在\n",
    "    del dictionary[\"帕克\"]                 # 删除一个元素\n",
    "print(dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "203817dc-ba6a-4646-aa84-e46a70a3760d",
   "metadata": {},
   "source": [
    "#### 字典推导式"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d413d595-861e-4f46-a517-9844603da18c",
   "metadata": {},
   "source": [
    "使用字典推导式可以快速生成一个字典，它的表现形式和列表推导式类似。例如，我们可以使用下面的代码生成一个包含4个随机数的字典，其中字典的键使用数字表示："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "794fcd52-c653-4ff7-9f43-ffaab4a34a96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "生成的字典为： {1: 97, 2: 24, 3: 92, 4: 23}\n"
     ]
    }
   ],
   "source": [
    "import random                        # 导入random标准库\n",
    "randomdict = {i:random.randint(10,100) for i in range(1,5)}\n",
    "print(\"生成的字典为：\",randomdict)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07845aaf-3114-45ef-ab71-149b2c3426cc",
   "metadata": {},
   "source": [
    "### 集合"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "628dc59d-bcd2-444b-866b-ffbcb070bfbe",
   "metadata": {},
   "source": [
    "Python中的集合与数学中的集合概念类似，也是用于保存不重复元素的。它有可变集合（set）和不可变集合（frozenset）两种。其中，本节所要介绍的set集合是无序可变序列，而frozenset在本书中不做介绍。在形式上，集合的所有元素都放在一对大括号“{}”中，两个相邻元素之间使用逗号“,”分隔。集合最好的应用就是去重，因为集合中的每个元素都是唯一的。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ba2190e-fe4e-4c75-8d36-3f4b167cef32",
   "metadata": {},
   "source": [
    "#### 集合的创建"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "532c1525-f076-49ec-9601-21377b63f6b8",
   "metadata": {},
   "source": [
    "Python提供了两种创建集合的方法：一种是直接使用大括号“{}”创建；另一种是通过set()函数将列表、元组等可迭代对象转换为集合。推荐使用第二种方法。下面分别介绍创建集合的方法。\n",
    "\n",
    "直接使用大括号“{}”创建集合\n",
    "\n",
    "在Python中，创建set集合也可以像列表、元组和字典一样，直接将集合赋值给变量，从而实现创建集合，即直接使用大括号“{}”创建集合，语法格式如下：\n",
    "\n",
    "setname = {element 1,element 2,element 3,...,element n}\n",
    "\n",
    "其中，setname表示集合的名称，可以是任何符合Python命名规则的标识符；element 1、element  2、element  3、element  n表示集合中的元素，元素个数没有限制，并且只要是Python支持的数据类型就可以。\n",
    "\n",
    "例如，下面的每一行代码都可以创建一个集合："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "d180e0a7-b37d-4a82-92a2-8155481f630d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'妖刀', '石佛', '跑车'}"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set1 = {'石佛','妖刀','跑车'}\n",
    "set1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "2f284fcb-bc6b-440f-badb-e235b172468a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1, 2, 3, 4, 5, 6, 9}"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set2 = {3,1,4,1,5,9,2,6}\n",
    "set2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "c4e98d5f-e96c-4f2b-a5e8-b3fe03cbd443",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{('人生苦短', '我用Python'), 28, 'Python'}"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set3 = {'Python', 28, ('人生苦短', '我用Python')}\n",
    "set3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a407ce80-0831-4ff8-8927-15549eed7d5c",
   "metadata": {},
   "source": [
    "使用set()函数创建集合\n",
    "\n",
    "在Python中，可以使用set()函数将列表、元组等其他可迭代对象转换为集合。set()函数的语法格式如下：\n",
    "\n",
    "setname = set(iteration)\n",
    "\n",
    "例如，下面的每一行代码都可以创建一个集合："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "8b6df849-7dc2-45b7-b0ae-23ce51967b39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'。',\n",
       " '不',\n",
       " '之',\n",
       " '予',\n",
       " '们',\n",
       " '会',\n",
       " '命',\n",
       " '失',\n",
       " '我',\n",
       " '是',\n",
       " '望',\n",
       " '机',\n",
       " '杯',\n",
       " '的',\n",
       " '给',\n",
       " '而',\n",
       " '运',\n",
       " '酒',\n",
       " '，'}"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set1 = set(\"命运给予我们的不是失望之酒，而是机会之杯。\")\n",
    "set1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "898d233d-97cc-4468-9e53-1cc0bba19548",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1.414, 1.732, 2.236, 3.14159}"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set2 = set([1.414,1.732,3.14159,2.236])\n",
    "set2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "f66ab3b9-b45e-4633-a3a1-eaabfdae3aa2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'人生苦短', '我用Python'}"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set3 = set(('人生苦短', '我用Python'))\n",
    "set3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d78a1d88-9746-4b78-b9e9-1ae531212cfe",
   "metadata": {},
   "source": [
    "从上面创建的集合结果中可以看出，在创建集合时，如果出现了重复元素，那么将只保留一个，如在第一个集合中的“是”和“之”都只保留了一个。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb734715-86c6-4076-bed0-54dcbf0c0e99",
   "metadata": {},
   "source": [
    "#### 集合的添加和删除"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a5fa158-423a-4d61-bfb5-0f9a7feff8fa",
   "metadata": {},
   "source": [
    "集合是可变序列，所以在创建集合后，还可以对其添加或删除元素，下面分别介绍集合的添加和删除。\n",
    "\n",
    "向集合中添加元素\n",
    "\n",
    "向集合中添加元素可以使用add()方法实现，语法格式如下：\n",
    "\n",
    "setname.add(element)\n",
    "\n",
    "其中，setname表示要添加元素的集合；element表示要添加的元素内容。这里只能使用字符串、数字及布尔类型的True或False等，不能使用列表、元组等可迭代对象。\n",
    "\n",
    "例如，定义一个保存明日科技零基础学系列图书名字的集合，然后向该集合中添加一个刚刚上市的图书名字，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "318b661e-a243-49e7-a10b-43320ccc4d27",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'零基础学C语言', '零基础学Android', '零基础学Java', '零基础学Python', '零基础学PHP', '零基础学C#'}\n"
     ]
    }
   ],
   "source": [
    "mr = set(['零基础学Java','零基础学Android','零基础学C语言','零基础学C#','零基础学PHP'])\n",
    "mr.add('零基础学Python')       # 添加一个元素\n",
    "print(mr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90573381-abf0-41ff-a295-c10eddeeb7db",
   "metadata": {},
   "source": [
    "从集合中删除元素\n",
    "\n",
    "在Python中，可以使用del命令删除整个集合，也可以使用集合的pop()方法或remove()方法删除一个元素，或者使用集合对象的clear()方法清空集合，即删除集合中的全部元素，使其变为空集合。\n",
    "\n",
    "例如，下面的代码将分别实现从集合中删除指定元素、删除一个元素和清空集合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "919dcf08-9a02-44ee-aadc-b4c2a3164d3d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "使用remove()方法移除指定元素后： {'零基础学C语言', '零基础学Android', '零基础学Java', '零基础学PHP', '零基础学C#'}\n",
      "使用pop()方法移除一个元素后： {'零基础学Android', '零基础学Java', '零基础学PHP', '零基础学C#'}\n",
      "使用clear()方法清空集合后： set()\n"
     ]
    }
   ],
   "source": [
    "mr = set(['零基础学Java','零基础学Android','零基础学C语言','零基础学C#','零基础学PHP','零基础学Python'])\n",
    "mr.remove('零基础学Python')                       # 移除指定元素\n",
    "print('使用remove()方法移除指定元素后：',mr)\n",
    "mr.pop()                                          # 移除一个元素\n",
    "print('使用pop()方法移除一个元素后：',mr)\n",
    "mr.clear()                                        # 清空集合\n",
    "print('使用clear()方法清空集合后：',mr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1f64084-4140-4c95-a990-411ffa16e9dd",
   "metadata": {},
   "source": [
    "#### 集合的交集、并集和差集运算"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d03fc0d6-eb4f-4209-964b-53038fdb17f5",
   "metadata": {},
   "source": [
    "集合最常用的操作就是进行交集、并集和差集运算。当进行交集运算时使用“&”符号；当进行并集运算时使用“｜”符号；当进行差集运算时使用“-”符号。下面通过一个具体的示例演示如何对集合进行交集、并集和差集运算。\n",
    "\n",
    "定义两个包括4个元素的集合，再根据需要对两个集合进行交集、并集和差集运算，并输出运算结果，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "d0dd62b1-1334-4b84-bd2e-d9873d816173",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "大前锋位置的球员有： {'加内特', '马龙', '邓肯'} \n",
      "\n",
      "中锋位置的球员有： {'奥尼尔', '邓肯', '姚明'} \n",
      "\n",
      "交集运算： {'邓肯'}\n",
      "并集运算： {'奥尼尔', '马龙', '姚明', '加内特', '邓肯'}\n",
      "差集运算： {'加内特', '马龙'}\n"
     ]
    }
   ],
   "source": [
    "pf = set(['邓肯','加内特','马龙'])         # 保存大前锋位置的球员名字\n",
    "print('大前锋位置的球员有：',pf,'\\n')         # 输出大前锋的球员名字\n",
    "cf = set(['邓肯','奥尼尔','姚明'])         # 保存中锋位置的球员名字\n",
    "print('中锋位置的球员有：', cf,'\\n')           # 输出中锋的球员名字\n",
    "print('交集运算：', pf & cf)                 # 输出既是大前锋又是中锋的球员名字\n",
    "print('并集运算：', pf | cf)                 # 输出大前锋和中锋的全部球员名字\n",
    "print('差集运算：', pf - cf)                 # 输出是大前锋但不是中锋的球员名字"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b95210d6-2c86-4da7-b1b6-e2f261938725",
   "metadata": {},
   "source": [
    "## 文件与 I/O"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "314e0df6-f26e-4ac6-be78-9956936a885d",
   "metadata": {},
   "source": [
    "在变量、序列和对象中存储的数据是暂时的，程序结束后就会丢失。为了能够长时间地保存程序中的数据，需要将程序中的数据保存到磁盘文件中。Python提供了内置的文件对象和对文件、目录进行操作的内置模块。通过这些技术可以很方便地将数据保存到文件（如文本文件等）中，以达到长时间保存数据的目的。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6c3e4e3-212e-4b4e-9c22-c3447861f931",
   "metadata": {},
   "source": [
    "### 基本文件操作"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3a5efc4-a5c3-4f05-b551-846aee3fe83f",
   "metadata": {},
   "source": [
    "在Python中，内置了文件（File）对象。在使用文件对象时，首先需要通过内置的open()函数创建一个文件对象，然后通过该对象提供的函数进行一些基本文件操作。例如，可以使用文件对象的write()函数向文件中写入内容，以及使用close()函数关闭文件等。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4568fa20-3a63-41ac-9fe5-6c6db9a111ae",
   "metadata": {},
   "source": [
    "#### 创建和打开文件"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5990faf-8535-45a0-8634-f651b79b467e",
   "metadata": {},
   "source": [
    "在Python中，想要操作文件需要先创建或打开指定的文件并创建文件对象，可以通过内置的open()函数实现。open()函数的基本语法格式如下：\n",
    "\n",
    "file = open(filename[,mode[,buffering]])\n",
    "\n",
    "buffering：可选参数，用于指定读写文件的缓冲模式，当值为0时表示表达式不缓存；当值为1时表示表达式缓存；如果buffering的值大于1，则表示缓冲区的大小。默认为缓存模式。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d563cfb7-dbfb-483f-b891-ec49c6884f51",
   "metadata": {},
   "source": [
    "1. 打开一个不存在的文件时先创建该文件\n",
    "\n",
    "在默认的情况下，使用open()函数打开一个不存在的文件，会抛出如图所示的异常。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "776966f5-6bf7-411e-b2bb-88769d8635a6",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'a.txt'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[107], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m file \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124ma.txt\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mr\u001b[39m\u001b[38;5;124m'\u001b[39m,encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mutf-8\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32mD:\\ProgramData\\anaconda3\\Lib\\site-packages\\IPython\\core\\interactiveshell.py:284\u001b[0m, in \u001b[0;36m_modified_open\u001b[1;34m(file, *args, **kwargs)\u001b[0m\n\u001b[0;32m    277\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m file \u001b[38;5;129;01min\u001b[39;00m {\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m2\u001b[39m}:\n\u001b[0;32m    278\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    279\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mIPython won\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mt let you open fd=\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfile\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m by default \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    280\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mas it is likely to crash IPython. If you know what you are doing, \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    281\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124myou can use builtins\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m open.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    282\u001b[0m     )\n\u001b[1;32m--> 284\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m io_open(file, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'a.txt'"
     ]
    }
   ],
   "source": [
    "file = open('a.txt','r',encoding='utf-8')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0d5a1aa-cbe5-419f-8c18-bcef66460a53",
   "metadata": {},
   "source": [
    "2. 以二进制形式打开文件\n",
    "\n",
    "使用open()函数不仅能够以文本的形式打开文本文件，而且能够以二进制形式打开非文本文件，如图片文件、音频文件、视频文件等。例如，创建一个名称为picture.png的图片文件，如图所示，并且使用open()函数以二进制形式打开该文件。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "37a94a3d-3f89-4e62-a9b4-bc4f04c7da5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<_io.BufferedReader name='logo.png'>\n"
     ]
    }
   ],
   "source": [
    "file = open('logo.png','rb')\n",
    "print(file)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6421361-71bf-46fd-9927-57c58581942e",
   "metadata": {},
   "source": [
    "创建的是一个BufferedReader对象。对于该对象生成后，可以再使用其他的第三方模块进行处理。例如，上面的BufferedReader对象是通过打开图片文件实现的。那么就可以将其传入第三方的图像处理库PIL的Image模块的open()函数中，以便于对图片进行处理"
   ]
  },
  {
   "attachments": {
    "909e3a57-5b68-4128-bfa8-6a981e01e07b.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "f88f4deb-eb21-4b44-81f8-5ae620ebe026",
   "metadata": {},
   "source": [
    "3. 打开文件时指定编码方式\n",
    "当使用open()函数打开文件时，默认采用GBK编码，当被打开的文件不是GBK编码时，将抛出如图所示的异常。\n",
    "\n",
    "![image.png](attachment:909e3a57-5b68-4128-bfa8-6a981e01e07b.png)\n",
    "\n",
    "在调用open()函数时，通过添加“encoding='utf-8'”参数即可实现将编码指定为UTF-8。如果想要指定其他编码可以将单引号中的内容替换为想要指定的编码即可。\n",
    "\n",
    "例如，打开采用UTF-8编码保存的notice.txt文件，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "44e6fed2-e7c8-49bb-b067-d57c9e192bb6",
   "metadata": {},
   "outputs": [],
   "source": [
    "file = open('notice.txt','r',encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "1dba92fa-8e91-4117-9ac9-252aa77548e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<_io.TextIOWrapper name='notice.txt' mode='r' encoding='utf-8'>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76a84d45-2c01-42e9-8dd4-d70e358178a2",
   "metadata": {},
   "source": [
    "#### 关闭文件"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d4cbb7c-8254-4027-8dce-af5d3b50272d",
   "metadata": {},
   "source": [
    "打开文件后，需要及时关闭文件，以免对文件造成不必要的破坏。关闭文件可以使用文件对象的close()函数实现。close()函数的语法格式如下：\n",
    "\n",
    "file.close()\n",
    "\n",
    "其中，file为打开的文件对象。\n",
    "\n",
    "例如，关闭打开的file对象，代码如下：\n",
    "\n",
    "file.close()    # 关闭文件对象"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d99f84a-b327-427d-bd73-5f6580e83b4f",
   "metadata": {},
   "source": [
    "#### 打开文件时使用with语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "005fdced-4843-46c6-8b0a-50ee4d2d7a3f",
   "metadata": {},
   "source": [
    "打开文件后，要及时将其关闭。如果忘记关闭文件可能会带来意想不到的问题。另外，如果在打开文件时抛出了异常，那么将导致文件不能被及时关闭。为了更好地避免此类问题发生，可以使用Python提供的with语句。从而实现在处理文件时，无论是否抛出异常，都能保证with语句执行完毕后关闭已经打开的文件。with语句的语法格式如下：\n",
    "<code>\n",
    "with expression as target:\n",
    "    with-body\n",
    "\n",
    "例如，在打开文件时使用with语句，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "b50381b3-e937-4ccb-a964-174d62e22733",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " ========== Python经典应用 ==========\n",
      "\n",
      " 即将显示......\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"\\n\",\"=\"*10,\"Python经典应用\",\"=\"*10)\n",
    "# 创建或打开保存Python经典应用信息的文件\n",
    "with open('message.txt','w') as file:   \n",
    "    pass\n",
    "print(\"\\n 即将显示......\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4763af2-82b3-405c-a789-0389638043ad",
   "metadata": {},
   "source": [
    "#### 写入文件内容"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5436f3b3-0c5c-45f6-b3be-2857d8651a98",
   "metadata": {},
   "source": [
    "在前面的内容中，虽然创建并打开了一个message文件，但是该文件中并没有任何内容，它的大小是0KB。Python中的文件对象提供了write()函数，可以向文件中写入内容。write()函数的语法格式如下：\n",
    "\n",
    "file.write(string)\n",
    "\n",
    "其中，file为打开的文件对象；string为要写入的字符串。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "70c2348e-b77b-4393-997e-b43031b9bcec",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('message.txt','w') as file:   \n",
    "    file.write(\"我爱数据分析\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc893bec-aa02-427c-9831-8d8c6a484c5e",
   "metadata": {},
   "source": [
    "#### 读取文件"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24a6835e-4c15-4145-a05c-0abc0b359879",
   "metadata": {},
   "source": [
    "在Python中打开文件后，除了可以向其写入或追加内容，还可以读取文件中的内容。\n",
    "\n",
    "读取指定字符文件对象提供了read()函数读取指定个数的字符，语法格式如下：\n",
    "\n",
    "file.read([size])\n",
    "\n",
    "其中，file为打开的文件对象；size为可选参数，用于指定要读取的字符个数，如果省略size参数，则一次性读取所有内容。\n",
    "\n",
    "例如，读取message.txt文件中的前9个字符，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "5c8674b9-8062-45c8-9732-3f9e031ea9c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "我爱数据\n"
     ]
    }
   ],
   "source": [
    "with open('message.txt','r') as file:   # 打开文件\n",
    "    string = file.read(4)                    # 读取前9个字符\n",
    "print(string)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd14582b-73e6-4fcd-bd5f-4cec756bb863",
   "metadata": {},
   "source": [
    "例如，想要从文件的第11个字符开始读取8个字符，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "4a22fd95-0431-4dc9-a2ad-201b31924709",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "爱数\n"
     ]
    }
   ],
   "source": [
    "with open('message.txt','r') as file:  # 打开文件\n",
    "    file.seek(2)               # 移动文件指针到新的位置\n",
    "    string = file.read(2)              # 读取8个字符\n",
    "    print(string)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eff593b1-eb74-4df9-bba5-1185ef76adf5",
   "metadata": {},
   "source": [
    "读取一行\n",
    "\n",
    "在使用read()函数读取文件时，如果文件很大，一次读取全部内容到内存，容易造成内存不足，所以通常会采用逐行读取。文件对象提供了readline()函数用于每次读取一行数据。readline()函数的语法格式如下：\n",
    "\n",
    "file.readline()\n",
    "\n",
    "其中，file为打开的文件对象。同read()函数一样，在打开文件时，也需要指定打开模式为r（只读）或r+（读写）。\n",
    "\n",
    "例如，通过readline()函数读取message.txt文件的内容，并输出读取结果，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "c4d1b097-2b40-4ddf-a23d-f9a77b4fb541",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " ==================== Python经典应用 ==================== \n",
      "\n",
      "1 我爱数据分析\n",
      "\n",
      " ==================== over ==================== \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"\\n\",\"=\"*20,\"Python经典应用\",\"=\"*20,\"\\n\")\n",
    "# 打开保存Python经典应用信息的文件\n",
    "with open('message.txt','r') as file:   \n",
    "    number = 0                              # 记录行号\n",
    "    while True:\n",
    "        number += 1\n",
    "        line = file.readline()\n",
    "        if line =='':\n",
    "            break                           # 跳出循环\n",
    "        print(number,line,end= \"\\n\")   # 输出一行内容\n",
    "print(\"\\n\",\"=\"*20,\"over\",\"=\"*20,\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81629e38-e846-42a3-af61-7821dc809977",
   "metadata": {},
   "source": [
    "读取全部行\n",
    "\n",
    "读取全部行的作用同调用read()函数时不指定size类似，只不过当读取全部行时，返回的是一个字符串列表，每个元素为文件的一行内容。读取全部行，使用的是文件对象的readlines()函数，语法格式如下：\n",
    "\n",
    "file.readlines()\n",
    "\n",
    "其中，file为打开的文件对象。同read()函数一样，在打开文件时，也需要指定打开模式为r（只读）或r+（读写）。\n",
    "\n",
    "例如，通过readlines()函数读取message.txt文件中的所有内容，并输出读取结果，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "b0a00ea9-e4d2-4d42-adf8-d823e8b0ff5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " ==================== Python经典应用 ==================== \n",
      "\n",
      "['我爱数据分析']\n",
      "\n",
      " ========================= over ========================= \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"\\n\",\"=\"*20,\"Python经典应用\",\"=\"*20,\"\\n\")\n",
    "# 打开保存Python经典应用信息的文件\n",
    "with open('message.txt','r') as file:\n",
    "    message = file.readlines()                # 读取全部信息\n",
    "    print(message)                                # 输出信息\n",
    "    print(\"\\n\",\"=\"*25,\"over\",\"=\"*25,\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "631f5210-5923-40a7-b1f0-d011a637388d",
   "metadata": {},
   "source": [
    "## 类和对象"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a359b61-6d40-4df8-9dbf-c29061b19882",
   "metadata": {},
   "source": [
    "类是面向对象编程的核心概念，面向对象程序设计是在面向过程程序设计的基础上发展而来的，它比面向过程程序设计具有更强的灵活性和扩展性。面向对象程序设计是一个程序员发展的“分水岭”，很多初学者和略有成就的开发者，就是因为无法理解“面向对象”的概念而放弃深入学习编程。要想在编程这条路上走得比别人远，就一定要掌握面向对象编程技术。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f809d2cc-f39e-4c57-af62-8d53af842a28",
   "metadata": {},
   "source": [
    "### 面向对象概述"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b02cae98-143e-4848-a913-7762ce810610",
   "metadata": {},
   "source": [
    "传统的程序采用结构化的程序设计方法，即面向过程。针对某一需求，自上而下，逐步细化，将需求通过模块的形式实现，然后对模块中的问题进行结构化编码。随着用户需求的不断增加，软件规模越来越大，传统的面向过程开发方式暴露出许多缺点，如软件开发周期长、软件程序难以维护等。20世纪80年代后期，人们提出了面向对象（Object Oriented  Programming，OOP）程序设计方式。在面向对象程序设计中，开发人员不需要考虑数据结构和功能函数，只要关注对象即可。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8accc79f-6985-41c1-8f46-990a53c93476",
   "metadata": {},
   "source": [
    "#### 对象"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a818559d-d02b-4a0a-a5a9-45fbd08ccf65",
   "metadata": {},
   "source": [
    "“对象”是一个抽象概念，英文是“Object”，表示任意存在的事物。世间万物皆对象！在现实世界中，随处可见的一种事物就是对象，对象是事物存在的实体，如一个人。通常对象被划分为两部分，即静态部分与动态部分。静态部分被称为“属性”，任何对象都具备自身属性，这些属性不仅是客观存在的，而且是不能被忽视的，如人的性别动态部分指的是对象的行为，即对象执行的动作，如人可以行走。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b032d08-b183-4818-a8e8-282479ae229a",
   "metadata": {},
   "source": [
    "#### 类"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7bf9b3c2-ad2e-427d-b000-30c274e57396",
   "metadata": {},
   "source": [
    "类是封装对象的属性和行为的载体，反过来说，即具有相同属性和行为的一类实体被称为类。例如，把雁群比作大雁类，那么大雁类就具备了喙、翅膀和爪等属性，觅食、飞行和睡觉等行为，而一只要从北方飞往南方的大雁则被视为大雁类的一个对象。\n",
    "\n",
    "在Python中，类是一种抽象概念，如定义一个大雁类，在该类中，可以定义每个对象共有的属性和方法；而一只要从北方飞往南方的大雁则是大雁类的一个对象，对象是类的实例。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "efa42ebe-79a6-4029-9b83-cabdce021c54",
   "metadata": {},
   "source": [
    "#### 面向对象程序设计的特点"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b990e537-8a44-4fa5-aab0-9eb813ac007c",
   "metadata": {},
   "source": [
    "面向对象程序设计具有封装、继承和多态三大基本特点，下面分别描述。\n",
    "\n",
    "1．封装\n",
    "\n",
    "封装是面向对象编程的核心思想，将对象的属性和行为封装起来，其载体就是类，类通常会对客户隐藏其实现细节，这就是封装的思想。例如，用户使用计算机，只需要使用手指敲击键盘就可以实现一些功能，而无须知道计算机内部是如何工作的。\n",
    "\n",
    "采用封装思想保证了类内部数据结构的完整性，使用该类的用户不能直接看到类中的数据结构，而只能执行类允许公开的数据，这样就避免了外部对内部数据的影响，提高了程序的可维护性。\n",
    "\n",
    "2．继承\n",
    "\n",
    "矩形、菱形、平行四边形和梯形都是四边形。因为四边形与它们具有共同的特征，即拥有4条边，所以只要将四边形适当地延伸，就会得到这些图形。以平行四边形为例，如果把平行四边形看作四边形的延伸，那么平行四边形就复用了四边形的属性和行为，同时添加了平行四边形特有的属性和行为，如平行四边形的对边平行且相等。在Python中，可以把平行四边形类看作是继承四边形类后产生的类，其中，将类似于平行四边形的类称为子类，将类似于四边形的类称为父类或超类。值得注意的是，在阐述平行四边形和四边形的关系时，可以说平行四边形是特殊的四边形，但不能说四边形是平行四边形。同理，在Python中可以说子类的实例都是父类的实例，但不能说父类的实例是子类的实例。\n",
    "\n",
    "综上所述，继承是实现重复利用的重要手段，子类通过继承复用父类的属性和行为的同时又添加了子类特有的属性和行为。\n",
    "\n",
    "3．多态\n",
    "\n",
    "将父类对象应用于子类的特征就是多态。例如，创建一个螺丝类，螺丝类有两个属性，即粗细和螺纹密度；再创建两个类，一个是长螺丝类，另一个是短螺丝类，并且它们都继承了螺丝类。这样长螺丝类和短螺丝类不仅具有相同的特征（粗细相同，且螺纹密度也相同），还具有不同的特征（一个长，一个短，长的可以用来固定大型支架，短的可以用来固定生活中的家具）。\n",
    "\n",
    "综上所述，一个螺丝类衍生出不同的子类，子类继承父类特征的同时，也具备了自己的特征，并且能够实现不同的效果，这就是多态化的结构。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1ae372c-cc4e-4194-a9f4-7dda2cc35ab2",
   "metadata": {},
   "source": [
    "### 类的定义和使用"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74ae8fe5-4984-4ae9-8b67-0c44a77abf14",
   "metadata": {},
   "source": [
    "在Python中，类表示具有相同属性和方法的对象的集合。在使用类时，需要先定义类，再创建类的实例，通过类的实例就可以访问类中的属性和方法了。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84c6c788-67b4-4066-9a3f-21627e9ecf13",
   "metadata": {},
   "source": [
    "#### 定义类"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7297b053-f4be-4a23-b0d5-644980ab056d",
   "metadata": {},
   "source": [
    "在Python中，类的定义使用class关键字来实现，语法格式如下：\n",
    "<code>\n",
    "class ClassName:    \n",
    "    '''类的帮助信息'''             # 类文档字符串    \n",
    "    statement                 # 类体"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d42deed4-9507-44bb-acc8-aad3ee9a49be",
   "metadata": {},
   "source": [
    "#### 创建类的实例"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7df5164-5f63-4545-90f6-f0eb86ee82c0",
   "metadata": {},
   "source": [
    "当类定义完成后，并不会真正创建一个实例。这就好比一辆汽车的设计图，设计图可以告诉你汽车看上去怎么样，但设计图本身不是一辆汽车，你不能开走它，它只能帮助人们制造真正的汽车，而且可以借助它制造很多辆汽车。那么如何创建实例呢？\n",
    "\n",
    "class语句本身并不会创建该类的任何实例。所以在类定义完成后，需要创建类的实例，即实例化该类的对象。创建类的实例的语法格式如下：\n",
    "\n",
    "ClassName(parameterlist)\n",
    "\n",
    "其中，ClassName是必需参数，用于指定具体的类；parameterlist是可选参数，当创建一个类时，如果没有创建__init__()方法，或者__init__()方法只有一个self参数，则parameterlist可以省略。\n",
    "\n",
    "例如，创建Geese类，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "24548310-640c-41f4-a8bb-de302e5ec254",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Geese:\n",
    "    '''大雁类'''\n",
    "    pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "018ddd68-2480-4a86-b2a0-2652749d0abd",
   "metadata": {},
   "source": [
    "创建Geese类实力，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "11882b81-8335-4763-a5c0-09c12446cebc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<__main__.Geese object at 0x0000012F3BC5ADD0>\n"
     ]
    }
   ],
   "source": [
    "wildGoose = Geese()      # 创建Geese类的实例\n",
    "print(wildGoose)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0bbbfa8-7147-4cd8-a16b-c981b8302729",
   "metadata": {},
   "source": [
    "#### 创建类的成员并访问"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "323aeabc-669f-4ef5-a8f9-7cdf7e3d4027",
   "metadata": {},
   "source": [
    "类的成员主要由实例方法和数据成员组成。在类中创建了类的成员后，可以通过类的实例进行访问。\n",
    "\n",
    "1．创建实例方法并访问\n",
    "\n",
    "所谓实例方法，是指在类中定义的函数，该函数是一种在类的实例上操作的函数。与__init__()方法一样，实例方法的第一个参数必须是self，并且必须包含一个self参数。创建实例方法的语法格式如下：\n",
    "<code>\n",
    "def functionName(self,parameterlist):   \n",
    "    block\n",
    "\n",
    "2．创建数据成员并访问\n",
    "\n",
    "数据成员是指在类中定义的变量，即属性，根据定义位置又可以分为类属性和实例属性。下面分别进行介绍。\n",
    "\n",
    "（1）类属性。\n",
    "\n",
    "类属性是指定义在类中，并且在函数体外的属性。类属性可以在类的所有实例之间共享值，也就是在所有实例化的对象中公用。\n",
    "\n",
    "例如，定义一个Geese雁类，在该类中定义3个类属性，用于记录雁类的特征，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "b731eae1-c271-43bd-b3e6-e77045dafb60",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Geese:\n",
    "    '''雁类'''\n",
    "    neck = \"脖子较长\"                       # 定义类属性（脖子）\n",
    "    wing = \"振翅频率高\"                     # 定义类属性（翅膀）\n",
    "    leg = \"腿位于身体的中心支点，行走自如\"     # 定义类属性（腿）\n",
    "    def __init__(self):               # 实例方法（相当于构造方法）\n",
    "        print(\"我属于雁类！我有以下特征：\")\n",
    "        print(Geese.neck)             # 输出脖子的特征\n",
    "        print(Geese.wing)                   # 输出翅膀的特征\n",
    "        print(Geese.leg)                   # 输出腿的特征"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "fc4251e1-23cb-451c-8fd5-603d1f558e34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "我属于雁类！我有以下特征：\n",
      "脖子较长\n",
      "振翅频率高\n",
      "腿位于身体的中心支点，行走自如\n"
     ]
    }
   ],
   "source": [
    "# 创建Geese雁类的实例：\n",
    "geese = Geese()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31138d66-665d-4fa1-8406-0b5aa6d54f4a",
   "metadata": {},
   "source": [
    "## Python 内置函数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51a12f12-a65f-4252-85c6-798f6c2408be",
   "metadata": {},
   "source": [
    "Python内置了一系列的常用函数，通过这些内置函数，开发人员可以很方便地进行数据类型转换、数学运算、逻辑操作、集合操作、基本I/O操作等。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d32d3ef5-6a2d-4ab4-b97c-6f79e883ef20",
   "metadata": {},
   "source": [
    "### 基本常用函数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "269e91fb-1d5f-4582-a67a-d015b98ed1e2",
   "metadata": {},
   "source": [
    "#### help()函数——查看对象的帮助信息"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8aa2a70d-9db2-45b2-af8d-d9f02198f58b",
   "metadata": {},
   "source": [
    "help()函数用于查看对象的帮助信息，help()函数的语法格式如下：\n",
    "\n",
    "help([object])\n",
    "\n",
    "示例：利用help()函数查看input()函数的帮助信息，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "683c7885-4eb9-4609-be82-4168cda054a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on method raw_input in module ipykernel.kernelbase:\n",
      "\n",
      "raw_input(prompt='') method of ipykernel.ipkernel.IPythonKernel instance\n",
      "    Forward raw_input to frontends\n",
      "    \n",
      "    Raises\n",
      "    ------\n",
      "    StdinNotImplementedError if active frontend doesn't support stdin.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(input)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b80652d5-3723-47b7-ae68-572ea1f66ce9",
   "metadata": {},
   "source": [
    "示例：使用help()函数查看Python中所有的关键字，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "92fb1ca2-3905-45a2-94b7-5a2ac38bf025",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Here is a list of the Python keywords.  Enter any keyword to get more help.\n",
      "\n",
      "False               class               from                or\n",
      "None                continue            global              pass\n",
      "True                def                 if                  raise\n",
      "and                 del                 import              return\n",
      "as                  elif                in                  try\n",
      "assert              else                is                  while\n",
      "async               except              lambda              with\n",
      "await               finally             nonlocal            yield\n",
      "break               for                 not                 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(\"keywords\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b461957-7adb-4d99-b354-54824fde128b",
   "metadata": {},
   "source": [
    "#### format()函数——格式化显示"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abdc27b5-fc41-4115-a6d3-4545ce5c13f4",
   "metadata": {},
   "source": [
    "format()函数用于将一个数值进行格式化显示，format()函数的语法格式如下：\n",
    "\n",
    "format(value[, format_spec])\n",
    "\n",
    "示例：通过format()函数格式化实现对齐与填充等操作，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "76c832d8-fc13-4ac0-b78a-dd21c6ae87a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 521\n",
      "mrsoft              \n",
      "              mrsoft\n",
      "00000000000000000521\n",
      "       mrsoft       \n",
      "mrsoft              \n",
      "**********************我爱python\n",
      "-----------我爱python-----------\n",
      "我爱python######################\n"
     ]
    }
   ],
   "source": [
    "print(format(521,'20'))              # 数字类型，默认为右对齐，宽度为20\n",
    "print(format('mrsoft','20'))         # 字符串类型，默认为左对齐，宽度为20\n",
    "print(format('mrsoft','>20'))        # 右对齐，宽度为20\n",
    "print(format(521,'0=20'))            #右对齐，宽度为20，用0补充，仅对数字有效\n",
    "print(format('mrsoft','^20'))        # 居中对齐，宽度为20\n",
    "print(format('mrsoft','<20'))        # 左对齐，宽度为20\n",
    "print(format('我爱python','*>30'))     # 右对齐，宽度为30，用*补充\n",
    "print(format('我爱python','-^30'))     # 居中对齐，宽度为30，用-补充\n",
    "print(format('我爱python','#<30'))     # 左对齐，宽度为30，用#补充"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c48be599-22d4-49c6-ab97-92c0cc5fc2d3",
   "metadata": {},
   "source": [
    "#### len()函数——返回对象的长度或项目个数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3819da2-6c59-4653-9168-a7a3537b873a",
   "metadata": {},
   "source": [
    "len()函数用于返回一个对象的长度或项目个数。len()函数的语法格式如下：\n",
    "\n",
    "len(s)\n",
    "\n",
    "示例：定义一个字符串，使用len()函数获取其长度，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "d1caa1b6-3c31-4354-9c1d-730b28345be9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "字符串的长度为: 6\n"
     ]
    }
   ],
   "source": [
    "str = '莫轻言放弃！'\n",
    "print('字符串的长度为:',len(str))         # 获取字符串长度"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcc740e0-130d-48da-8d89-1799a7e8753e",
   "metadata": {},
   "source": [
    "示例：使用dict()函数创建一个字典，存储马刺GDP组合的别名及名字，使用len()函数获取该字典的元素个数，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "d2991e13-3808-4268-8f29-5bdfd2c4886b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "字典： {'邓肯': '石佛', '吉诺比利': '妖刀', '帕克': '跑车'}\n",
      "字典中的元素个数为： 3\n"
     ]
    }
   ],
   "source": [
    "dictionary =dict((('邓肯', '石佛'),('吉诺比利','妖刀'), ('帕克','跑车')))\n",
    "print('字典：',dictionary)                   # 输出字典\n",
    "print('字典中的元素个数为：',len(dictionary))        # 获取字典中的元素个数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca2b14a4-5c8e-4fe7-bc91-d520baea4b3d",
   "metadata": {},
   "source": [
    "### 数学函数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "804c43a7-3aef-4752-bea1-ee89314e8a89",
   "metadata": {},
   "source": [
    "#### sum()函数——对可迭代对象进行求和计算"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f9ba359-50bf-4b93-8bb7-1354fdb6763d",
   "metadata": {},
   "source": [
    "sum()函数用于对列表、元组、集合等可迭代对象进行求和计算。sum()函数的语法格式如下：\n",
    "\n",
    "sum(iterable[, start])\n",
    "\n",
    "示例：使用sum()函数对可迭代对象进行求和，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "85f9dbcb-6d5e-41f0-8996-9324f640237a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "60\n",
      "5050\n",
      "10\n",
      "--------------------------------------------------\n",
      "12\n",
      "20\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "#参数为可迭代对象\n",
    "print(sum((10,20,30)))         # 元组\n",
    "print(sum(range(101)))         # range对象\n",
    "print(sum([2,3,4,1]))          # 列表\n",
    "#指定参数start\n",
    "print('-'*50)\n",
    "print(sum([2,3,4,1],2))        # 列表元素计算总和后再加2\n",
    "print(sum([2,3,4,1],10))       # 列表元素计算总和后再加10\n",
    "print(sum([],1))               # 传入空可迭代对象，返回参数start值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b53434d9-7295-4f1c-94b2-c550df21aa8c",
   "metadata": {},
   "source": [
    "示例：定义一个保存10名学生Python理论成绩的列表，然后使用sum()函数计算列表中元素的和，即计算总成绩，然后输出总成绩，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "2fda2735-0784-4a6a-85ac-9b5e76d703bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python理论总成绩为： 968\n"
     ]
    }
   ],
   "source": [
    "grade = [98,99,97,100,100,96,94,89,95,100]\n",
    "total = sum(grade)                          # 计算总成绩\n",
    "print(\"Python理论总成绩为：\",total)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10fd24b8-692c-4f37-a6b4-3b9382fd4c2d",
   "metadata": {},
   "source": [
    "####  max()函数——获取给定参数的最大值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5784707a-08ff-4c89-85fc-c87b530b9acd",
   "metadata": {},
   "source": [
    "max()函数用于获取给定的多个参数中的最大值或可迭代对象中的最大元素。执行与min()函数相反的操作。max()函数的语法格式如下：\n",
    "\n",
    "max(iterable, *[, default=obj, key=func])\n",
    "\n",
    "或者\n",
    "\n",
    "max(arg1, arg2, *args, *[, key=func])\n",
    "\n",
    "示例：使用max()函数获取给定参数的最大值，代码如下"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "39f364c3-42cc-4ba0-b5e6-0ea30267cc64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11\n",
      "95\n",
      "20\n",
      "100\n",
      "8\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "#获取多个数值中的最大值\n",
    "print(max(1, 3, 5, 7, 9, 11))\n",
    "print(max(-10, 50.8, 95, 10))\n",
    "#参数为可迭代对象，返回可迭代对象中的最大元素\n",
    "print(max(range(21)))\n",
    "print(max([98, 79, 88, 100, 56, 100]))\n",
    "print(max(\"1234568\"))\n",
    "print(max((1, 2, 3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c3d55a2-d2f9-4c36-8fd8-33db36328e60",
   "metadata": {},
   "source": [
    "####   min()函数——获取给定参数的最小值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2e79cd-0d7e-420b-84ae-5b851a74dbd3",
   "metadata": {},
   "source": [
    "min()函数用于获取给定的多个参数中的最小值或可迭代对象中的最小元素。执行与max()函数相反的操作。min()函数的语法格式如下：\n",
    "\n",
    "min(iterable, *[, default=obj, key=func])\n",
    "\n",
    "或者\n",
    "\n",
    "min(arg1, arg2, *args, *[, key=func])\n",
    "\n",
    "示例：使用min()函数获取给定参数的最小值，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "d1c2d954-b3cc-4089-979b-103fa2e87d0b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6\n",
      "-20\n",
      "-10\n",
      "0\n",
      "56\n",
      "1\n",
      "3\n"
     ]
    }
   ],
   "source": [
    " #获取多个数值中的最小值\n",
    "print(min(6, 8, 10, 6, 100))\n",
    "print(min(-20, 100/3, 7, 100))\n",
    "print(min(0.2, -10, 10, 100))\n",
    "\n",
    "#参数为可迭代对象，返回可迭代对象中的最小元素\n",
    "print(min(range(21)))\n",
    "print(min([98, 79, 88, 100, 56, 100]))\n",
    "print(min(\"1234568\"))\n",
    "print(min((3, 5, 7)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11406079-3d24-4075-8f9c-642db00fef1a",
   "metadata": {},
   "source": [
    "#### round()函数——对数值进行四舍五入求值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b12539d9-0a53-4fd4-8f6e-4d0d12cdccf3",
   "metadata": {},
   "source": [
    "round()函数用于获取数值的四舍五入值。round()函数的语法格式如下：\n",
    "\n",
    "round(number[, ndigits])\n",
    "\n",
    "示例：使用round()函数对浮点数进行四舍五入求值，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "6a78fea8-2b65-47ed-a8a2-9d28f3ea7058",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n",
      "3.0\n",
      "3.142\n",
      "-0.12\n",
      "3.33\n",
      "10.2\n",
      "10.8\n"
     ]
    }
   ],
   "source": [
    " print(round(3.1415926))       #不提供参数ndigits，四舍五入取整，返回的是整数\n",
    "#参数ndigits为0，进行四舍五入后保留0位小数，返回的是浮点型\n",
    "print(round(3.1415926,0))  \n",
    "print(round(3.1415926,3))     #保留小数点后3位\n",
    "print(round(-0.1233,2))       #保留小数点后2位\n",
    "print(round(20/6,2))          #保留小数点后2位\n",
    "print(round(10.15,1))         #保留小数点后1位\n",
    "print(round(10.85,1))         #保留小数点后1位"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f95d9812-b8a5-4baf-8499-bcadcb707e0b",
   "metadata": {},
   "source": [
    "#### pow()函数——获取两个数值的幂运算值"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9baba0e-94b6-48bc-8a24-426c3cd17892",
   "metadata": {},
   "source": [
    "pow()函数用于获取两个数值的幂运算值，如果提供可选参数z的值，则返回幂乘结果之后再对z取模。pow()函数的语法格式如下：\n",
    "\n",
    "pow(x, y[, z])\n",
    "\n",
    "示例：获取两个数值的幂运算值或其与指定整数的模值，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "a1b2f523-cb99-4c3a-b3ee-9d0a66e19c04",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n",
      "-128\n",
      "0.25\n",
      "1.624504792712471\n",
      "32.76800000000001\n"
     ]
    }
   ],
   "source": [
    "# 如果参数x和y都是整数，则结果返回的也是整数，除非y是负数；如果参数y是负数，则结果返回的是浮点数\n",
    "print(pow(3,2))        # 相当于print(3**2)\n",
    "print(pow(-2,7))\n",
    "print(pow(2,-2))\n",
    "# 如果参数x和y有一个是浮点数，则结果将转换成浮点数\n",
    "print(pow(2,0.7))\n",
    "print(pow(3.2,3))\n",
    "# 指定参数z的值，参数x和y必须为整数，且参数y不能为负数10 print(pow(2,3,3))       # 相当于print(pow(2,3)%3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da1eb92d-173d-4ccf-adde-e5881d6b52d7",
   "metadata": {},
   "source": [
    "####  divmod()函数——获取两个数值的商和余数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "baa90556-94a1-43c2-93d1-89e00be3f9b8",
   "metadata": {},
   "source": [
    "divmod()函数用于获取两个数值（非复数）相除得到的商和余数组成的元组。divmod()函数的语法格式如下：\n",
    "\n",
    "divmod(x, y)\n",
    "\n",
    "示例：使用divmod()函数获取商和余数的元组，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "d8efccd7-4b37-449f-8c4f-280c0ead64ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4, 1)\n",
      "(10, 0)\n",
      "(7.0, 1.5)\n"
     ]
    }
   ],
   "source": [
    "print(divmod(9,2))\n",
    "print(divmod(100,10))\n",
    "print(divmod(15.5,2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01697ae1-ade9-4131-9dac-474e2da71f05",
   "metadata": {},
   "source": [
    "### 其他常用函数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75dda896-01d7-4dbc-abf7-edde3e2ecdfa",
   "metadata": {},
   "source": [
    "#### date对象——表示日期的类\n",
    "date对象是Python中datetime模块提供的一个类,用于表示年、月、日的日期。date对象的语法格式如下:\n",
    "\n",
    "date(year, month, day)\n",
    "\n",
    "示例：使用date对象创建日期并进行基本操作,代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "0b8b658f-dd83-402b-bb80-ae727c374c3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "今天的日期是: 2024-09-08\n",
      "特定日期是: 2023-05-01\n",
      "--------------------------------------------------\n",
      "年份: 2024\n",
      "月份: 9\n",
      "日: 8\n",
      "--------------------------------------------------\n",
      "2024-09-08\n",
      "08/09/2024\n",
      "--------------------------------------------------\n",
      "明年的今天: 2025-09-08\n",
      "从1990年1月1日到今天的天数: 12669\n"
     ]
    }
   ],
   "source": [
    "from datetime import date\n",
    "\n",
    "# 创建date对象\n",
    "today = date.today()  # 获取当前日期\n",
    "print(\"今天的日期是:\", today)\n",
    "\n",
    "specific_date = date(2023, 5, 1)  # 创建特定日期\n",
    "print(\"特定日期是:\", specific_date)\n",
    "\n",
    "# 访问date对象的属性\n",
    "print('-'*50)\n",
    "print(\"年份:\", today.year)\n",
    "print(\"月份:\", today.month)\n",
    "print(\"日:\", today.day)\n",
    "\n",
    "# 日期格式化\n",
    "print('-'*50)\n",
    "print(today.strftime(\"%Y-%m-%d\"))  # 年-月-日\n",
    "print(today.strftime(\"%d/%m/%Y\"))  # 日/月/年\n",
    "\n",
    "# 日期计算\n",
    "print('-'*50)\n",
    "future_date = today.replace(year=today.year + 1)  # 明年的今天\n",
    "print(\"明年的今天:\", future_date)\n",
    "days_alive = (today - date(1990, 1, 1)).days  # 计算活了多少天\n",
    "print(\"从1990年1月1日到今天的天数:\", days_alive)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc8c3bc6-dc16-4a97-84d1-8067137aa0cb",
   "metadata": {},
   "source": [
    "示例：创建一个保存5个重要日期的列表,然后使用date对象的方法来计算这些日期与今天的天数差,代码如下"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "63be139b-404b-46a1-b537-bb3bb5f39229",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "今天是: 2024-09-08\n",
      "2023-01-01 已经过去 616 天\n",
      "2023-05-01 已经过去 496 天\n",
      "2023-10-01 已经过去 343 天\n",
      "2024-02-10 已经过去 211 天\n",
      "2024-06-01 已经过去 99 天\n"
     ]
    }
   ],
   "source": [
    "from datetime import date\n",
    "\n",
    "important_dates = [\n",
    "    date(2023, 1, 1),  # 新年\n",
    "    date(2023, 5, 1),  # 劳动节\n",
    "    date(2023, 10, 1), # 国庆节\n",
    "    date(2024, 2, 10), # 春节（假设）\n",
    "    date(2024, 6, 1)   # 儿童节\n",
    "]\n",
    "\n",
    "today = date.today()\n",
    "print(\"今天是:\", today)\n",
    "\n",
    "for event_date in important_dates:\n",
    "    days_difference = (event_date - today).days\n",
    "    if days_difference > 0:\n",
    "        print(f\"距离 {event_date} 还有 {days_difference} 天\")\n",
    "    elif days_difference < 0:\n",
    "        print(f\"{event_date} 已经过去 {abs(days_difference)} 天\")\n",
    "    else:\n",
    "        print(f\"今天就是 {event_date}!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cb904fc-b09e-4543-8c3c-05675c0dfc5d",
   "metadata": {},
   "source": [
    "#### time对象——表示时间的类"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "389699a4-9878-425c-bac6-6a3677282e55",
   "metadata": {},
   "source": [
    "time对象是Python中datetime模块提供的一个类,用于表示时、分、秒、微秒的时间。time对象的语法格式如下:\n",
    "\n",
    "time(hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)\n",
    "\n",
    "示例：使用time对象创建时间并进行基本操作,代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "adefd53b-960c-4a3c-b331-e904e8ceea03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "当前时间是: 19:25:20.203899\n",
      "特定时间是: 14:30:00\n",
      "--------------------------------------------------\n",
      "小时: 19\n",
      "分钟: 25\n",
      "秒: 20\n",
      "微秒: 203899\n",
      "--------------------------------------------------\n",
      "19:25:20\n",
      "07:25:20 PM\n",
      "--------------------------------------------------\n",
      "time1 < time2: True\n",
      "time1 > time2: False\n"
     ]
    }
   ],
   "source": [
    "from datetime import time\n",
    "import datetime\n",
    "\n",
    "# 创建time对象\n",
    "current_time = datetime.datetime.now().time()  # 获取当前时间\n",
    "print(\"当前时间是:\", current_time)\n",
    "\n",
    "specific_time = time(14, 30, 0)  # 创建特定时间 (14:30:00)\n",
    "print(\"特定时间是:\", specific_time)\n",
    "\n",
    "# 访问time对象的属性\n",
    "print('-'*50)\n",
    "print(\"小时:\", current_time.hour)\n",
    "print(\"分钟:\", current_time.minute)\n",
    "print(\"秒:\", current_time.second)\n",
    "print(\"微秒:\", current_time.microsecond)\n",
    "\n",
    "# 时间格式化\n",
    "print('-'*50)\n",
    "print(current_time.strftime(\"%H:%M:%S\"))  # 24小时制\n",
    "print(current_time.strftime(\"%I:%M:%S %p\"))  # 12小时制，带AM/PM\n",
    "\n",
    "# 时间比较\n",
    "print('-'*50)\n",
    "time1 = time(10, 30, 0)\n",
    "time2 = time(15, 45, 30)\n",
    "print(\"time1 < time2:\", time1 < time2)\n",
    "print(\"time1 > time2:\", time1 > time2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16c270c2-6e0e-4484-969b-00304398b200",
   "metadata": {},
   "source": [
    "示例：创建一个保存5个时间点的列表,然后使用time对象的方法来计算这些时间点与当前时间的时间差,代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "7e84df65-dbec-4060-af89-79e6658c91fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "当前时间是: 19:25:21.344488\n",
      "09:00:00 已经过去 10小时 25分钟 21秒\n",
      "12:30:00 已经过去 6小时 55分钟 21秒\n",
      "15:45:00 已经过去 3小时 40分钟 21秒\n",
      "18:00:00 已经过去 1小时 25分钟 21秒\n",
      "距离 22:00:00 还有 2小时 34分钟 38秒\n"
     ]
    }
   ],
   "source": [
    "from datetime import time, datetime, timedelta\n",
    "\n",
    "time_points = [\n",
    "    time(9, 0, 0),   # 上午9点\n",
    "    time(12, 30, 0), # 中午12点30分\n",
    "    time(15, 45, 0), # 下午3点45分\n",
    "    time(18, 0, 0),  # 下午6点\n",
    "    time(22, 0, 0)   # 晚上10点\n",
    "]\n",
    "\n",
    "current_time = datetime.now().time()\n",
    "current_datetime = datetime.now()\n",
    "print(\"当前时间是:\", current_time)\n",
    "\n",
    "for point in time_points:\n",
    "    point_datetime = datetime.combine(current_datetime.date(), point)\n",
    "    time_diff = point_datetime - current_datetime\n",
    "    \n",
    "    if time_diff > timedelta(0):\n",
    "        hours, remainder = divmod(time_diff.seconds, 3600)\n",
    "        minutes, seconds = divmod(remainder, 60)\n",
    "        print(f\"距离 {point} 还有 {hours}小时 {minutes}分钟 {seconds}秒\")\n",
    "    elif time_diff < timedelta(0):\n",
    "        time_diff = abs(time_diff)\n",
    "        hours, remainder = divmod(time_diff.seconds, 3600)\n",
    "        minutes, seconds = divmod(remainder, 60)\n",
    "        print(f\"{point} 已经过去 {hours}小时 {minutes}分钟 {seconds}秒\")\n",
    "    else:\n",
    "        print(f\"现在就是 {point}!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2983d13-000b-4658-a4ee-55d7d7c71cf2",
   "metadata": {},
   "source": [
    "#### hashlib模块——提供多种哈希算法\n",
    "hashlib模块是Python标准库中的一个模块，用于生成数据的哈希值。它支持多种哈希算法，包括MD5、SHA1、SHA256等。hashlib模块的基本使用语法如下：\n",
    "\n",
    "hashlib.algorithm(data).hexdigest()\n",
    "\n",
    "其中，algorithm 是哈希算法的名称，data 是要进行哈希计算的数据。\n",
    "\n",
    "示例：使用hashlib模块计算不同类型数据的哈希值，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "6c98c341-930a-42e5-b613-118c0b069d7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MD5 哈希值: 65a8e27d8879283831b664bd8b7f0ad4\n",
      "SHA256 哈希值: dffd6021bb2bd5b0af676290809ec3a53191dd81c7f70a4b28688a362182986f\n"
     ]
    }
   ],
   "source": [
    "import hashlib\n",
    "\n",
    "# 计算字符串的MD5哈希值\n",
    "text = \"Hello, World!\"\n",
    "md5_hash = hashlib.md5(text.encode()).hexdigest()\n",
    "print(\"MD5 哈希值:\", md5_hash)\n",
    "\n",
    "# 计算字符串的SHA256哈希值\n",
    "sha256_hash = hashlib.sha256(text.encode()).hexdigest()\n",
    "print(\"SHA256 哈希值:\", sha256_hash)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9430cc9c-284f-41e0-a993-59226566628e",
   "metadata": {},
   "source": [
    "示例：创建一个简单的密码验证系统，使用SHA256算法存储密码哈希值，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "12ad1010-67ec-4438-b5cc-00410162394d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "尝试登录 (alice, password123):\n",
      "用户名或密码错误。\n",
      "\n",
      "尝试登录 (bob, wrongpassword):\n",
      "用户名或密码错误。\n",
      "\n",
      "尝试登录 (charlie, password):\n",
      "用户名或密码错误。\n",
      "\n",
      "添加新用户 charlie\n",
      "\n",
      "尝试使用新用户登录:\n",
      "欢迎, charlie!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import hashlib\n",
    "\n",
    "def hash_password(password):\n",
    "    return hashlib.sha256(password.encode()).hexdigest()\n",
    "\n",
    "def verify_password(stored_hash, password):\n",
    "    return stored_hash == hash_password(password)\n",
    "\n",
    "# 模拟用户数据库\n",
    "user_db = {\n",
    "    'alice': '8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92',  # 'password123'的哈希值\n",
    "    'bob': '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',    # 'password'的哈希值\n",
    "}\n",
    "\n",
    "# 用户登录模拟\n",
    "def login(username, password):\n",
    "    if username in user_db:\n",
    "        stored_hash = user_db[username]\n",
    "        if verify_password(stored_hash, password):\n",
    "            print(f\"欢迎, {username}!\")\n",
    "            return True\n",
    "    print(\"用户名或密码错误。\")\n",
    "    return False\n",
    "\n",
    "# 测试登录功能\n",
    "print(\"尝试登录 (alice, password123):\")\n",
    "login('alice', 'password123')\n",
    "\n",
    "print(\"\\n尝试登录 (bob, wrongpassword):\")\n",
    "login('bob', 'wrongpassword')\n",
    "\n",
    "print(\"\\n尝试登录 (charlie, password):\")\n",
    "login('charlie', 'password')\n",
    "\n",
    "# 添加新用户\n",
    "new_username = 'charlie'\n",
    "new_password = 'securepass'\n",
    "user_db[new_username] = hash_password(new_password)\n",
    "print(f\"\\n添加新用户 {new_username}\")\n",
    "\n",
    "print(\"\\n尝试使用新用户登录:\")\n",
    "login('charlie', 'securepass')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c12889f1-f4e4-4899-aefc-f983fd4d738c",
   "metadata": {},
   "source": [
    "#### shutil模块和os模块——高级操作\n",
    "shutil模块是Python标准库中的一个模块，提供了一系列用于文件和目录操作的高级函数。它可以用于复制、移动、删除文件和目录，以及执行其他文件系统操作。shutil模块的基本使用不需要特定的语法格式，而是提供了多个独立的函数。\n",
    "\n",
    "os 模块是 Python 标准库中的一个模块，提供了许多与操作系统交互的函数。它允许你以独立于平台的方式使用操作系统功能，例如文件和目录操作、进程管理、环境变量等。\n",
    "\n",
    "示例：进行基本的文件和目录操作，代码如下。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "cab052f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import shutil\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "058e65e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 创建一个测试目录和文件\n",
    "os.makedirs('test_dir', exist_ok=True)\n",
    "with open('test_dir/test_file.txt', 'w') as f:\n",
    "    f.write('This is a test file.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "e855f044",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "文件复制完成\n"
     ]
    }
   ],
   "source": [
    "# 复制文件\n",
    "shutil.copy('test_dir/test_file.txt', 'test_dir/test_file_copy.txt')\n",
    "print(\"文件复制完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "1f4315c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "目录复制完成\n"
     ]
    }
   ],
   "source": [
    "# 复制整个目录\n",
    "shutil.copytree('test_dir', 'test_dir_copy')\n",
    "print(\"目录复制完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "b7b6314e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "文件移动完成\n"
     ]
    }
   ],
   "source": [
    "# 移动文件\n",
    "shutil.move('test_dir/test_file_copy.txt', 'test_dir_copy/test_file_moved.txt')\n",
    "print(\"文件移动完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "20cd26e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "文件重命名完成\n"
     ]
    }
   ],
   "source": [
    "# 重命名文件\n",
    "os.rename('test_dir/test_file.txt', 'test_dir/test_file_renamed.txt')\n",
    "print(\"文件重命名完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "47fb407f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "文件删除完成\n"
     ]
    }
   ],
   "source": [
    "# 删除文件\n",
    "os.remove('test_dir_copy/test_file_moved.txt')\n",
    "print(\"文件删除完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "409371da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "目录删除完成\n"
     ]
    }
   ],
   "source": [
    "# 删除整个目录\n",
    "shutil.rmtree('test_dir_copy')\n",
    "print(\"目录删除完成\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "9cb62773",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "文件大小: 20 字节\n"
     ]
    }
   ],
   "source": [
    "# 获取文件大小\n",
    "file_size = os.path.getsize('test_dir/test_file_renamed.txt')\n",
    "print(f\"文件大小: {file_size} 字节\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "f860b9d2-aa1c-475c-b504-3eac0a808b62",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "目录大小: 293389848576 字节\n"
     ]
    }
   ],
   "source": [
    "# 获取目录大小\n",
    "dir_size = shutil.disk_usage('test_dir').used\n",
    "print(f\"目录大小: {dir_size} 字节\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4fb531e-32a1-4238-a33f-7fd83e6464ed",
   "metadata": {},
   "source": [
    "## 异常处理及程序调试"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41e85581-191e-4af7-9475-ee2c62f375ab",
   "metadata": {},
   "source": [
    "在编程过程中为了增加友好性，在程序出现Bug时一般不会将错误信息显示给用户，而是通过异常处理语句向用户提示相关信息。编写完成的程序在进行实际运行前，用手动或编译程序等方法进行测试，修正语法错误和逻辑错误，这个过程就是调试。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8cf36dbd-e2e9-4ae2-b8dd-bcc39486278d",
   "metadata": {},
   "source": [
    "### 异常概述"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "337422c4-0d7c-4c25-be0a-5b114885e7ac",
   "metadata": {},
   "source": [
    "在程序运行过程中，经常会遇到各种各样的错误，这些错误统称为“异常”。这些异常有的是开发者一时疏忽将关键字敲错导致的，这类错误多数产生的是“SyntaxError: invalid  syntax”（无效的语法）异常，这将直接导致程序不能运行。这类异常是显式的，在开发阶段很容易发现。还有一类异常是隐式的，通常与开发者的操作有关。\n",
    "\n",
    "例如，定义一个除法运算的函数division()，在该函数中，首先输入被除数和除数，然后应用除法运算进行计算，最后调用division()函数，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "c44c1d3e-081c-400a-87b3-9ca9f7ae5ee1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入被除数：\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "invalid literal for int() with base 10: ''",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[149], line 7\u001b[0m\n\u001b[0;32m      5\u001b[0m     \u001b[38;5;28mprint\u001b[39m(result)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m----> 7\u001b[0m     division()\n",
      "Cell \u001b[1;32mIn[149], line 2\u001b[0m, in \u001b[0;36mdivision\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdivision\u001b[39m():\n\u001b[1;32m----> 2\u001b[0m     num1 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28minput\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m请输入被除数：\u001b[39m\u001b[38;5;124m\"\u001b[39m))      \u001b[38;5;66;03m#      用户输入提示\u001b[39;00m\n\u001b[0;32m      3\u001b[0m     num2 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28minput\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m请输入除数：\u001b[39m\u001b[38;5;124m\"\u001b[39m))\n\u001b[0;32m      4\u001b[0m     result \u001b[38;5;241m=\u001b[39m num1\u001b[38;5;241m/\u001b[39m\u001b[38;5;241m/\u001b[39mnum2  \u001b[38;5;66;03m# 执行除法运算\u001b[39;00m\n",
      "\u001b[1;31mValueError\u001b[0m: invalid literal for int() with base 10: ''"
     ]
    }
   ],
   "source": [
    "def division():\n",
    "    num1 = int(input(\"请输入被除数：\"))      #      用户输入提示\n",
    "    num2 = int(input(\"请输入除数：\"))\n",
    "    result = num1//num2  # 执行除法运算\n",
    "    print(result)\n",
    "if __name__ == '__main__':\n",
    "    division()    # 调用函数"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c986e62-2b7a-437b-b6a0-edebbe3da8b0",
   "metadata": {},
   "source": [
    "### 异常处理语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2445c87f-767c-43ba-a9c3-39a4f03bf861",
   "metadata": {},
   "source": [
    "在程序开发时，有些错误并不是每次运行都会出现的。例如刚才的示例示例，只要输入的数据符合程序的要求，程序就可以正常运行；但如果输入的数据不符合程序要求，程序就会抛出异常并停止运行。这时，就需要在开发程序时对可能出现异常的情况进行处理。下面将详细介绍Python提供的异常处理语句。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ba85a99-3f7c-4c0e-a9fa-b7de1532bcb4",
   "metadata": {},
   "source": [
    "#### try...except语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bf8936d-75cf-452a-b7f7-5a0a70b9c82e",
   "metadata": {},
   "source": [
    "Python提供了try...except语句用于捕获并处理异常。在使用时，把可能产生异常的代码放在try语句块中，把处理结果放在except语句块中，这样，当try语句块中的代码出现错误时，就会执行except语句块中的代码，如果try语句块中的代码没有错误，那么except语句块将不会执行，语法格式如下：\n",
    "<code>\n",
    "try:\n",
    "    block1\n",
    "except [ExceptionName [as alias]]：\n",
    "    block2\n",
    "\n",
    "ExceptionName  [as  alias]：可选参数，用于指定要捕获的异常。其中，ExceptionName表示要捕获的异常名称，如果在其右侧添加“as  alias”，则表示为当前的异常指定一个别名，通过该别名，可以记录异常的具体内容。\n",
    "\n",
    "例如，在执行除法运算时，对可能出现的异常进行处理，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "16bf4fac-6589-420b-a29d-00b882c09e11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入被除数：\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "invalid literal for int() with base 10: ''",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[150], line 8\u001b[0m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m      7\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:   \u001b[38;5;66;03m# 捕获异常\u001b[39;00m\n\u001b[1;32m----> 8\u001b[0m         division() \u001b[38;5;66;03m# 调用除法的函数\u001b[39;00m\n\u001b[0;32m      9\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mZeroDivisionError\u001b[39;00m:   \u001b[38;5;66;03m# 处理异常\u001b[39;00m\n\u001b[0;32m     10\u001b[0m         \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m输入错误：除数不能为0\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "Cell \u001b[1;32mIn[150], line 2\u001b[0m, in \u001b[0;36mdivision\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdivision\u001b[39m():\n\u001b[1;32m----> 2\u001b[0m     num1 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28minput\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m请输入被除数：\u001b[39m\u001b[38;5;124m\"\u001b[39m))      \u001b[38;5;66;03m#      用户输入提示\u001b[39;00m\n\u001b[0;32m      3\u001b[0m     num2 \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28minput\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m请输入除数：\u001b[39m\u001b[38;5;124m\"\u001b[39m))\n\u001b[0;32m      4\u001b[0m     result \u001b[38;5;241m=\u001b[39m num1\u001b[38;5;241m/\u001b[39m\u001b[38;5;241m/\u001b[39mnum2  \u001b[38;5;66;03m# 执行除法运算\u001b[39;00m\n",
      "\u001b[1;31mValueError\u001b[0m: invalid literal for int() with base 10: ''"
     ]
    }
   ],
   "source": [
    "def division():\n",
    "    num1 = int(input(\"请输入被除数：\"))      #      用户输入提示\n",
    "    num2 = int(input(\"请输入除数：\"))\n",
    "    result = num1//num2  # 执行除法运算\n",
    "    print(result)\n",
    "if __name__ == '__main__':\n",
    "    try:   # 捕获异常\n",
    "        division() # 调用除法的函数\n",
    "    except ZeroDivisionError:   # 处理异常\n",
    "        print(\"输入错误：除数不能为0\")         #  输出错误原因"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c625803-638a-4657-bd5a-d19b6d7da432",
   "metadata": {},
   "source": [
    "#### try...except...else语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a6d36fbd-4190-4d29-894b-4e43e22aebf8",
   "metadata": {},
   "source": [
    "在Python中，还有另一种异常处理结构，它是try...except...else语句，也就是在try...except语句的基础上再添加一个else子句，用于指定当try语句块中没有发现异常时要执行的语句块。else语句块中的内容在try语句中发现异常时，将不被执行。\n",
    "\n",
    "例如，在执行除法运算时，实现当执行division()函数没有抛出异常时，输出文字“程序执行完成......”，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "c3dc461d-3ef0-4c3b-83d6-bd7cc0813196",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入被除数：\n",
      "输入错误： invalid literal for int() with base 10: ''\n"
     ]
    }
   ],
   "source": [
    "def division():\n",
    "    num1 = int(input(\"请输入被除数：\"))      # 用户输入提示\n",
    "    num2 = int(input(\"请输入除数：\"))\n",
    "    result = num1/num2   # 执行除法运算\n",
    "    print(result)\n",
    "if __name__ == '__main__':\n",
    "    try:   # 捕获异常\n",
    "        division()      # 调用函数\n",
    "    except ZeroDivisionError:   # 处理异常\n",
    "        print(\"\\n出错了：除数不能为0！\")\n",
    "    except ValueError as e:    # 处理ValueError异常\n",
    "        print(\"输入错误：\", e)               # 输出错误原因\n",
    "    else:   # 当没有抛出异常时执行\n",
    "        print(\"程序执行完成......\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bb33244-9163-4be3-8416-c1f613f2fa39",
   "metadata": {},
   "source": [
    "#### try...except...finally语句"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4efde01e-fb0b-40fc-b5e9-476686c8e89e",
   "metadata": {},
   "source": [
    "完整的异常处理语句应该包含finally代码块，在通常情况下，无论程序中有无异常产生，finally代码块中的代码都会被执行，其语法格式如下：\n",
    "<code>\n",
    "try:    \n",
    "    block1\n",
    "except [ExceptionName [as alias]]：    \n",
    "    block2\n",
    "finally:    \n",
    "    block3\n",
    "\n",
    "try...except...finally语句并不复杂，它只是比try...except语句多了一个finally代码块，如果程序中有一些在任何情形中都必须执行的代码，则可以将它们放在finally代码块中。\n",
    "\n",
    "例如，在执行除法运算时，实现当在执行division()函数时无论是否抛出异常，都输出文字“释放资源，并关闭”，修改后的代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "0397e60b-1dcd-4cb9-9022-491c26e2894c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入被除数：\n",
      "输入错误： invalid literal for int() with base 10: ''\n",
      "释放资源，并关闭\n"
     ]
    }
   ],
   "source": [
    "def division():\n",
    "    num1 = int(input(\"请输入被除数：\"))      # 用户输入提示\n",
    "    num2 = int(input(\"请输入除数：\"))\n",
    "    result = num1/num2   # 执行除法运算\n",
    "    print(result)\n",
    "if __name__ == '__main__':\n",
    "    try:   # 捕获异常\n",
    "        division()      # 调用函数\n",
    "    except ZeroDivisionError:   # 处理异常\n",
    "        print(\"\\n出错了：除数不能为0！\")\n",
    "    except ValueError as e:    # 处理ValueError异常\n",
    "        print(\"输入错误：\", e)               # 输出错误原因\n",
    "    else:   # 当没有抛出异常时执行\n",
    "        print(\"程序执行完成......\")\n",
    "    finally:       # 无论是否抛出异常都执行\n",
    "        print(\"释放资源，并关闭\")"
   ]
  },
  {
   "attachments": {
    "5fbc8cee-f566-49e1-9646-7c37e6df8c7a.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "29410ec1-5529-4914-b0e1-7870f987a85a",
   "metadata": {},
   "source": [
    "至此，已经介绍了异常处理语句的try...except、try...except...else和try...except...finally形式。\n",
    "\n",
    "![image.png](attachment:5fbc8cee-f566-49e1-9646-7c37e6df8c7a.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7875e8c-18cf-47b5-bae2-a5684d2116f1",
   "metadata": {},
   "source": [
    "#### 使用raise语句抛出异常"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3268d463-9a5f-40f0-9638-01ff7beb050e",
   "metadata": {},
   "source": [
    "如果知道某个函数或方法可能会产生异常，但不想在当前函数或方法中处理这个异常，则可以使用raise语句在函数或方法中抛出异常。raise语句的语法格式如下：\n",
    "\n",
    "raise [ExceptionName[(reason)]]\n",
    "\n",
    "其中，ExceptionName[(reason)]为可选参数，用于指定抛出的异常名称，以及异常信息的相关描述。如果省略该可选参数，就会把当前的错误原样抛出。\n",
    "\n",
    "例如，在执行除法运算时，在division()函数中实现当除数为0时，使用raise语句抛出一个ValueError异常，然后在最后一行语句的下方添加except语句处理ValueError异常，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "ac33425f-3001-4652-ad99-f007c2162dee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入被除数：\n",
      "输入错误： invalid literal for int() with base 10: ''\n"
     ]
    }
   ],
   "source": [
    "def division():\n",
    "    num1 = int(input(\"请输入被除数：\"))      # 用户输入提示\n",
    "    num2 = int(input(\"请输入除数：\"))\n",
    "    if num2 == 0:\n",
    "        raise ValueError(\"除数不能为0\")\n",
    "    result = num1/num2   # 执行除法运算\n",
    "    print(result)\n",
    "if __name__ == '__main__':\n",
    "    try:   # 捕获异常\n",
    "        division()      # 调用函数\n",
    "    except ZeroDivisionError:   # 处理异常\n",
    "        print(\"\\n出错了：除数不能为0！\")\n",
    "    except ValueError as e:    # 处理ValueError异常\n",
    "        print(\"输入错误：\", e)               # 输出错误原因"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35117b68-f668-429a-b882-7f3e3ff0cf53",
   "metadata": {},
   "source": [
    "## 模块"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c320eaa-f814-44a0-9d32-5d055266d162",
   "metadata": {},
   "source": [
    "Python提供了强大的模块支持，主要体现为不仅在Python标准库中包含了大量的模块（又称为标准模块），而且还有很多第三方模块，另外程序员也可以创建自定义模块。通过这些强大的模块支持会使程序员极大地提高程序的开发效率。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11f17a69-c386-4ae9-bda5-aa92c799b87d",
   "metadata": {},
   "source": [
    "### 模块概述"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd84dd9c-93f1-4d72-8f84-8e8ef13dc67d",
   "metadata": {},
   "source": [
    "在Python中，一个扩展名为“.py”的文件就称为一个模块。在通常情况下，我们把能够实现某一特定功能的代码存储在一个文件中作为一个模块，从而方便其他程序和脚本导入并使用。另外，使用模块也可以避免函数名和变量名冲突。\n",
    "\n",
    "通过前面的学习，我们知道Python代码可以写在一个文件中。但是随着程序不断变大，为了便于维护，需要将其分为多个文件，这样可以提高代码的可维护性。另外，使用模块还可以提高代码的可重用性，即编写好一个模块后，只要是实现该功能的程序，都可以导入这个模块来实现。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e609c4d1-0bfb-44d3-b316-814a851389e3",
   "metadata": {},
   "source": [
    "### 自定义模块"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "705d7609-d2aa-45ea-804d-e6ab52c367f8",
   "metadata": {},
   "source": [
    "创建模块是指将模块中相关的代码（变量定义和函数定义等）编写在一个单独的文件中，并且将该文件命名为“模块名+.py”的形式，也就是说，创建模块实际就是创建一个“.py”文件。"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55ea58fd-1cc6-4018-8079-e0540bf76f57",
   "metadata": {},
   "source": [
    "#### 使用import语句导入模块"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09d3c36a-2333-4bdb-af6d-edb08ed0e3d2",
   "metadata": {},
   "source": [
    "创建模块后，就可以在其他程序中使用该模块了。要使用模块需要先以模块的形式加载模块中的代码，可以使用import语句实现。import语句的语法格式如下：\n",
    "\n",
    "import modulename [as alias]\n",
    "\n",
    "其中，modulename表示要导入的模块的名称；[as  alias]表示给模块起的别名，通过该别名也可以使用模块。\n",
    "\n",
    "例如，导入一个名称为test的模块，并执行该模块中的getInfo()函数，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "f9dd8562-1deb-4e06-a664-072acca41e4c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import test "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca109806-29bb-4cb4-9040-331e7acfa644",
   "metadata": {},
   "source": [
    "使用import语句还可以一次导入多个模块，在导入多个模块时，模块名之间使用逗号“,”分隔。例如，分别创建test.py、tips.py和differenttree.py  3个模块文件，想要将这3个模块全部导入，可以使用如下代码："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "0bfc4eed-acac-4de8-af49-958015b226a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import test,os,math"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee55ea80-8b49-4327-b043-1bf019380826",
   "metadata": {},
   "source": [
    "#### 使用from...import语句导入模块"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed881f7b-576d-4cc3-8cb3-407fda93b050",
   "metadata": {},
   "source": [
    "在使用import语句导入模块时，每执行一条import语句都会创建一个新的命名空间（Namespace），并且在该命名空间中执行与“.py”文件相关的所有语句。在执行时，需要在具体的变量、函数和类名前添加“模块名.”前缀。如果不想在每次导入模块时都创建一个新的命名空间，而是将具体的定义导入当前的命名空间中，这时可以使用from...import语句。使用from...import语句导入模块后，不需要添加前缀，直接通过具体的变量、函数、类名等访问即可。\n",
    "\n",
    "from...import语句的语法格式如下：\n",
    "\n",
    "from modelname import member\n",
    "\n",
    "例如，通过下面的3条语句可以从模块中导入指定的定义，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "bcb7d778-d059-4cf2-8a09-bb3019cc1f8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from datetime import date        # 导入test模块中的getInfo()函数微课视频\n",
    "from math import asin,exp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b71b7444-3a41-43c8-9414-1c658baec9a4",
   "metadata": {},
   "source": [
    "### 以主程序的形式执行"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33ab6134-a4f9-49a4-8855-a788d168afe8",
   "metadata": {},
   "source": [
    "创建一个模块，名称为christmastree，在该模块中，首先定义一个全局变量，然后创建一个名称为fun_christmastree()的函数，最后通过print()函数输出一些内容，代码如下："
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "2164ca41-f4d7-4ca4-a10f-e6ff6101d9ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "下雪了......\n",
      "\n",
      "=============== 开始做梦...... =============\n",
      "\n",
      "挂上彩灯、礼物......我变成一棵圣诞树 @^.^@ \n",
      "\n",
      "=============== 梦醒了...... ===============\n",
      "\n",
      "我身上落满雪花，我是一棵松树 -_- \n"
     ]
    }
   ],
   "source": [
    "import christmastree           # 导入christmastree模块"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "937605bf-41f4-4ca3-a8ed-ae1143dd22db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "全局变量的值为： 我身上落满雪花，我是一棵松树 -_- \n"
     ]
    }
   ],
   "source": [
    "print('全局变量的值为：',christmastree.pinetree)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
